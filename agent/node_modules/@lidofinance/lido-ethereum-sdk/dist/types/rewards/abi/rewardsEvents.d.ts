export declare const rewardsEventsAbi: readonly [{
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly name: "sharesValue";
        readonly type: "uint256";
    }];
    readonly name: "TransferShares";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "reportTimestamp";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "timeElapsed";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "preTotalShares";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "preTotalEther";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "postTotalShares";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "postTotalEther";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "sharesMintedAsFees";
        readonly type: "uint256";
    }];
    readonly name: "TokenRebased";
    readonly type: "event";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly constant: true;
    readonly inputs: readonly [];
    readonly name: "getTotalShares";
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly constant: true;
    readonly inputs: readonly [];
    readonly name: "getTotalPooledEther";
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly constant: true;
    readonly inputs: readonly [{
        readonly name: "_account";
        readonly type: "address";
    }];
    readonly name: "sharesOf";
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
}];
//# sourceMappingURL=rewardsEvents.d.ts.map