export declare const StethEventsAbi: readonly [{
    readonly payable: true;
    readonly stateMutability: "payable";
    readonly type: "fallback";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [];
    readonly name: "StakingPaused";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [];
    readonly name: "StakingResumed";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly name: "maxStakeLimit";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "stakeLimitIncreasePerBlock";
        readonly type: "uint256";
    }];
    readonly name: "StakingLimitSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [];
    readonly name: "StakingLimitRemoved";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "reportTimestamp";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "preCLValidators";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "postCLValidators";
        readonly type: "uint256";
    }];
    readonly name: "CLValidatorsUpdated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly name: "depositedValidators";
        readonly type: "uint256";
    }];
    readonly name: "DepositedValidatorsChanged";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "reportTimestamp";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "preCLBalance";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "postCLBalance";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "withdrawalsWithdrawn";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "executionLayerRewardsWithdrawn";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "postBufferedEther";
        readonly type: "uint256";
    }];
    readonly name: "ETHDistributed";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "reportTimestamp";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "timeElapsed";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "preTotalShares";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "preTotalEther";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "postTotalShares";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "postTotalEther";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "sharesMintedAsFees";
        readonly type: "uint256";
    }];
    readonly name: "TokenRebased";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly name: "lidoLocator";
        readonly type: "address";
    }];
    readonly name: "LidoLocatorSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "ELRewardsReceived";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "WithdrawalsReceived";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly name: "amount";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "referral";
        readonly type: "address";
    }];
    readonly name: "Submitted";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "Unbuffered";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "executor";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly name: "script";
        readonly type: "bytes";
    }, {
        readonly indexed: false;
        readonly name: "input";
        readonly type: "bytes";
    }, {
        readonly indexed: false;
        readonly name: "returnData";
        readonly type: "bytes";
    }];
    readonly name: "ScriptResult";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "vault";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "RecoverToVault";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly name: "eip712StETH";
        readonly type: "address";
    }];
    readonly name: "EIP712StETHInitialized";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly name: "sharesValue";
        readonly type: "uint256";
    }];
    readonly name: "TransferShares";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly name: "preRebaseTokenAmount";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "postRebaseTokenAmount";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly name: "sharesAmount";
        readonly type: "uint256";
    }];
    readonly name: "SharesBurnt";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [];
    readonly name: "Stopped";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [];
    readonly name: "Resumed";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly name: "value";
        readonly type: "uint256";
    }];
    readonly name: "Transfer";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly name: "spender";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly name: "value";
        readonly type: "uint256";
    }];
    readonly name: "Approval";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly name: "version";
        readonly type: "uint256";
    }];
    readonly name: "ContractVersionSet";
    readonly type: "event";
}];
//# sourceMappingURL=stethEvents.d.ts.map