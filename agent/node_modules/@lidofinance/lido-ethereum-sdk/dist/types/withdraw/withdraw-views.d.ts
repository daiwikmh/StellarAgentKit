import { BusModule } from './bus-module.js';
import { type RequestStatusWithId } from './types.js';
import { type AccountValue } from '../core/index.js';
export declare class LidoSDKWithdrawViews extends BusModule {
    getWithdrawalRequestsIds(props: {
        account?: AccountValue;
    }): Promise<readonly bigint[]>;
    getLastCheckpointIndex(): Promise<bigint>;
    getWithdrawalStatus(props: {
        requestsIds: readonly bigint[];
    }): Promise<readonly RequestStatusWithId[]>;
    findCheckpointHints(props: {
        sortedIds: bigint[];
        firstIndex?: bigint;
        lastIndex?: bigint;
    }): Promise<readonly bigint[]>;
    getClaimableEther(props: {
        sortedIds: bigint[];
        hints: readonly bigint[];
    }): Promise<readonly bigint[]>;
    getUnfinalizedStETH(): Promise<bigint>;
    minStethWithdrawalAmount(): Promise<bigint>;
    minWStethWithdrawalAmount(): Promise<bigint>;
    maxStethWithdrawalAmount(): Promise<bigint>;
    maxWStethWithdrawalAmount(): Promise<bigint>;
    isPaused(): Promise<boolean>;
    isBunkerModeActive(): Promise<boolean>;
    isTurboModeActive(): Promise<boolean>;
}
//# sourceMappingURL=withdraw-views.d.ts.map