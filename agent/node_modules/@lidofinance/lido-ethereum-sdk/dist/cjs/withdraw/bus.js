"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bus = void 0;
const withdraw_contract_js_1 = require("./withdraw-contract.js");
const withdraw_views_js_1 = require("./withdraw-views.js");
const withdraw_requests_info_js_1 = require("./withdraw-requests-info.js");
const claim_js_1 = require("./claim/claim.js");
const index_js_1 = require("./request/index.js");
const sdk_module_js_1 = require("../common/class-primitives/sdk-module.js");
const withdraw_waiting_time_js_1 = require("./withdraw-waiting-time.js");
class Bus extends sdk_module_js_1.LidoSDKModule {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractInstance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "viewsInstance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "requestsInfoInstance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "approvalInstance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "claimInstance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "requestInstance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "waitingTimeInstance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
    get contract() {
        if (!this.contractInstance) {
            this.contractInstance = new withdraw_contract_js_1.LidoSDKWithdrawContract({
                bus: this,
                version: this.version,
            });
        }
        return this.contractInstance;
    }
    get views() {
        if (!this.viewsInstance) {
            this.viewsInstance = new withdraw_views_js_1.LidoSDKWithdrawViews({
                bus: this,
                version: this.version,
            });
        }
        return this.viewsInstance;
    }
    get requestsInfo() {
        if (!this.requestsInfoInstance) {
            this.requestsInfoInstance = new withdraw_requests_info_js_1.LidoSDKWithdrawRequestsInfo({
                bus: this,
                version: this.version,
            });
        }
        return this.requestsInfoInstance;
    }
    get approval() {
        if (!this.approvalInstance) {
            this.approvalInstance = new index_js_1.LidoSDKWithdrawApprove({
                bus: this,
                version: this.version,
            });
        }
        return this.approvalInstance;
    }
    get claim() {
        if (!this.claimInstance) {
            this.claimInstance = new claim_js_1.LidoSDKWithdrawClaim({
                bus: this,
                version: this.version,
            });
        }
        return this.claimInstance;
    }
    get request() {
        if (!this.requestInstance) {
            this.requestInstance = new index_js_1.LidoSDKWithdrawRequest({
                bus: this,
                version: this.version,
            });
        }
        return this.requestInstance;
    }
    get waitingTime() {
        if (!this.waitingTimeInstance) {
            this.waitingTimeInstance = new withdraw_waiting_time_js_1.LidoSDKWithdrawWaitingTime({
                bus: this,
                version: this.version,
            });
        }
        return this.waitingTimeInstance;
    }
}
exports.Bus = Bus;
//# sourceMappingURL=bus.js.map