import { LidoSDKCore } from './core/index.js';
import { LidoSDKStake } from './stake/index.js';
import { LidoSDKWrap } from './wrap/index.js';
import { LidoSDKWithdraw } from './withdraw/index.js';
import { LidoSDKstETH, LidoSDKwstETH } from './erc20/index.js';
import { LidoSDKUnstETH } from './unsteth/index.js';
import { LidoSDKEvents } from './events/index.js';
import { LidoSDKStatistics } from './statistics/index.js';
import { LidoSDKRewards } from './rewards/index.js';
import { LidoSDKShares } from './shares/shares.js';
import { version } from './version.js';
import { LidoSDKL2 } from './l2/l2.js';
export class LidoSDK {
    constructor(props) {
        Object.defineProperty(this, "core", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "stake", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "wrap", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "withdraw", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "steth", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "wsteth", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "shares", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "unsteth", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "events", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "statistics", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "rewards", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "l2", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        // Core functionality
        this.core = new LidoSDKCore(props, version);
        const core = this.core;
        // Staking functionality
        this.stake = new LidoSDKStake({ ...props, core });
        // Wrap functionality
        this.wrap = new LidoSDKWrap({ ...props, core });
        // Withdrawals functionality
        this.withdraw = new LidoSDKWithdraw({ ...props, core });
        // Tokens functionality
        this.steth = new LidoSDKstETH({ ...props, core });
        this.wsteth = new LidoSDKwstETH({ ...props, core });
        this.unsteth = new LidoSDKUnstETH({ ...props, core });
        this.shares = new LidoSDKShares({ ...props, core });
        // Events functionality
        this.events = new LidoSDKEvents({ ...props, core });
        // Statistic functionality
        this.statistics = new LidoSDKStatistics({ ...props, core });
        // Rewards functionality
        this.rewards = new LidoSDKRewards({ ...props, core });
        // L2 functionality
        this.l2 = new LidoSDKL2({ ...props, core });
    }
}
//# sourceMappingURL=sdk.js.map