var ls=Object.create;var Bi=Object.defineProperty;var ds=Object.getOwnPropertyDescriptor;var ps=Object.getOwnPropertyNames;var gs=Object.getPrototypeOf,fs=Object.prototype.hasOwnProperty;var Bt=(s,i)=>()=>(s&&(i=s(s=0)),i);var Nr=(s,i)=>()=>(i||s((i={exports:{}}).exports,i),i.exports);var ys=(s,i,r,a)=>{if(i&&typeof i=="object"||typeof i=="function")for(let o of ps(i))!fs.call(s,o)&&o!==r&&Bi(s,o,{get:()=>i[o],enumerable:!(a=ds(i,o))||a.enumerable});return s};var Le=(s,i,r)=>(r=s!=null?ls(gs(s)):{},ys(i||!s||!s.__esModule?Bi(r,"default",{value:s,enumerable:!0}):r,s));var g=Bt(()=>{});function hs(s,i){this.fun=s,this.array=i}function Ii(s){var i=Math.floor((Date.now()-It.now())*.001),r=It.now()*.001,a=Math.floor(r)+i,o=Math.floor(r%1*1e9);return s&&(a=a-s[0],o=o-s[1],o<0&&(a--,o+=Wr)),[a,o]}var Cc,It,Dr,Wr,Ri=Bt(()=>{g();y();f();hs.prototype.run=function(){this.fun.apply(null,this.array)};Cc={PATH:"/usr/bin",LANG:typeof navigator<"u"?navigator.language+".UTF-8":void 0,PWD:"/",HOME:"/home",TMP:"/tmp"},It={now:typeof performance<"u"?performance.now.bind(performance):void 0,timing:typeof performance<"u"?performance.timing:void 0};It.now===void 0&&(Dr=Date.now(),It.timing&&It.timing.navigationStart&&(Dr=It.timing.navigationStart),It.now=()=>Date.now()-Dr);Wr=1e9;Ii.bigint=function(s){var i=Ii(s);return typeof BigInt>"u"?i[0]*Wr+i[1]:BigInt(i[0]*Wr)+BigInt(i[1])}});var f=Bt(()=>{Ri()});function Ts(){if(vi)return tn;vi=!0,tn.byteLength=p,tn.toByteArray=b,tn.fromByteArray=x;for(var s=[],i=[],r=typeof Uint8Array<"u"?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,m=a.length;o<m;++o)s[o]=a[o],i[a.charCodeAt(o)]=o;i[45]=62,i[95]=63;function u(B){var v=B.length;if(v%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var M=B.indexOf("=");M===-1&&(M=v);var F=M===v?0:4-M%4;return[M,F]}function p(B){var v=u(B),M=v[0],F=v[1];return(M+F)*3/4-F}function h(B,v,M){return(v+M)*3/4-M}function b(B){var v,M=u(B),F=M[0],W=M[1],D=new r(h(B,F,W)),U=0,K=W>0?F-4:F,j;for(j=0;j<K;j+=4)v=i[B.charCodeAt(j)]<<18|i[B.charCodeAt(j+1)]<<12|i[B.charCodeAt(j+2)]<<6|i[B.charCodeAt(j+3)],D[U++]=v>>16&255,D[U++]=v>>8&255,D[U++]=v&255;return W===2&&(v=i[B.charCodeAt(j)]<<2|i[B.charCodeAt(j+1)]>>4,D[U++]=v&255),W===1&&(v=i[B.charCodeAt(j)]<<10|i[B.charCodeAt(j+1)]<<4|i[B.charCodeAt(j+2)]>>2,D[U++]=v>>8&255,D[U++]=v&255),D}function S(B){return s[B>>18&63]+s[B>>12&63]+s[B>>6&63]+s[B&63]}function C(B,v,M){for(var F,W=[],D=v;D<M;D+=3)F=(B[D]<<16&16711680)+(B[D+1]<<8&65280)+(B[D+2]&255),W.push(S(F));return W.join("")}function x(B){for(var v,M=B.length,F=M%3,W=[],D=16383,U=0,K=M-F;U<K;U+=D)W.push(C(B,U,U+D>K?K:U+D));return F===1?(v=B[M-1],W.push(s[v>>2]+s[v<<4&63]+"==")):F===2&&(v=(B[M-2]<<8)+B[M-1],W.push(s[v>>10]+s[v>>4&63]+s[v<<2&63]+"=")),W.join("")}return tn}function bs(){if(ki)return Bn;ki=!0;return Bn.read=function(s,i,r,a,o){var m,u,p=o*8-a-1,h=(1<<p)-1,b=h>>1,S=-7,C=r?o-1:0,x=r?-1:1,B=s[i+C];for(C+=x,m=B&(1<<-S)-1,B>>=-S,S+=p;S>0;m=m*256+s[i+C],C+=x,S-=8);for(u=m&(1<<-S)-1,m>>=-S,S+=a;S>0;u=u*256+s[i+C],C+=x,S-=8);if(m===0)m=1-b;else{if(m===h)return u?NaN:(B?-1:1)*(1/0);u=u+Math.pow(2,a),m=m-b}return(B?-1:1)*u*Math.pow(2,m-a)},Bn.write=function(s,i,r,a,o,m){var u,p,h,b=m*8-o-1,S=(1<<b)-1,C=S>>1,x=o===23?Math.pow(2,-24)-Math.pow(2,-77):0,B=a?0:m-1,v=a?1:-1,M=i<0||i===0&&1/i<0?1:0;for(i=Math.abs(i),isNaN(i)||i===1/0?(p=isNaN(i)?1:0,u=S):(u=Math.floor(Math.log(i)/Math.LN2),i*(h=Math.pow(2,-u))<1&&(u--,h*=2),u+C>=1?i+=x/h:i+=x*Math.pow(2,1-C),i*h>=2&&(u++,h/=2),u+C>=S?(p=0,u=S):u+C>=1?(p=(i*h-1)*Math.pow(2,o),u=u+C):(p=i*Math.pow(2,C-1)*Math.pow(2,o),u=0));o>=8;s[r+B]=p&255,B+=v,p/=256,o-=8);for(u=u<<o|p,b+=o;b>0;s[r+B]=u&255,B+=v,u/=256,b-=8);s[r+B-v]|=M*128},Bn}function Fi(){if(xi)return Rt;xi=!0;let s=Ts(),i=bs(),r=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;Rt.Buffer=u,Rt.SlowBuffer=W,Rt.INSPECT_MAX_BYTES=50;let a=2147483647;Rt.kMaxLength=a,u.TYPED_ARRAY_SUPPORT=o(),!u.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function o(){try{let l=new Uint8Array(1),c={foo:function(){return 42}};return Object.setPrototypeOf(c,Uint8Array.prototype),Object.setPrototypeOf(l,c),l.foo()===42}catch{return!1}}Object.defineProperty(u.prototype,"parent",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,"offset",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}});function m(l){if(l>a)throw new RangeError('The value "'+l+'" is invalid for option "size"');let c=new Uint8Array(l);return Object.setPrototypeOf(c,u.prototype),c}function u(l,c,A){if(typeof l=="number"){if(typeof c=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return S(l)}return p(l,c,A)}u.poolSize=8192;function p(l,c,A){if(typeof l=="string")return C(l,c);if(ArrayBuffer.isView(l))return B(l);if(l==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof l);if(qe(l,ArrayBuffer)||l&&qe(l.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(qe(l,SharedArrayBuffer)||l&&qe(l.buffer,SharedArrayBuffer)))return v(l,c,A);if(typeof l=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');let d=l.valueOf&&l.valueOf();if(d!=null&&d!==l)return u.from(d,c,A);let T=M(l);if(T)return T;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof l[Symbol.toPrimitive]=="function")return u.from(l[Symbol.toPrimitive]("string"),c,A);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof l)}u.from=function(l,c,A){return p(l,c,A)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array);function h(l){if(typeof l!="number")throw new TypeError('"size" argument must be of type number');if(l<0)throw new RangeError('The value "'+l+'" is invalid for option "size"')}function b(l,c,A){return h(l),l<=0?m(l):c!==void 0?typeof A=="string"?m(l).fill(c,A):m(l).fill(c):m(l)}u.alloc=function(l,c,A){return b(l,c,A)};function S(l){return h(l),m(l<0?0:F(l)|0)}u.allocUnsafe=function(l){return S(l)},u.allocUnsafeSlow=function(l){return S(l)};function C(l,c){if((typeof c!="string"||c==="")&&(c="utf8"),!u.isEncoding(c))throw new TypeError("Unknown encoding: "+c);let A=D(l,c)|0,d=m(A),T=d.write(l,c);return T!==A&&(d=d.slice(0,T)),d}function x(l){let c=l.length<0?0:F(l.length)|0,A=m(c);for(let d=0;d<c;d+=1)A[d]=l[d]&255;return A}function B(l){if(qe(l,Uint8Array)){let c=new Uint8Array(l);return v(c.buffer,c.byteOffset,c.byteLength)}return x(l)}function v(l,c,A){if(c<0||l.byteLength<c)throw new RangeError('"offset" is outside of buffer bounds');if(l.byteLength<c+(A||0))throw new RangeError('"length" is outside of buffer bounds');let d;return c===void 0&&A===void 0?d=new Uint8Array(l):A===void 0?d=new Uint8Array(l,c):d=new Uint8Array(l,c,A),Object.setPrototypeOf(d,u.prototype),d}function M(l){if(u.isBuffer(l)){let c=F(l.length)|0,A=m(c);return A.length===0||l.copy(A,0,0,c),A}if(l.length!==void 0)return typeof l.length!="number"||Or(l.length)?m(0):x(l);if(l.type==="Buffer"&&Array.isArray(l.data))return x(l.data)}function F(l){if(l>=a)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a.toString(16)+" bytes");return l|0}function W(l){return+l!=l&&(l=0),u.alloc(+l)}u.isBuffer=function(c){return c!=null&&c._isBuffer===!0&&c!==u.prototype},u.compare=function(c,A){if(qe(c,Uint8Array)&&(c=u.from(c,c.offset,c.byteLength)),qe(A,Uint8Array)&&(A=u.from(A,A.offset,A.byteLength)),!u.isBuffer(c)||!u.isBuffer(A))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(c===A)return 0;let d=c.length,T=A.length;for(let P=0,I=Math.min(d,T);P<I;++P)if(c[P]!==A[P]){d=c[P],T=A[P];break}return d<T?-1:T<d?1:0},u.isEncoding=function(c){switch(String(c).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(c,A){if(!Array.isArray(c))throw new TypeError('"list" argument must be an Array of Buffers');if(c.length===0)return u.alloc(0);let d;if(A===void 0)for(A=0,d=0;d<c.length;++d)A+=c[d].length;let T=u.allocUnsafe(A),P=0;for(d=0;d<c.length;++d){let I=c[d];if(qe(I,Uint8Array))P+I.length>T.length?(u.isBuffer(I)||(I=u.from(I)),I.copy(T,P)):Uint8Array.prototype.set.call(T,I,P);else if(u.isBuffer(I))I.copy(T,P);else throw new TypeError('"list" argument must be an Array of Buffers');P+=I.length}return T};function D(l,c){if(u.isBuffer(l))return l.length;if(ArrayBuffer.isView(l)||qe(l,ArrayBuffer))return l.byteLength;if(typeof l!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof l);let A=l.length,d=arguments.length>2&&arguments[2]===!0;if(!d&&A===0)return 0;let T=!1;for(;;)switch(c){case"ascii":case"latin1":case"binary":return A;case"utf8":case"utf-8":return Mr(l).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A*2;case"hex":return A>>>1;case"base64":return Ci(l).length;default:if(T)return d?-1:Mr(l).length;c=(""+c).toLowerCase(),T=!0}}u.byteLength=D;function U(l,c,A){let d=!1;if((c===void 0||c<0)&&(c=0),c>this.length||((A===void 0||A>this.length)&&(A=this.length),A<=0)||(A>>>=0,c>>>=0,A<=c))return"";for(l||(l="utf8");;)switch(l){case"hex":return je(this,c,A);case"utf8":case"utf-8":return ge(this,c,A);case"ascii":return Ce(this,c,A);case"latin1":case"binary":return Ve(this,c,A);case"base64":return Fe(this,c,A);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Oe(this,c,A);default:if(d)throw new TypeError("Unknown encoding: "+l);l=(l+"").toLowerCase(),d=!0}}u.prototype._isBuffer=!0;function K(l,c,A){let d=l[c];l[c]=l[A],l[A]=d}u.prototype.swap16=function(){let c=this.length;if(c%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let A=0;A<c;A+=2)K(this,A,A+1);return this},u.prototype.swap32=function(){let c=this.length;if(c%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let A=0;A<c;A+=4)K(this,A,A+3),K(this,A+1,A+2);return this},u.prototype.swap64=function(){let c=this.length;if(c%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let A=0;A<c;A+=8)K(this,A,A+7),K(this,A+1,A+6),K(this,A+2,A+5),K(this,A+3,A+4);return this},u.prototype.toString=function(){let c=this.length;return c===0?"":arguments.length===0?ge(this,0,c):U.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(c){if(!u.isBuffer(c))throw new TypeError("Argument must be a Buffer");return this===c?!0:u.compare(this,c)===0},u.prototype.inspect=function(){let c="",A=Rt.INSPECT_MAX_BYTES;return c=this.toString("hex",0,A).replace(/(.{2})/g,"$1 ").trim(),this.length>A&&(c+=" ... "),"<Buffer "+c+">"},r&&(u.prototype[r]=u.prototype.inspect),u.prototype.compare=function(c,A,d,T,P){if(qe(c,Uint8Array)&&(c=u.from(c,c.offset,c.byteLength)),!u.isBuffer(c))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof c);if(A===void 0&&(A=0),d===void 0&&(d=c?c.length:0),T===void 0&&(T=0),P===void 0&&(P=this.length),A<0||d>c.length||T<0||P>this.length)throw new RangeError("out of range index");if(T>=P&&A>=d)return 0;if(T>=P)return-1;if(A>=d)return 1;if(A>>>=0,d>>>=0,T>>>=0,P>>>=0,this===c)return 0;let I=P-T,_=d-A,ae=Math.min(I,_),te=this.slice(T,P),se=c.slice(A,d);for(let q=0;q<ae;++q)if(te[q]!==se[q]){I=te[q],_=se[q];break}return I<_?-1:_<I?1:0};function j(l,c,A,d,T){if(l.length===0)return-1;if(typeof A=="string"?(d=A,A=0):A>2147483647?A=2147483647:A<-2147483648&&(A=-2147483648),A=+A,Or(A)&&(A=T?0:l.length-1),A<0&&(A=l.length+A),A>=l.length){if(T)return-1;A=l.length-1}else if(A<0)if(T)A=0;else return-1;if(typeof c=="string"&&(c=u.from(c,d)),u.isBuffer(c))return c.length===0?-1:X(l,c,A,d,T);if(typeof c=="number")return c=c&255,typeof Uint8Array.prototype.indexOf=="function"?T?Uint8Array.prototype.indexOf.call(l,c,A):Uint8Array.prototype.lastIndexOf.call(l,c,A):X(l,[c],A,d,T);throw new TypeError("val must be string, number or Buffer")}function X(l,c,A,d,T){let P=1,I=l.length,_=c.length;if(d!==void 0&&(d=String(d).toLowerCase(),d==="ucs2"||d==="ucs-2"||d==="utf16le"||d==="utf-16le")){if(l.length<2||c.length<2)return-1;P=2,I/=2,_/=2,A/=2}function ae(se,q){return P===1?se[q]:se.readUInt16BE(q*P)}let te;if(T){let se=-1;for(te=A;te<I;te++)if(ae(l,te)===ae(c,se===-1?0:te-se)){if(se===-1&&(se=te),te-se+1===_)return se*P}else se!==-1&&(te-=te-se),se=-1}else for(A+_>I&&(A=I-_),te=A;te>=0;te--){let se=!0;for(let q=0;q<_;q++)if(ae(l,te+q)!==ae(c,q)){se=!1;break}if(se)return te}return-1}u.prototype.includes=function(c,A,d){return this.indexOf(c,A,d)!==-1},u.prototype.indexOf=function(c,A,d){return j(this,c,A,d,!0)},u.prototype.lastIndexOf=function(c,A,d){return j(this,c,A,d,!1)};function Pe(l,c,A,d){A=Number(A)||0;let T=l.length-A;d?(d=Number(d),d>T&&(d=T)):d=T;let P=c.length;d>P/2&&(d=P/2);let I;for(I=0;I<d;++I){let _=parseInt(c.substr(I*2,2),16);if(Or(_))return I;l[A+I]=_}return I}function Ae(l,c,A,d){return Cn(Mr(c,l.length-A),l,A,d)}function Ee(l,c,A,d){return Cn(cs(c),l,A,d)}function Ge(l,c,A,d){return Cn(Ci(c),l,A,d)}function Je(l,c,A,d){return Cn(As(c,l.length-A),l,A,d)}u.prototype.write=function(c,A,d,T){if(A===void 0)T="utf8",d=this.length,A=0;else if(d===void 0&&typeof A=="string")T=A,d=this.length,A=0;else if(isFinite(A))A=A>>>0,isFinite(d)?(d=d>>>0,T===void 0&&(T="utf8")):(T=d,d=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let P=this.length-A;if((d===void 0||d>P)&&(d=P),c.length>0&&(d<0||A<0)||A>this.length)throw new RangeError("Attempt to write outside buffer bounds");T||(T="utf8");let I=!1;for(;;)switch(T){case"hex":return Pe(this,c,A,d);case"utf8":case"utf-8":return Ae(this,c,A,d);case"ascii":case"latin1":case"binary":return Ee(this,c,A,d);case"base64":return Ge(this,c,A,d);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Je(this,c,A,d);default:if(I)throw new TypeError("Unknown encoding: "+T);T=(""+T).toLowerCase(),I=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function Fe(l,c,A){return c===0&&A===l.length?s.fromByteArray(l):s.fromByteArray(l.slice(c,A))}function ge(l,c,A){A=Math.min(l.length,A);let d=[],T=c;for(;T<A;){let P=l[T],I=null,_=P>239?4:P>223?3:P>191?2:1;if(T+_<=A){let ae,te,se,q;switch(_){case 1:P<128&&(I=P);break;case 2:ae=l[T+1],(ae&192)===128&&(q=(P&31)<<6|ae&63,q>127&&(I=q));break;case 3:ae=l[T+1],te=l[T+2],(ae&192)===128&&(te&192)===128&&(q=(P&15)<<12|(ae&63)<<6|te&63,q>2047&&(q<55296||q>57343)&&(I=q));break;case 4:ae=l[T+1],te=l[T+2],se=l[T+3],(ae&192)===128&&(te&192)===128&&(se&192)===128&&(q=(P&15)<<18|(ae&63)<<12|(te&63)<<6|se&63,q>65535&&q<1114112&&(I=q))}}I===null?(I=65533,_=1):I>65535&&(I-=65536,d.push(I>>>10&1023|55296),I=56320|I&1023),d.push(I),T+=_}return Me(d)}let we=4096;function Me(l){let c=l.length;if(c<=we)return String.fromCharCode.apply(String,l);let A="",d=0;for(;d<c;)A+=String.fromCharCode.apply(String,l.slice(d,d+=we));return A}function Ce(l,c,A){let d="";A=Math.min(l.length,A);for(let T=c;T<A;++T)d+=String.fromCharCode(l[T]&127);return d}function Ve(l,c,A){let d="";A=Math.min(l.length,A);for(let T=c;T<A;++T)d+=String.fromCharCode(l[T]);return d}function je(l,c,A){let d=l.length;(!c||c<0)&&(c=0),(!A||A<0||A>d)&&(A=d);let T="";for(let P=c;P<A;++P)T+=us[l[P]];return T}function Oe(l,c,A){let d=l.slice(c,A),T="";for(let P=0;P<d.length-1;P+=2)T+=String.fromCharCode(d[P]+d[P+1]*256);return T}u.prototype.slice=function(c,A){let d=this.length;c=~~c,A=A===void 0?d:~~A,c<0?(c+=d,c<0&&(c=0)):c>d&&(c=d),A<0?(A+=d,A<0&&(A=0)):A>d&&(A=d),A<c&&(A=c);let T=this.subarray(c,A);return Object.setPrototypeOf(T,u.prototype),T};function E(l,c,A){if(l%1!==0||l<0)throw new RangeError("offset is not uint");if(l+c>A)throw new RangeError("Trying to access beyond buffer length")}u.prototype.readUintLE=u.prototype.readUIntLE=function(c,A,d){c=c>>>0,A=A>>>0,d||E(c,A,this.length);let T=this[c],P=1,I=0;for(;++I<A&&(P*=256);)T+=this[c+I]*P;return T},u.prototype.readUintBE=u.prototype.readUIntBE=function(c,A,d){c=c>>>0,A=A>>>0,d||E(c,A,this.length);let T=this[c+--A],P=1;for(;A>0&&(P*=256);)T+=this[c+--A]*P;return T},u.prototype.readUint8=u.prototype.readUInt8=function(c,A){return c=c>>>0,A||E(c,1,this.length),this[c]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(c,A){return c=c>>>0,A||E(c,2,this.length),this[c]|this[c+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(c,A){return c=c>>>0,A||E(c,2,this.length),this[c]<<8|this[c+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(c,A){return c=c>>>0,A||E(c,4,this.length),(this[c]|this[c+1]<<8|this[c+2]<<16)+this[c+3]*16777216},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(c,A){return c=c>>>0,A||E(c,4,this.length),this[c]*16777216+(this[c+1]<<16|this[c+2]<<8|this[c+3])},u.prototype.readBigUInt64LE=gt(function(c){c=c>>>0,Et(c,"offset");let A=this[c],d=this[c+7];(A===void 0||d===void 0)&&en(c,this.length-8);let T=A+this[++c]*2**8+this[++c]*2**16+this[++c]*2**24,P=this[++c]+this[++c]*2**8+this[++c]*2**16+d*2**24;return BigInt(T)+(BigInt(P)<<BigInt(32))}),u.prototype.readBigUInt64BE=gt(function(c){c=c>>>0,Et(c,"offset");let A=this[c],d=this[c+7];(A===void 0||d===void 0)&&en(c,this.length-8);let T=A*2**24+this[++c]*2**16+this[++c]*2**8+this[++c],P=this[++c]*2**24+this[++c]*2**16+this[++c]*2**8+d;return(BigInt(T)<<BigInt(32))+BigInt(P)}),u.prototype.readIntLE=function(c,A,d){c=c>>>0,A=A>>>0,d||E(c,A,this.length);let T=this[c],P=1,I=0;for(;++I<A&&(P*=256);)T+=this[c+I]*P;return P*=128,T>=P&&(T-=Math.pow(2,8*A)),T},u.prototype.readIntBE=function(c,A,d){c=c>>>0,A=A>>>0,d||E(c,A,this.length);let T=A,P=1,I=this[c+--T];for(;T>0&&(P*=256);)I+=this[c+--T]*P;return P*=128,I>=P&&(I-=Math.pow(2,8*A)),I},u.prototype.readInt8=function(c,A){return c=c>>>0,A||E(c,1,this.length),this[c]&128?(255-this[c]+1)*-1:this[c]},u.prototype.readInt16LE=function(c,A){c=c>>>0,A||E(c,2,this.length);let d=this[c]|this[c+1]<<8;return d&32768?d|4294901760:d},u.prototype.readInt16BE=function(c,A){c=c>>>0,A||E(c,2,this.length);let d=this[c+1]|this[c]<<8;return d&32768?d|4294901760:d},u.prototype.readInt32LE=function(c,A){return c=c>>>0,A||E(c,4,this.length),this[c]|this[c+1]<<8|this[c+2]<<16|this[c+3]<<24},u.prototype.readInt32BE=function(c,A){return c=c>>>0,A||E(c,4,this.length),this[c]<<24|this[c+1]<<16|this[c+2]<<8|this[c+3]},u.prototype.readBigInt64LE=gt(function(c){c=c>>>0,Et(c,"offset");let A=this[c],d=this[c+7];(A===void 0||d===void 0)&&en(c,this.length-8);let T=this[c+4]+this[c+5]*2**8+this[c+6]*2**16+(d<<24);return(BigInt(T)<<BigInt(32))+BigInt(A+this[++c]*2**8+this[++c]*2**16+this[++c]*2**24)}),u.prototype.readBigInt64BE=gt(function(c){c=c>>>0,Et(c,"offset");let A=this[c],d=this[c+7];(A===void 0||d===void 0)&&en(c,this.length-8);let T=(A<<24)+this[++c]*2**16+this[++c]*2**8+this[++c];return(BigInt(T)<<BigInt(32))+BigInt(this[++c]*2**24+this[++c]*2**16+this[++c]*2**8+d)}),u.prototype.readFloatLE=function(c,A){return c=c>>>0,A||E(c,4,this.length),i.read(this,c,!0,23,4)},u.prototype.readFloatBE=function(c,A){return c=c>>>0,A||E(c,4,this.length),i.read(this,c,!1,23,4)},u.prototype.readDoubleLE=function(c,A){return c=c>>>0,A||E(c,8,this.length),i.read(this,c,!0,52,8)},u.prototype.readDoubleBE=function(c,A){return c=c>>>0,A||E(c,8,this.length),i.read(this,c,!1,52,8)};function le(l,c,A,d,T,P){if(!u.isBuffer(l))throw new TypeError('"buffer" argument must be a Buffer instance');if(c>T||c<P)throw new RangeError('"value" argument is out of bounds');if(A+d>l.length)throw new RangeError("Index out of range")}u.prototype.writeUintLE=u.prototype.writeUIntLE=function(c,A,d,T){if(c=+c,A=A>>>0,d=d>>>0,!T){let _=Math.pow(2,8*d)-1;le(this,c,A,d,_,0)}let P=1,I=0;for(this[A]=c&255;++I<d&&(P*=256);)this[A+I]=c/P&255;return A+d},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(c,A,d,T){if(c=+c,A=A>>>0,d=d>>>0,!T){let _=Math.pow(2,8*d)-1;le(this,c,A,d,_,0)}let P=d-1,I=1;for(this[A+P]=c&255;--P>=0&&(I*=256);)this[A+P]=c/I&255;return A+d},u.prototype.writeUint8=u.prototype.writeUInt8=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,1,255,0),this[A]=c&255,A+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,2,65535,0),this[A]=c&255,this[A+1]=c>>>8,A+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,2,65535,0),this[A]=c>>>8,this[A+1]=c&255,A+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,4,4294967295,0),this[A+3]=c>>>24,this[A+2]=c>>>16,this[A+1]=c>>>8,this[A]=c&255,A+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,4,4294967295,0),this[A]=c>>>24,this[A+1]=c>>>16,this[A+2]=c>>>8,this[A+3]=c&255,A+4};function wn(l,c,A,d,T){wi(c,d,T,l,A,7);let P=Number(c&BigInt(4294967295));l[A++]=P,P=P>>8,l[A++]=P,P=P>>8,l[A++]=P,P=P>>8,l[A++]=P;let I=Number(c>>BigInt(32)&BigInt(4294967295));return l[A++]=I,I=I>>8,l[A++]=I,I=I>>8,l[A++]=I,I=I>>8,l[A++]=I,A}function hi(l,c,A,d,T){wi(c,d,T,l,A,7);let P=Number(c&BigInt(4294967295));l[A+7]=P,P=P>>8,l[A+6]=P,P=P>>8,l[A+5]=P,P=P>>8,l[A+4]=P;let I=Number(c>>BigInt(32)&BigInt(4294967295));return l[A+3]=I,I=I>>8,l[A+2]=I,I=I>>8,l[A+1]=I,I=I>>8,l[A]=I,A+8}u.prototype.writeBigUInt64LE=gt(function(c,A=0){return wn(this,c,A,BigInt(0),BigInt("0xffffffffffffffff"))}),u.prototype.writeBigUInt64BE=gt(function(c,A=0){return hi(this,c,A,BigInt(0),BigInt("0xffffffffffffffff"))}),u.prototype.writeIntLE=function(c,A,d,T){if(c=+c,A=A>>>0,!T){let ae=Math.pow(2,8*d-1);le(this,c,A,d,ae-1,-ae)}let P=0,I=1,_=0;for(this[A]=c&255;++P<d&&(I*=256);)c<0&&_===0&&this[A+P-1]!==0&&(_=1),this[A+P]=(c/I>>0)-_&255;return A+d},u.prototype.writeIntBE=function(c,A,d,T){if(c=+c,A=A>>>0,!T){let ae=Math.pow(2,8*d-1);le(this,c,A,d,ae-1,-ae)}let P=d-1,I=1,_=0;for(this[A+P]=c&255;--P>=0&&(I*=256);)c<0&&_===0&&this[A+P+1]!==0&&(_=1),this[A+P]=(c/I>>0)-_&255;return A+d},u.prototype.writeInt8=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,1,127,-128),c<0&&(c=255+c+1),this[A]=c&255,A+1},u.prototype.writeInt16LE=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,2,32767,-32768),this[A]=c&255,this[A+1]=c>>>8,A+2},u.prototype.writeInt16BE=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,2,32767,-32768),this[A]=c>>>8,this[A+1]=c&255,A+2},u.prototype.writeInt32LE=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,4,2147483647,-2147483648),this[A]=c&255,this[A+1]=c>>>8,this[A+2]=c>>>16,this[A+3]=c>>>24,A+4},u.prototype.writeInt32BE=function(c,A,d){return c=+c,A=A>>>0,d||le(this,c,A,4,2147483647,-2147483648),c<0&&(c=4294967295+c+1),this[A]=c>>>24,this[A+1]=c>>>16,this[A+2]=c>>>8,this[A+3]=c&255,A+4},u.prototype.writeBigInt64LE=gt(function(c,A=0){return wn(this,c,A,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),u.prototype.writeBigInt64BE=gt(function(c,A=0){return hi(this,c,A,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function Ti(l,c,A,d,T,P){if(A+d>l.length)throw new RangeError("Index out of range");if(A<0)throw new RangeError("Index out of range")}function bi(l,c,A,d,T){return c=+c,A=A>>>0,T||Ti(l,c,A,4),i.write(l,c,A,d,23,4),A+4}u.prototype.writeFloatLE=function(c,A,d){return bi(this,c,A,!0,d)},u.prototype.writeFloatBE=function(c,A,d){return bi(this,c,A,!1,d)};function Si(l,c,A,d,T){return c=+c,A=A>>>0,T||Ti(l,c,A,8),i.write(l,c,A,d,52,8),A+8}u.prototype.writeDoubleLE=function(c,A,d){return Si(this,c,A,!0,d)},u.prototype.writeDoubleBE=function(c,A,d){return Si(this,c,A,!1,d)},u.prototype.copy=function(c,A,d,T){if(!u.isBuffer(c))throw new TypeError("argument should be a Buffer");if(d||(d=0),!T&&T!==0&&(T=this.length),A>=c.length&&(A=c.length),A||(A=0),T>0&&T<d&&(T=d),T===d||c.length===0||this.length===0)return 0;if(A<0)throw new RangeError("targetStart out of bounds");if(d<0||d>=this.length)throw new RangeError("Index out of range");if(T<0)throw new RangeError("sourceEnd out of bounds");T>this.length&&(T=this.length),c.length-A<T-d&&(T=c.length-A+d);let P=T-d;return this===c&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(A,d,T):Uint8Array.prototype.set.call(c,this.subarray(d,T),A),P},u.prototype.fill=function(c,A,d,T){if(typeof c=="string"){if(typeof A=="string"?(T=A,A=0,d=this.length):typeof d=="string"&&(T=d,d=this.length),T!==void 0&&typeof T!="string")throw new TypeError("encoding must be a string");if(typeof T=="string"&&!u.isEncoding(T))throw new TypeError("Unknown encoding: "+T);if(c.length===1){let I=c.charCodeAt(0);(T==="utf8"&&I<128||T==="latin1")&&(c=I)}}else typeof c=="number"?c=c&255:typeof c=="boolean"&&(c=Number(c));if(A<0||this.length<A||this.length<d)throw new RangeError("Out of range index");if(d<=A)return this;A=A>>>0,d=d===void 0?this.length:d>>>0,c||(c=0);let P;if(typeof c=="number")for(P=A;P<d;++P)this[P]=c;else{let I=u.isBuffer(c)?c:u.from(c,T),_=I.length;if(_===0)throw new TypeError('The value "'+c+'" is invalid for argument "value"');for(P=0;P<d-A;++P)this[P+A]=I[P%_]}return this};let Ut={};function Fr(l,c,A){Ut[l]=class extends A{constructor(){super(),Object.defineProperty(this,"message",{value:c.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${l}]`,this.stack,delete this.name}get code(){return l}set code(T){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:T,writable:!0})}toString(){return`${this.name} [${l}]: ${this.message}`}}}Fr("ERR_BUFFER_OUT_OF_BOUNDS",function(l){return l?`${l} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),Fr("ERR_INVALID_ARG_TYPE",function(l,c){return`The "${l}" argument must be of type number. Received type ${typeof c}`},TypeError),Fr("ERR_OUT_OF_RANGE",function(l,c,A){let d=`The value of "${l}" is out of range.`,T=A;return Number.isInteger(A)&&Math.abs(A)>2**32?T=Pi(String(A)):typeof A=="bigint"&&(T=String(A),(A>BigInt(2)**BigInt(32)||A<-(BigInt(2)**BigInt(32)))&&(T=Pi(T)),T+="n"),d+=` It must be ${c}. Received ${T}`,d},RangeError);function Pi(l){let c="",A=l.length,d=l[0]==="-"?1:0;for(;A>=d+4;A-=3)c=`_${l.slice(A-3,A)}${c}`;return`${l.slice(0,A)}${c}`}function as(l,c,A){Et(c,"offset"),(l[c]===void 0||l[c+A]===void 0)&&en(c,l.length-(A+1))}function wi(l,c,A,d,T,P){if(l>A||l<c){let I=typeof c=="bigint"?"n":"",_;throw c===0||c===BigInt(0)?_=`>= 0${I} and < 2${I} ** ${(P+1)*8}${I}`:_=`>= -(2${I} ** ${(P+1)*8-1}${I}) and < 2 ** ${(P+1)*8-1}${I}`,new Ut.ERR_OUT_OF_RANGE("value",_,l)}as(d,T,P)}function Et(l,c){if(typeof l!="number")throw new Ut.ERR_INVALID_ARG_TYPE(c,"number",l)}function en(l,c,A){throw Math.floor(l)!==l?(Et(l,A),new Ut.ERR_OUT_OF_RANGE("offset","an integer",l)):c<0?new Ut.ERR_BUFFER_OUT_OF_BOUNDS:new Ut.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${c}`,l)}let ss=/[^+/0-9A-Za-z-_]/g;function os(l){if(l=l.split("=")[0],l=l.trim().replace(ss,""),l.length<2)return"";for(;l.length%4!==0;)l=l+"=";return l}function Mr(l,c){c=c||1/0;let A,d=l.length,T=null,P=[];for(let I=0;I<d;++I){if(A=l.charCodeAt(I),A>55295&&A<57344){if(!T){if(A>56319){(c-=3)>-1&&P.push(239,191,189);continue}else if(I+1===d){(c-=3)>-1&&P.push(239,191,189);continue}T=A;continue}if(A<56320){(c-=3)>-1&&P.push(239,191,189),T=A;continue}A=(T-55296<<10|A-56320)+65536}else T&&(c-=3)>-1&&P.push(239,191,189);if(T=null,A<128){if((c-=1)<0)break;P.push(A)}else if(A<2048){if((c-=2)<0)break;P.push(A>>6|192,A&63|128)}else if(A<65536){if((c-=3)<0)break;P.push(A>>12|224,A>>6&63|128,A&63|128)}else if(A<1114112){if((c-=4)<0)break;P.push(A>>18|240,A>>12&63|128,A>>6&63|128,A&63|128)}else throw new Error("Invalid code point")}return P}function cs(l){let c=[];for(let A=0;A<l.length;++A)c.push(l.charCodeAt(A)&255);return c}function As(l,c){let A,d,T,P=[];for(let I=0;I<l.length&&!((c-=2)<0);++I)A=l.charCodeAt(I),d=A>>8,T=A%256,P.push(T),P.push(d);return P}function Ci(l){return s.toByteArray(os(l))}function Cn(l,c,A,d){let T;for(T=0;T<d&&!(T+A>=c.length||T>=l.length);++T)c[T+A]=l[T];return T}function qe(l,c){return l instanceof c||l!=null&&l.constructor!=null&&l.constructor.name!=null&&l.constructor.name===c.name}function Or(l){return l!==l}let us=function(){let l="0123456789abcdef",c=new Array(256);for(let A=0;A<16;++A){let d=A*16;for(let T=0;T<16;++T)c[d+T]=l[A]+l[T]}return c}();function gt(l){return typeof BigInt>"u"?ms:l}function ms(){throw new Error("BigInt not supported")}return Rt}var tn,vi,Bn,ki,Rt,xi,Mi=Bt(()=>{g();y();f();tn={},vi=!1;Bn={},ki=!1;Rt={},xi=!1});var vt,w,Dc,Wc,Oi=Bt(()=>{g();y();f();Mi();vt=Fi();vt.Buffer;vt.SlowBuffer;vt.INSPECT_MAX_BYTES;vt.kMaxLength;w=vt.Buffer,Dc=vt.INSPECT_MAX_BYTES,Wc=vt.kMaxLength});var y=Bt(()=>{Oi()});import{bcs as ke}from"@mysten/sui/bcs";function so(s,i=["<",">"]){let[r,a]=i,o=[],m="",u=0;for(let p=0;p<s.length;p++){let h=s[p];if(h===r&&u++,h===a&&u--,u===0&&h===","){o.push(m.trim()),m="";continue}m+=h}return o.push(m.trim()),o}function be(s){if(typeof s!="string")throw new Error(`Illegal type passed as a name of the type: ${s}`);let[i,r]=["<",">"],a=s.indexOf(i),o=Array.from(s).reverse().indexOf(r);if(a===-1&&o===-1)return{typeName:s,typeArgs:[]};if(a===-1||o===-1)throw new Error(`Unclosed generic in name '${s}'`);let m=s.slice(0,a),u=so(s.slice(a+1,s.length-o-1),[i,r]);return{typeName:m,typeArgs:u}}function Ca(s){return!s||typeof s!="object"||Array.isArray(s)?!1:"GasCoin"in s||"Input"in s||"Result"in s||"NestedResult"in s}function V(s,i){return Ca(i)?i:s.object(i)}function _e(s,i,r){if(Ca(i))return V(s,i);function a(b){let{typeName:S,typeArgs:C}=be(b);switch(S){case"bool":return ke.Bool;case"u8":return ke.U8;case"u16":return ke.U16;case"u32":return ke.U32;case"u64":return ke.U64;case"u128":return ke.U128;case"u256":return ke.U256;case"address":return ke.Address;case"0x1::string::String":case"0x1::ascii::String":return ke.String;case"0x2::object::ID":return ke.Address;case"0x1::option::Option":return ke.option(a(C[0]));case"vector":return ke.vector(a(C[0]));default:throw new Error(`invalid primitive type ${b}`)}}function o(b){for(let S of b){if(typeof S>"u"||S===null)return!0;if(Array.isArray(S))return o(S)}return!1}function m(b){for(let S of b){if(!Array.isArray(S)){if(S===null)continue;switch(typeof S){case"string":case"number":case"bigint":case"boolean":continue;default:return!1}}return m(S)}return!0}function u(b){for(let S of b){if(!Array.isArray(S))switch(typeof S){case"string":case"number":case"bigint":case"boolean":return!0;default:continue}return u(S)}return!1}let{typeName:p,typeArgs:h}=be(r);switch(p){case"0x1::option::Option":if(i===null)return s.pure.option("bool",null);if(m([i]))return s.pure(a(r).serialize(i));if(u([i]))throw new Error("mixing primitive and TransactionArgument values is not supported");return s.moveCall({target:"0x1::option::some",typeArguments:[h[0]],arguments:[_e(s,i,h[0])]});case"vector":if(!Array.isArray(i))throw new Error("expected an array for vector type");if(i.length===0)return s.pure(ke.vector(ke.Bool).serialize([]));if(o(i))throw new Error("the provided array contains undefined or null values");if(m(i))return s.pure(a(r).serialize(i));if(u(i))throw new Error("mixing primitive and TransactionArgument values is not supported");return s.makeMoveVec({type:h[0],elements:i});default:return s.pure(a(r).serialize(i))}}function oo(s){let i=s.split("0x").join("");for(let r=0;r<i.length;r++)if(i[r]!=="0")return`0x${i.substring(r)}`;return"0x0"}function G(s){let{typeName:i,typeArgs:r}=be(s);switch(i){case"bool":case"u8":case"u16":case"u32":case"u64":case"u128":case"u256":case"address":case"signer":return i;case"vector":return`vector<${G(r[0])}>`;default:{let a=i.split("::");a[0]=oo(a[0]);let o=a.join("::");return r.length>0?`${o}<${r.map(m=>G(m)).join(",")}>`:o}}}function H(s,...i){return i.length>0?`${s}<${i.join(", ")}>`:s}var fe=Bt(()=>{"use strict";g();y();f()});var Tt=Nr((Rp,Ba)=>{"use strict";g();y();f();fe();var qr=class s{static $PACKAGE_ID="";static $PUBLISHED_AT="";static $PKG_V=[];get PACKAGE_ID(){return G(s.$PACKAGE_ID)}get PUBLISHED_AT(){return G(s.$PUBLISHED_AT)}get PKG_V1(){return G(s.$PKG_V[1])}setPackageId(i){s.$PACKAGE_ID=i}setPublishedAt(i){s.$PUBLISHED_AT=i}setPkgV(i,r){s.$PKG_V[i]=r}setAddress(i,r){s.$PACKAGE_ID=i,s.$PUBLISHED_AT=i,s.$PKG_V[1]=r||i}},co=new qr;Ba.exports=co});var ri=Nr((Up,Ma)=>{"use strict";g();y();f();fe();var ni=class s{static $PACKAGE_ID="";static $PUBLISHED_AT="";static $PKG_V=[];get PACKAGE_ID(){return G(s.$PACKAGE_ID)}get PUBLISHED_AT(){return G(s.$PUBLISHED_AT)}get PKG_V1(){return G(s.$PKG_V[1])}setPackageId(i){s.$PACKAGE_ID=i}setPublishedAt(i){s.$PUBLISHED_AT=i}setPkgV(i,r){s.$PKG_V[i]=r}setAddress(i,r){s.$PACKAGE_ID=i,s.$PUBLISHED_AT=i,s.$PKG_V[1]=r||i}},Ao=new ni;Ma.exports=Ao});var si=Nr((Xp,Na)=>{"use strict";g();y();f();fe();var ai=class s{static $PACKAGE_ID="";static $PUBLISHED_AT="";static $PKG_V=[];get PACKAGE_ID(){return G(s.$PACKAGE_ID)}get PUBLISHED_AT(){return G(s.$PUBLISHED_AT)}get PKG_V1(){return G(s.$PKG_V[1])}setPackageId(i){s.$PACKAGE_ID=i}setPublishedAt(i){s.$PUBLISHED_AT=i}setPkgV(i,r){s.$PKG_V[i]=r}setAddress(i,r){s.$PACKAGE_ID=i,s.$PUBLISHED_AT=i,s.$PKG_V[1]=r||i}},uo=new ai;Na.exports=uo});g();y();f();g();y();f();g();y();f();var In={coreApiUrl:"https://core.api.allbridgecoreapi.net",coreApiQueryParams:{},coreApiHeaders:{},jupiterUrl:"https://lite-api.jup.ag/swap/v1",wormholeMessengerProgramId:"worm2ZoG2kUd4vFXhvjh93UUH596ayRfgQ2MgjNMTth",solanaLookUpTable:"2JcBAEVnAwVo4u8d61iqgHPrzZuugur7cVTjWubsVLHj",sorobanNetworkPassphrase:"Public Global Stellar Network ; September 2015",tronJsonRpc:"https://api.trongrid.io/jsonrpc",cctpParams:{cctpTransmitterProgramId:"CCTPmbSD7gX1bxKPAmg77w8oFzNFpaQiQUWD43TKaecd",cctpTokenMessengerMinter:"CCTPiPYPc6AsJuwueEnWgSgucamXDZwBd53dQ11YiKX3",cctpDomains:{ETH:0,AVA:1,OPT:2,ARB:3,SOL:5,BAS:6,POL:7,SUI:8}},cachePoolInfoChainSec:20},_c={solanaRpcUrl:"https://api.mainnet-beta.solana.com",tronRpcUrl:"https://api.trongrid.io"},$c={SOL:"https://api.mainnet-beta.solana.com",TRX:"https://api.trongrid.io",SRB:"https://rpc.stellar.org:443",STLR:"https://horizon.stellar.org",SUI:"https://fullnode.mainnet.sui.io"};g();y();f();import{Big as xe}from"big.js";g();y();f();g();y();f();g();y();f();var me=class extends Error{errorCode;constructor(i,r){super(r),this.errorCode=i}},O=class extends me{constructor(i){super("SdkError",i)}},ct=class extends me{constructor(i){super("InvalidAmountError",i)}},Gt=class extends me{constructor(i){super("AmountNotEnoughError",i)}},At=class extends me{constructor(i){super("InsufficientPoolLiquidityError",i)}},ye=class extends me{constructor(i){super("JupiterError",i)}},nn=class extends me{constructor(i){super("InvalidGasFeePaymentOptionError",i)}},Ni=class extends me{constructor(i){super("InvalidMessengerOptionError",i)}},de=class extends me{constructor(i){super("MethodNotSupportedError",i)}},rn=class extends me{constructor(i){super("VerifyTxError",i)}},Vt=class extends me{constructor(i){super("InvalidTxError",i)}},Rn=class extends me{constructor(i){super("ExtraGasMaxLimitExceededError",i)}},vn=class extends me{constructor(i,r,a){super("ArgumentInvalidDecimalsError",`Argument '${i}' decimals '${r}' cannot be greater than '${a}'`)}},an=class extends me{constructor(i){super("TimeoutError",i)}},kn=class extends me{constructor(i){super("NodeRpcUrlNotInitializedError",`For chain '${i}' Node RPC URL not initialized`)}},Be=class extends me{constructor(i){super("CCTPDoesNotSupportedError",i)}},xn=class extends me{constructor(){super("TxTooLargeError","Transaction too large: try again later or switch to another messenger or pay relayer fee in native gas currency")}},Ss=(F=>(F.SDK_ERROR="SdkError",F.INVALID_AMOUNT_ERROR="InvalidAmountError",F.AMOUNT_NOT_ENOUGH_ERROR="AmountNotEnoughError",F.INSUFFICIENT_POOL_LIQUIDITY_ERROR="InsufficientPoolLiquidityError",F.JUPITER_ERROR="JupiterError",F.INVALID_GAS_FEE_PAYMENT_OPTION_ERROR="InvalidGasFeePaymentOptionError",F.INVALID_MESSENGER_OPTION_ERROR="InvalidMessengerOptionError",F.METHOD_NOT_SUPPORTED_ERROR="MethodNotSupportedError",F.VERIFY_TX_ERROR="VerifyTxError",F.INVALID_TX_ERROR="InvalidTxError",F.EXTRA_GAS_MAX_LIMIT_EXCEEDED_ERROR="ExtraGasMaxLimitExceededError",F.ARGUMENT_INVALID_DECIMALS_ERROR="ArgumentInvalidDecimalsError",F.TIMEOUT_ERROR="TimeoutError",F.NODE_RPC_URL_NOT_INITIALIZED_ERROR="NodeRpcUrlNotInitializedError",F.CCTP_DOES_NOT_SUPPORTED_ERROR="CCTPDoesNotSupportedError",F.TX_TOO_LARGE="TxTooLargeError",F))(Ss||{});g();y();f();var Ze=(B=>(B.BSC="BSC",B.ETH="ETH",B.BAS="BAS",B.SOL="SOL",B.TRX="TRX",B.POL="POL",B.ARB="ARB",B.CEL="CEL",B.AVA="AVA",B.SRB="SRB",B.STLR="STLR",B.OPT="OPT",B.SUI="SUI",B))(Ze||{}),ie=(m=>(m.EVM="EVM",m.SOLANA="SOLANA",m.TRX="TRX",m.SRB="SRB",m.SUI="SUI",m))(ie||{});var Ps={EVM:18,SOLANA:9,TRX:6,SRB:7,SUI:9},ws={BSC:{chainSymbol:"BSC",chainId:"0x38",name:"BNB Chain",chainType:"EVM"},ETH:{chainSymbol:"ETH",chainId:"0x1",name:"Ethereum",chainType:"EVM"},BAS:{chainSymbol:"BAS",chainId:"0x2105",name:"Base",chainType:"EVM"},ARB:{chainSymbol:"ARB",chainId:"0xa4b1",name:"Arbitrum",chainType:"EVM"},AVA:{chainSymbol:"AVA",chainId:"0xa86a",name:"Avalanche",chainType:"EVM"},CEL:{chainSymbol:"CEL",chainId:"0xa4ec",name:"Celo",chainType:"EVM"},POL:{chainSymbol:"POL",chainId:"0x89",name:"Polygon",chainType:"EVM"},OPT:{chainSymbol:"OPT",chainId:"0xa",name:"OP Mainnet",chainType:"EVM"},SOL:{chainSymbol:"SOL",name:"Solana",chainType:"SOLANA"},TRX:{chainSymbol:"TRX",name:"Tron",chainType:"TRX"},SRB:{chainSymbol:"SRB",name:"Stellar",chainType:"SRB"},STLR:{chainSymbol:"STLR",name:"Stellar",chainType:"SRB"},SUI:{chainSymbol:"SUI",name:"Sui",chainType:"SUI"}},Q=(()=>{let s={...ws};return{addChainsProperties(i){s={...s,...i}},getChainProperty(i){let r=s[i];if(!r)throw new O(`Cannot find chain properties for ${i}`);return r},getChainsProperties(){return s},getChainDecimalsByType(i){return Ps[i]}}})();g();y();f();import ks from"axios";g();y();f();var Di="3.22.0";g();y();f();g();y();f();import{Big as N}from"big.js";import Ur from"bn.js";g();y();f();function Er(s,i){return N(100).minus(N(100).times(i).div(s)).toNumber()}function kt(s,i){return et(s,i,3).round(0,N.roundDown)}function Ne(s,i){return et(s,3,i)}function et(s,i,r){let a=N(r).minus(i).toNumber();return N(s).times(sn(a))}function sn(s){return N(10).pow(s)}function z(s,i){return N(s).times(sn(i))}function Y(s,i){let r=N(s);return r.eq(0)?N(0):N(r).div(sn(i))}function Ie(s){return Y(N(s.tokenBalance).minus(s.vUsdBalance).toFixed(),3).div(2).toFixed()}function tt(s,{feeShare:i,decimals:r},a){let o=N(s);if(o.lte(0))return"0";let m=o.times(i),u=o.minus(m),p=kt(u,r),h=N(a.tokenBalance).plus(p),b=nt(h,a.aValue,a.dValue);return N(a.vUsdBalance).minus(b).round(0,N.roundDown).toFixed()}function on(s,{feeShare:i,decimals:r},a){let o=N(s);if(o.lte(0))return N(0).toFixed();let m=o.plus(a.vUsdBalance),u=nt(m,a.aValue,a.dValue),p=Ne(N(a.tokenBalance).minus(u),r),h=N(p).times(i);return N(p).minus(h).round(0,N.roundDown).toFixed()}function Wi(s,i){let r=N(s);if(r.lte(0))return i;let a=r.plus(i.vUsdBalance),o=nt(a,i.aValue,i.dValue);return{aValue:i.aValue,dValue:i.dValue,tokenBalance:o.toFixed(0),vUsdBalance:a.toFixed(0)}}function Ui(s,{feeShare:i,decimals:r},a){if(N(s).lte(0))return N(0);let o=N(a.vUsdBalance).minus(s);if(o.lte(0))throw new At;let m=nt(o,a.aValue,a.dValue),u=N(m).minus(a.tokenBalance),p=Ne(u,r),h=N(i).div(N(1).minus(i)),b=N(p).times(h).round(0,N.roundUp);return N(p).plus(b).round(0,N.roundDown)}function Ei(s,{feeShare:i,decimals:r},a){if(N(s).lte(0))return N(0);let o=N(i).div(N(1).minus(i)),m=N(s).times(o).round(0,N.roundUp),u=N(s).plus(m),p=kt(u,r),h=N(a.tokenBalance).minus(p);if(h.lte(0))throw new At;let b=nt(h,a.aValue,a.dValue);return N(b).minus(a.vUsdBalance).round(0,N.roundDown)}function nt(s,i,r){let a=N(4).times(i).times(N(r).minus(s)).minus(r),o=N(r).pow(3),m=a.pow(2),u=N(s).times(N(s).times(m).plus(N(4).times(i).times(o))).sqrt().round(0,N.roundDown),p=N(8).times(i).times(s),h=a.times(s).plus(u).div(p).round(0,N.roundDown);return h.eq(0)?N(0):h.plus(1)}function Gi(s,i,r,a){let o=new Ur(s),m=new Ur(r),u=new Ur(i);return o.mul(m).shrn(a).sub(u).toString()}function Vi(s){return N(s).gt(0)?`${Number(N(s).times(100).toFixed(2)).toLocaleString()}%`:"N/A"}function ji(s,i,r){let a=N(i).times(r),o=N(i).plus(r),m=N(8).times(s).times(a).times(o),u=a.times(N(16).times(s).minus(4)).div(3),p=m.times(m),h=u.times(u).times(u),b=p.plus(h),S=N(b).sqrt(),C=N(Math.cbrt(+m.plus(S).toFixed())),x=N(Math.cbrt(+m.minus(S).toFixed()));return C.plus(x).toFixed()}g();y();f();var Gr=(u=>(u.OK="OK",u.INVALID="INVALID",u.FORBIDDEN="FORBIDDEN",u.UNINITIALIZED="UNINITIALIZED",u.CONTRACT_ADDRESS="CONTRACT_ADDRESS",u.WRONG_ASSOCIATED_ACCOUNT_OWNER="WRONG_ASSOCIATED_ACCOUNT_OWNER",u))(Gr||{});var rt=(o=>(o[o.ALLBRIDGE=1]="ALLBRIDGE",o[o.WORMHOLE=2]="WORMHOLE",o[o.CCTP=3]="CCTP",o[o.CCTP_V2=4]="CCTP_V2",o))(rt||{});function Zi(s){return Object.entries(s).reduce((i,r)=>{let a=r[0],o=r[1],m=vs(a,o);return m&&(i[a]=m),i},{})}function _i(s){let i={};for(let[r,a]of Object.entries(s)){let o=r;for(let m of a.tokens){let u=jt({chainSymbol:o,poolAddress:m.poolAddress}),p=Ie(m.poolInfo);i[u]={...m.poolInfo,imbalance:p}}}return i}function Cs(s,i){let{name:r,...a}=s,{poolInfo:o,...m}=i;return{...m,...a,chainName:r}}function Bs(s){switch(s){case"allbridge":return 1;case"wormhole":return 2;case"cctp":return 3;case"cctpV2":return 4}}function Is(s){return Object.entries(s).reduce((i,[r,a])=>(i[r]=Rs(a),i),{})}function Rs(s){return Object.entries(s).reduce((i,[r,a])=>{let o=Bs(r);return o&&(i[o]=a),i},{})}function vs(s,i){let r=Q.getChainsProperties()[s];if(!r)return null;let a={...r,allbridgeChainId:i.chainId,bridgeAddress:i.bridgeAddress,transferTime:Is(i.transferTime),txCostAmount:i.txCostAmount,confirmations:i.confirmations,suiAddresses:i.suiAddresses};return{...a,tokens:i.tokens.map(o=>Cs(a,o))}}function jt(s){return s.chainSymbol+"_"+s.poolAddress}function $i(s){let i=[];for(let[r,a]of Object.entries(s)){let o=r;for(let m of a.tokens)i.push({chainSymbol:o,poolAddress:m.poolAddress})}return i}function Ji(s){let i={};for(let[r,a]of Object.entries(s)){let o=r;for(let[m,u]of Object.entries(a))u.imbalance=Ie(u),i[jt({chainSymbol:o,poolAddress:m})]=u}return i}var Fn=class{api;constructor(i){this.api=ks.create({baseURL:i.coreApiUrl,headers:{Accept:"application/json",...i.coreApiHeaders,"x-Sdk-Agent":"AllbridgeCoreSDK/"+Di},params:i.coreApiQueryParams})}async getTokenInfo(){let{data:i}=await this.api.get("/token-info",{params:{filter:"all"}});return{chainDetailsMap:Zi(i),poolInfoMap:_i(i)}}async getPendingInfo(){let{data:i}=await this.api.get("/pending-info");return i}async getGasBalance(i,r){let{data:a}=await this.api.get(`/check/${i}/${r}`);return a}async getTransferStatus(i,r){let{data:a}=await this.api.get(`/chain/${i}/${r}`);return a}async getReceiveTransactionCost(i){let{data:r}=await this.api.post("/receive-fee",i,{headers:{"Content-Type":"application/json"}});return{exchangeRate:r.exchangeRate,fee:r.fee,sourceNativeTokenPrice:r.sourceNativeTokenPrice}}async getPoolInfoMap(i){let r=i instanceof Array?i:[i],{data:a}=await this.api.post("/pool-info",{pools:r},{headers:{"Content-Type":"application/json"}});return Ji(a)}};g();y();f();import Mn from"timed-cache";var Vr=20*1e3,xs=55*1e3,On=class{constructor(i){this.apiClient=i;this.tokenInfoCache=new Mn({defaultTtl:xs}),this.receivedTransactionCache=new Mn({defaultTtl:Vr}),this.pendingInfoCache=new Mn({defaultTtl:Vr}),this.gasBalanceCache=new Mn({defaultTtl:Vr})}tokenInfoCache;pendingInfoCache;gasBalanceCache;receivedTransactionCache;getTokenInfo(){let i="TOKEN_INFO_CACHE_KEY",r=this.tokenInfoCache.get(i);if(r)return r;let a=this.apiClient.getTokenInfo();return this.tokenInfoCache.put(i,a),a}async getGasBalance(i,r){let a=`GAS_BALANCE_${i}_${r}`,o=this.gasBalanceCache.get(a);if(o)return o;let m=this.apiClient.getGasBalance(i,r);return this.gasBalanceCache.put(a,m),m}async getPendingInfo(){let i="PENDING_INFO_CACHE_KEY",r=this.pendingInfoCache.get(i);if(r)return r;let a=this.apiClient.getPendingInfo();return this.pendingInfoCache.put(i,a),a}async getReceiveTransactionCost(i){let r=`RECEIVE_TX_COST_${i.sourceChainId}_${i.destinationChainId}_${i.messenger}`,a=this.receivedTransactionCache.get(r);if(a)return a;let o=await this.apiClient.getReceiveTransactionCost(i);return this.receivedTransactionCache.put(r,o),o}async getTransferStatus(i,r){return this.apiClient.getTransferStatus(i,r)}async getPoolInfoMap(i){return this.apiClient.getPoolInfoMap(i)}};g();y();f();var Nn=class{constructor(i){this.apiClient=i}async getChainDetailsMap(){return(await this.apiClient.getTokenInfo()).chainDetailsMap}async tokens(){let i=await this.getChainDetailsMap();return Object.values(i).flatMap(r=>r.tokens)}async getPendingInfo(){return this.apiClient.getPendingInfo()}async getGasBalance(i,r){return this.apiClient.getGasBalance(i,r)}async getChainDetailsMapAndPoolInfoMap(){return await this.apiClient.getTokenInfo()}async getTransferStatus(i,r){return await this.apiClient.getTransferStatus(i,r)}async getReceiveTransactionCost(i){return await this.apiClient.getReceiveTransactionCost(i)}async getPoolInfoMap(i){return await this.apiClient.getPoolInfoMap(i)}};g();y();f();var Dn=class{constructor(i,r){this.client=i;this.isStaging=r.coreApiQueryParams?.staging==="true"}isStaging;async getChainDetailsMap(i){let r=await this.client.getChainDetailsMap(),a={};for(let o in r){let m=r[o];m&&(a[o]={...m,tokens:Li(m.tokens,i,this.isStaging)})}return a}async tokens(i){return Li(await this.client.tokens(),i,this.isStaging)}async getPendingInfo(){return this.client.getPendingInfo()}async getGasBalance(i,r){return this.client.getGasBalance(i,r)}async getTransferStatus(i,r){return await this.client.getTransferStatus(i,r)}async getReceiveTransactionCost(i){return await this.client.getReceiveTransactionCost(i)}cachePut(i,r){return this.client.cachePut(i,r)}getPoolInfoByKey(i){return this.client.getPoolInfoByKey(i)}refreshPoolInfo(i){return this.client.refreshPoolInfo(i)}};function Li(s,i,r){return s.filter(a=>r?!0:a.flags[i]).map(Fs)}function Fs(s){let{flags:i,...r}=s;return r}g();y();f();import Ms from"timed-cache";var Os=55*1e3,Wn=class{constructor(i){this.client=i;this.poolInfoCache=new jr}poolInfoCache;async getChainDetailsMap(){return(await this.client.getChainDetailsMapAndPoolInfoMap()).chainDetailsMap}async tokens(){return await this.client.tokens()}getTransferStatus(i,r){return this.client.getTransferStatus(i,r)}getReceiveTransactionCost(i){return this.client.getReceiveTransactionCost(i)}getPendingInfo(){return this.client.getPendingInfo()}getGasBalance(i,r){return this.client.getGasBalance(i,r)}async getPoolInfoByKey(i){this.poolInfoCache.putAllIfNotExists((await this.client.getChainDetailsMapAndPoolInfoMap()).poolInfoMap);let r=this.poolInfoCache.get(i);if(r)return r;{let a=await this.client.getPoolInfoMap(i);this.poolInfoCache.putAll(a);let o=a[jt(i)];if(o)return o;throw new O("Cannot find pool info for "+i.poolAddress+" on chain "+i.chainSymbol)}}async refreshPoolInfo(i){let r;if(i)this.poolInfoCache.putAllIfNotExists((await this.client.getChainDetailsMapAndPoolInfoMap()).poolInfoMap),r=await this.client.getPoolInfoMap(i);else{let a=await this.client.getChainDetailsMapAndPoolInfoMap();r=await this.client.getPoolInfoMap($i(a.chainDetailsMap))}this.poolInfoCache.putAll(r)}cachePut(i,r){this.poolInfoCache.put(jt(i),r)}},jr=class{cache;constructor(){this.cache=new Ms({defaultTtl:Os})}putAll(i){for(let[r,a]of Object.entries(i))this.cache.put(r,a)}putAllIfNotExists(i){for(let[r,a]of Object.entries(i))this.cache.get(r)||this.cache.put(r,a)}put(i,r){this.cache.put(i,r)}get(i){let r=jt(i);return this.cache.get(r)}};g();y();f();g();y();f();g();y();f();import{TronWeb as wo}from"tronweb";import{Web3 as Co}from"web3";g();y();f();import{Big as Xi}from"big.js";async function pe(s,i){return await s.getPoolInfoByKey({chainSymbol:i.chainSymbol,poolAddress:i.poolAddress})}function ee(s){if(Xi(s).lte(0))throw new ct("Amount must be greater than zero")}function ne(s,i,r){let a=Xi(i).toFixed(),[o,m]=a.split(".");if(m&&m.length>r)throw new vn(s,m.length,r)}async function Un(s,i,r){return await Promise.race([s,new Promise((a,o)=>{setTimeout(()=>o(new an(i)),r)})])}async function Zr(s,i,r,a){if(r<1)throw new Error(`Bad argument: 'maxRetries' must be greater than 0, but ${r} was received.`);let o=0;for(;;)try{return await Un(s(),i,a)}catch{if(++o>=r)throw new an(i)}}async function Yi(s,i,r,a=1.5,o=!1){let m=[],u=0,p=await s();if(m.push(p),!i(p))return m;let h=new Date(Date.now()+r*1e3).valueOf(),b=1e3,S=b;for(;Date.now()<h;){let C=m[m.length-1];if(C===void 0||!i(C))break;u++,o&&console.info(`Waiting ${b}ms before trying again (bringing the total wait time to ${S}ms so far, of total ${r*1e3}ms)`),await new Promise(B=>setTimeout(B,b)),b=b*a,new Date(Date.now()+b).valueOf()>h&&(b=h-Date.now(),o&&console.info(`was gonna wait too long; new waitTime: ${b}ms`)),S=b+S;let x=await s(C);m.push(x),o&&i(x)&&console.info(`${u}. Called ${s.name}; ${m.length} prev attempts. Most recent: ${JSON.stringify(m[m.length-1],null,2)}`)}return m}g();y();f();import{Big as Js}from"big.js";g();y();f();var Ns={abi:[{inputs:[{internalType:"uint256",name:"_chainId",type:"uint256"},{internalType:"uint256",name:"_chainPrecision",type:"uint256"},{internalType:"contract Messenger",name:"_allbridgeMessenger",type:"address"},{internalType:"contract WormholeMessenger",name:"_wormholeMessenger",type:"address"},{internalType:"contract IGasOracle",name:"_gasOracle",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"gas",type:"uint256"}],name:"BridgingFeeFromTokens",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"bridgeTransactionCost",type:"uint256"},{indexed:!1,internalType:"uint256",name:"messageTransactionCost",type:"uint256"}],name:"ReceiveFee",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Received",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"bytes32",name:"sendToken",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"receiveToken",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"sendAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"receiveAmount",type:"uint256"}],name:"Swapped",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"recipient",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"enum MessengerProtocol",name:"messenger",type:"uint8"},{indexed:!1,internalType:"bytes32",name:"message",type:"bytes32"}],name:"TokensReceived",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"recipient",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"destinationChainId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"receiveToken",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"enum MessengerProtocol",name:"messenger",type:"uint8"}],name:"TokensSent",type:"event"},{stateMutability:"payable",type:"fallback"},{inputs:[{internalType:"uint256",name:"_chainId",type:"uint256"},{internalType:"bytes32",name:"tokenAddress",type:"bytes32"}],name:"addBridgeToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract Pool",name:"pool",type:"address"},{internalType:"bytes32",name:"token",type:"bytes32"}],name:"addPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"canSwap",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"chainId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"}],name:"gasUsage",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"destinationChainId",type:"uint256"},{internalType:"enum MessengerProtocol",name:"messenger",type:"uint8"},{internalType:"address",name:"tokenAddress",type:"address"}],name:"getBridgingCostInTokens",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"enum MessengerProtocol",name:"protocol",type:"uint8"}],name:"getMessageCost",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"enum MessengerProtocol",name:"protocol",type:"uint8"}],name:"getMessageGasUsage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"}],name:"getTransactionCost",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"message",type:"bytes32"},{internalType:"enum MessengerProtocol",name:"protocol",type:"uint8"}],name:"hasReceivedMessage",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"message",type:"bytes32"}],name:"hasSentMessage",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"recipient",type:"bytes32"},{internalType:"uint256",name:"sourceChainId",type:"uint256"},{internalType:"uint256",name:"destinationChainId",type:"uint256"},{internalType:"bytes32",name:"receiveToken",type:"bytes32"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"enum MessengerProtocol",name:"messenger",type:"uint8"}],name:"hashMessage",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"bytes32",name:"tokenAddress",type:"bytes32"}],name:"otherBridgeTokens",outputs:[{internalType:"bool",name:"isSupported",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"}],name:"otherBridges",outputs:[{internalType:"bytes32",name:"bridgeAddress",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"tokenId",type:"bytes32"}],name:"pools",outputs:[{internalType:"contract Pool",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"messageHash",type:"bytes32"}],name:"processedMessages",outputs:[{internalType:"uint256",name:"isProcessed",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"recipient",type:"bytes32"},{internalType:"uint256",name:"sourceChainId",type:"uint256"},{internalType:"bytes32",name:"receiveToken",type:"bytes32"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"enum MessengerProtocol",name:"messenger",type:"uint8"},{internalType:"uint256",name:"receiveAmountMin",type:"uint256"}],name:"receiveTokens",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"_chainId",type:"uint256"},{internalType:"bytes32",name:"bridgeAddress",type:"bytes32"}],name:"registerBridge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_chainId",type:"uint256"},{internalType:"bytes32",name:"tokenAddress",type:"bytes32"}],name:"removeBridgeToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"messageHash",type:"bytes32"}],name:"sentMessages",outputs:[{internalType:"uint256",name:"isSent",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract Messenger",name:"_allbridgeMessenger",type:"address"}],name:"setAllbridgeMessenger",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IGasOracle",name:"_gasOracle",type:"address"}],name:"setGasOracle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"uint256",name:"gasAmount",type:"uint256"}],name:"setGasUsage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_rebalancer",type:"address"}],name:"setRebalancer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_stopAuthority",type:"address"}],name:"setStopAuthority",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract WormholeMessenger",name:"_wormholeMessenger",type:"address"}],name:"setWormholeMessenger",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"token",type:"bytes32"},{internalType:"bytes32",name:"receiveToken",type:"bytes32"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"receiveAmountMin",type:"uint256"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"token",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"recipient",type:"bytes32"},{internalType:"uint256",name:"destinationChainId",type:"uint256"},{internalType:"bytes32",name:"receiveToken",type:"bytes32"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"enum MessengerProtocol",name:"messenger",type:"uint8"},{internalType:"uint256",name:"feeTokenAmount",type:"uint256"}],name:"swapAndBridge",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"withdrawBridgingFeeInTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawGasTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}]},Ki=Ns;g();y();f();var Ds={abi:[{inputs:[{internalType:"uint256",name:"chainId_",type:"uint256"},{internalType:"uint256",name:"chainPrecision_",type:"uint256"},{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"address",name:"cctpMessenger_",type:"address"},{internalType:"address",name:"cctpTransmitter_",type:"address"},{internalType:"contract IGasOracle",name:"gasOracle_",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ReceivedExtraGas",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ReceivedGas",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"newRecipient",type:"bytes32"}],name:"RecipientReplaced",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"recipientWalletAddress",type:"bytes32"}],name:"TokensSentExtras",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"bytes32",name:"recipient",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"destinationChainId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"uint256",name:"receivedRelayerFeeFromGas",type:"uint256"},{indexed:!1,internalType:"uint256",name:"receivedRelayerFeeFromTokens",type:"uint256"},{indexed:!1,internalType:"uint256",name:"relayerFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"receivedRelayerFeeTokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"adminFeeTokenAmount",type:"uint256"}],name:"TokensSent",type:"event"},{stateMutability:"payable",type:"fallback"},{inputs:[],name:"adminFeeShareBP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"recipient",type:"bytes32"},{internalType:"uint256",name:"destinationChainId",type:"uint256"},{internalType:"uint256",name:"relayerFeeTokenAmount",type:"uint256"}],name:"bridge",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"recipient",type:"bytes32"},{internalType:"bytes32",name:"recipientWalletAddress",type:"bytes32"},{internalType:"uint256",name:"destinationChainId",type:"uint256"},{internalType:"uint256",name:"relayerFeeTokenAmount",type:"uint256"}],name:"bridgeWithWalletAddress",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"chainId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"originalMessage",type:"bytes"},{internalType:"bytes",name:"originalAttestation",type:"bytes"},{internalType:"bytes32",name:"newRecipient",type:"bytes32"}],name:"changeRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"}],name:"gasUsage",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"destinationChainId",type:"uint256"}],name:"getBridgingCostInTokens",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"chainId_",type:"uint256"}],name:"getDomainByChainId",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"}],name:"getTransactionCost",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"sourceChainId",type:"uint256"},{internalType:"uint64",name:"nonce",type:"uint64"}],name:"isMessageProcessed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"bytes",name:"message",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"receiveTokens",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"chainId_",type:"uint256"},{internalType:"uint32",name:"domain",type:"uint32"}],name:"registerBridgeDestination",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"adminFeeShareBP_",type:"uint256"}],name:"setAdminFeeShare",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IGasOracle",name:"gasOracle_",type:"address"}],name:"setGasOracle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"uint256",name:"gasAmount",type:"uint256"}],name:"setGasUsage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"chainId_",type:"uint256"}],name:"unregisterBridgeDestination",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdrawFeeInTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawGas",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}]},Hi=Ds;g();y();f();import*as jn from"@project-serum/anchor";import{PublicKey as ua}from"@solana/web3.js";g();y();f();import*as Te from"@project-serum/anchor";import{PublicKey as Re}from"@solana/web3.js";async function Xe(s,i){return Te.utils.token.associatedAddress({mint:i,owner:s})}async function ft(s){let[i]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("config")],s);return i}async function Qi(s,i){let[r]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("lock"),Uint8Array.from(s)],i);return r}async function cn(s,i){let[r]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("price_v2"),Uint8Array.from([s])],i);return r}async function Zt(s){let i=await ft(s),[r]=await Re.findProgramAddress([i.toBuffer()],s);return r}async function zi(s,i){let[r]=await Re.findProgramAddress([s.toBuffer()],i);return r}async function _t(s,i){let[r]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("token"),s.toBytes()],i);return r}async function qi(s,i,r){let[a]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("other_bridge_token"),w.from([s]),i],r);return a}async function _r(s,i){let[r]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("chain_bridge"),Uint8Array.from([s])],i);return r}async function $r(s,i){let[r]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("gas_usage"),Uint8Array.from([s])],i);return r}async function ea(s,i){let[r]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("sent_message"),s],i);return r}async function Jr(s,i,r){let[a]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("user_deposit"),i.toBytes(),s.toBytes()],r);return a}async function ta(s,i){let[r]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("cctp_bridge"),s.toBytes()],i);return r}async function na(s,i){let[r]=await Re.findProgramAddress([Te.utils.bytes.utf8.encode("token"),s.toBytes()],i);return r}function ra(s,i){let[r]=Re.findProgramAddressSync([Te.utils.bytes.utf8.encode("lock"),i.toBuffer()],s);return r}function ia(s,i,r,a){let o=xt("message_transmitter",r),m=xt("token_messenger",a),u=xt("__event_authority",a),p=xt("token_minter",a),h=xt("local_token",a,[i]),b=xt("remote_token_messenger",a,[s.toString()]),S=xt("sender_authority",a);return{messageTransmitterAccount:o,tokenMessenger:m,tokenMessengerEventAuthority:u,tokenMinter:p,localToken:h,remoteTokenMessengerKey:b,authorityPda:S}}function xt(s,i,r=[]){let a=[w.from(Te.utils.bytes.utf8.encode(s))];for(let m of r)typeof m=="string"?a.push(w.from(Te.utils.bytes.utf8.encode(m))):Array.isArray(m)?a.push(w.from(Uint8Array.from(m))):w.isBuffer(m)?a.push(w.from(Uint8Array.from(m))):a.push(w.from(Uint8Array.from(m.toBuffer())));return Re.findProgramAddressSync(a,i)[0]}g();y();f();import{AnchorProvider as Ws}from"@project-serum/anchor";import{Connection as Us,PublicKey as Es}from"@solana/web3.js";function yt(s,i){let r=new Us(s,"confirmed"),a=new Es(i);return new Ws(r,{publicKey:a},{preflightCommitment:"confirmed",commitment:"confirmed"})}g();y();f();import{PublicKey as Gs}from"@solana/web3.js";import{Address as Vs}from"@stellar/stellar-sdk";import{Big as ut}from"big.js";import oa from"randombytes";import{utils as aa}from"tronweb";function mt(s,i,r){let a;switch(i){case"EVM":{a=sa(s);break}case"SOLANA":{a=new Gs(s).toBuffer();break}case"TRX":{a=js(s);break}case"SRB":{a=new Vs(s).toBuffer();break}case"SUI":{a=sa(s);break}}switch(r){case"EVM":return"0x"+a.toString("hex");case"SOLANA":return Array.from(a);case"TRX":return a;case"SRB":return a.toJSON().data;case"SUI":return"0x"+a.toString("hex")}}function Ye(s){return s.replace(/^0x/i,"")}function ca(s){return w.from(s.replace(/^0x/i,""),"hex")}function sa(s){let r=ca(s);return w.concat([w.alloc(32-r.length,0),r],32)}function js(s){let i=En(s),r=ca(i);return Zs(r,32)}function En(s){let i=aa.crypto.decodeBase58Address(s);return i?aa.bytes.byteArray2hexStr(i).replace(/^41/,"0x"):""}function Zs(s,i){if(s.length>=i)return s;let r=w.alloc(i,0);return s.copy(r,i-s.length),r}function Gn(){return oa(32)}function it(){let s=oa(32).readBigInt64BE();return s<0?s*-1n:s}function at(s,i){let r={},a=i.sourceToken;if(r.amount=z(i.amount,a.decimals).toFixed(),r.contractAddress=a.bridgeAddress,r.fromAccountAddress=i.fromAccountAddress,s==="SUI"){if(!a.originTokenAddress)throw new O("SUI sourceToken must contain 'originTokenAddress'");r.fromTokenAddress=a.originTokenAddress}else r.fromTokenAddress=mt(a.tokenAddress,s,s);if(r.toAccountAddress=i.toAccountAddress,s==="SUI"){if(!i.destinationToken.originTokenAddress)throw new O("SUI destinationToken must contain 'originTokenAddress'");r.toTokenAddress=i.destinationToken.originTokenAddress}else r.toTokenAddress=mt(i.destinationToken.tokenAddress,s,s);return r.minimumReceiveAmount=i.minimumReceiveAmount?z(i.minimumReceiveAmount,i.destinationToken.decimals).toFixed():"0",r}async function Ke(s,i,r){let a={};a.fromChainId=i.sourceToken.allbridgeChainId,a.fromChainSymbol=i.sourceToken.chainSymbol;let o=Q.getChainProperty(i.destinationToken.chainSymbol).chainType;if(s==="SUI"){if(!i.sourceToken.originTokenAddress)throw new O("SUI token must contain 'originTokenAddress'");a.fromTokenAddress=i.sourceToken.originTokenAddress}else a.fromTokenAddress=i.sourceToken.tokenAddress;a.toChainId=i.destinationToken.allbridgeChainId,a.toTokenAddress=i.destinationToken.tokenAddress,i.gasFeePaymentMethod==="stablecoin"?a.gasFeePaymentMethod="stablecoin":a.gasFeePaymentMethod="native";let m=i.sourceToken;if(i.messenger===3){if(!m.cctpAddress||!i.destinationToken.cctpAddress)throw new Be("Such route does not support CCTP protocol");a.contractAddress=m.cctpAddress}else if(i.messenger===4){if(!m.cctpV2Address||!i.destinationToken.cctpV2Address)throw new Be("Such route does not support CCTP V2 protocol");a.contractAddress=m.cctpV2Address}else a.contractAddress=m.bridgeAddress;a.messenger=i.messenger,a.fromAccountAddress=i.fromAccountAddress,a.amount=z(i.amount,m.decimals).toFixed();let{fee:u,feeFormat:p}=i;if(!u){let C=(await Lr(a.fromChainId,i.sourceToken.chainType,a.toChainId,m.decimals,a.messenger,r))[a.gasFeePaymentMethod];if(!C)throw new nn;u=C.int,p="int"}if(p=="float")switch(a.gasFeePaymentMethod){case"native":a.fee=z(u,Q.getChainDecimalsByType(m.chainType)).toFixed(0);break;case"stablecoin":a.fee=z(u,m.decimals).toFixed(0);break}else a.fee=u;let{extraGas:h,extraGasFormat:b}=i;if(h&&+h>0){if(b=="float")switch(a.gasFeePaymentMethod){case"native":a.extraGas=z(h,Q.getChainDecimalsByType(m.chainType)).toFixed(0);break;case"stablecoin":a.extraGas=z(h,m.decimals).toFixed(0);break}else a.extraGas=h;await $s(a.extraGas,a.gasFeePaymentMethod,m,i.destinationToken,r)}return s!=="SUI"&&(a.fromTokenAddress=mt(a.fromTokenAddress,s,s)),a.toAccountAddress=mt(i.toAccountAddress,o,s),a.toTokenAddress=mt(a.toTokenAddress,o,s),a.gasFeePaymentMethod=="stablecoin"&&_s(a.amount,m.decimals,a.fee,a.extraGas),a}function _s(s,i,r,a){let o=ut(s).minus(r).minus(a??0);if(o.lte(0))throw new Gt(`Amount not enough to pay fee, ${Y(ut(o).minus(1).neg(),i).toFixed()} stables is missing`)}async function Lr(s,i,r,a,o,m){let u=await m.getReceiveTransactionCost({sourceChainId:s,destinationChainId:r,messenger:o}),p={native:{int:u.fee,float:Y(u.fee,Q.getChainDecimalsByType(i)).toFixed()}};if(u.sourceNativeTokenPrice){let h=et(new ut(u.fee).mul(u.sourceNativeTokenPrice),Q.getChainDecimalsByType(i),a).toFixed(0,ut.roundUp);p.stablecoin={int:h,float:Y(h,a).toFixed()}}return p}async function $s(s,i,r,a,o){let u=(await Xr(r,a,o)).extraGasMax[i];if(!u)throw new nn(`Impossible to pay extra gas by '${i}' payment method`);let p=u.int;if(ut(s).gt(p))throw new Rn(`Extra gas ${s} in int format, exceeded limit ${p} for '${i}' payment method`)}async function Xr(s,i,r){let a={},o=await r.getReceiveTransactionCost({sourceChainId:s.allbridgeChainId,destinationChainId:i.allbridgeChainId,messenger:1}),m=i.txCostAmount.maxAmount,u=Y(m,Q.getChainDecimalsByType(i.chainType)).toFixed(),p=ut(u).div(o.exchangeRate).toFixed(Q.getChainDecimalsByType(s.chainType),ut.roundDown),h=z(p,Q.getChainDecimalsByType(s.chainType)).toFixed(0);if(a.native={int:h,float:p},o.sourceNativeTokenPrice){let b=ut(p).mul(o.sourceNativeTokenPrice).toFixed(s.decimals,ut.roundDown);a.stablecoin={int:z(b,s.decimals).toFixed(0),float:b}}return{extraGasMax:a,destinationChain:{gasAmountMax:{int:m,float:u},swap:{int:i.txCostAmount.swap,float:Y(i.txCostAmount.swap,Q.getChainDecimalsByType(i.chainType)).toFixed()},transfer:{int:i.txCostAmount.transfer,float:Y(i.txCostAmount.transfer,Q.getChainDecimalsByType(i.chainType)).toFixed()}},exchangeRate:o.exchangeRate,sourceNativeTokenPrice:o.sourceNativeTokenPrice}}function Aa(s){return s.sourceToken.chainSymbol!==s.destinationToken.chainSymbol}async function Zn(s,i,r,a){let o,m=new ua(i),u=new ua(r),p=await Xe(m,u),h=yt(a,i);jn.setProvider(h);let b=await jn.Spl.token(h).account.token.fetchNullable(p);if(b?.authority.equals(m))o=mt(p.toBase58(),"SOLANA",s);else{let S=await h.connection.getTokenAccountsByOwner(m,{mint:u});if(S.value.length===0&&!b)o=mt(p.toBase58(),"SOLANA",s);else if(S.value.length>0){let C=S.value[0];if(!C?.pubkey)throw new O("First token account or its public key is undefined");o=mt(C.pubkey.toBase58(),"SOLANA",s)}else throw new O("Associated account has wrong owner")}return o}g();y();f();g();y();f();var De=class{};var An=class extends De{constructor(r,a,o){super();this.web3=r;this.api=a;this.nodeRpcUrlsConfig=o}chainType="EVM";async send(r){let a=await this.buildRawTransactionSend(r);return this.sendRawTransaction(a)}async buildRawTransactionSwap(r){let a=at(this.chainType,r);return await this.buildRawTransactionSwapFromParams(a)}async buildRawTransactionSwapFromParams(r){let{amount:a,contractAddress:o,fromAccountAddress:m,fromTokenAddress:u,toAccountAddress:p,toTokenAddress:h,minimumReceiveAmount:b}=r,C=this.getBridgeContract(o).methods.swap(a,u,h,p,b);return Promise.resolve({from:m,to:o,data:C.encodeABI()})}async buildRawTransactionSend(r){let a=await Ke(this.chainType,r,this.api),{amount:o,contractAddress:m,fromAccountAddress:u,fromTokenAddress:p,toChainId:h,toAccountAddress:b,toTokenAddress:S,messenger:C,fee:x,gasFeePaymentMethod:B,extraGas:v}=a,M="0x"+Gn().toString("hex"),F,W,D=x;if(v&&(D=Js(D).plus(v).toFixed()),C===3||C===4){let U=await this.buildRawTransactionCctpSend(r,a,D);F=U.sendMethod,W=U.value}else{let U=this.getBridgeContract(m);B==="stablecoin"?(F=U.methods.swapAndBridge(p,o,b,h,S,M,C,D),W="0"):(F=U.methods.swapAndBridge(p,o,b,h,S,M,C,0),W=D)}return Promise.resolve({from:u,to:m,value:W,data:F.encodeABI()})}async buildRawTransactionCctpSend(r,a,o){let{amount:m,contractAddress:u,toChainId:p,toAccountAddress:h,gasFeePaymentMethod:b}=a,S=this.getCctpBridgeContract(u),C,x;if(r.destinationToken.chainType==="SOLANA"){let B=await Zn(this.chainType,r.toAccountAddress,r.destinationToken.tokenAddress,this.nodeRpcUrlsConfig.getNodeRpcUrl("SOL"));b==="stablecoin"?(C=S.methods.bridgeWithWalletAddress(m,B,h,p,o),x="0"):(C=S.methods.bridgeWithWalletAddress(m,B,h,p,0),x=o)}else b==="stablecoin"?(C=S.methods.bridge(m,h,p,o),x="0"):(C=S.methods.bridge(m,h,p,0),x=o);return{sendMethod:C,value:x}}async sendRawTransaction(r){let a=await this.web3.eth.estimateGas(r),o={maxPriorityFeePerGas:null,maxFeePerGas:null},{transactionHash:m}=await this.web3.eth.sendTransaction({...r,gas:a,...o});return{txId:m.toString()}}getBridgeContract(r){return new this.web3.eth.Contract(Ki.abi,r)}getCctpBridgeContract(r){return new this.web3.eth.Contract(Hi.abi,r)}};g();y();f();var _n=class{constructor(i,r,a,o){this.api=i;this.nodeRpcUrlsConfig=r;this.params=a;this.tokenService=o}async approve(i,r){let a,o;r?(a=i,o=r):o=i;let m=un(o.token,o.messenger);return this.tokenService.buildRawTransactionApprove({...o,spender:m},a)}async send(i,r){return ee(i.amount),ne("amount",i.amount,i.sourceToken.decimals),Aa(i)?$n(i.sourceToken.chainSymbol,this.api,this.nodeRpcUrlsConfig,this.params,r).buildRawTransactionSend(i):$n(i.sourceToken.chainSymbol,this.api,this.nodeRpcUrlsConfig,this.params,r).buildRawTransactionSwap(i)}};g();y();f();import{BN as Lt,Program as Hr,Spl as to,web3 as ht}from"@project-serum/anchor";import{Keypair as Pa,PublicKey as re,SystemProgram as no}from"@solana/web3.js";import{Big as He}from"big.js";g();y();f();var mn={version:"0.1.0",name:"bridge",instructions:[{name:"initialize",accounts:[{name:"admin",isMut:!0,isSigner:!0},{name:"config",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"InitializeArgs"}}]},{name:"initializePool",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"mint",isMut:!1,isSigner:!1},{name:"token",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"InitializePoolArgs"}}]},{name:"initDepositAccount",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"userDeposit",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"deposit",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"userToken",isMut:!0,isSigner:!1},{name:"userDeposit",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"withdraw",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"userToken",isMut:!0,isSigner:!1},{name:"userDeposit",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"amountLp",type:"u64"}]},{name:"swapAndBridge",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"lock",isMut:!0,isSigner:!1},{name:"mint",isMut:!1,isSigner:!1},{name:"config",isMut:!0,isSigner:!1},{name:"otherBridgeToken",isMut:!0,isSigner:!1},{name:"messenger",isMut:!1,isSigner:!1},{name:"messengerConfig",isMut:!0,isSigner:!1},{name:"sentMessageAccount",isMut:!0,isSigner:!1},{name:"messengerGasUsage",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"gasPrice",isMut:!1,isSigner:!1},{name:"thisGasPrice",isMut:!1,isSigner:!1},{name:"chainBridge",isMut:!1,isSigner:!1},{name:"userToken",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"BridgeArgs"}}]},{name:"swapAndBridgeWormhole",accounts:[{name:"user",isMut:!1,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"lock",isMut:!0,isSigner:!1},{name:"mint",isMut:!1,isSigner:!1},{name:"config",isMut:!0,isSigner:!1},{name:"otherBridgeToken",isMut:!0,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"gasPrice",isMut:!1,isSigner:!1},{name:"thisGasPrice",isMut:!1,isSigner:!1},{name:"chainBridge",isMut:!1,isSigner:!1},{name:"userToken",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"wormholeMessenger",isMut:!1,isSigner:!1},{name:"wormholeMessengerConfig",isMut:!0,isSigner:!1},{name:"wormholeProgram",isMut:!1,isSigner:!1},{name:"bridge",isMut:!0,isSigner:!1},{name:"message",isMut:!0,isSigner:!0},{name:"sequence",isMut:!0,isSigner:!1},{name:"feeCollector",isMut:!0,isSigner:!1},{name:"messengerGasUsage",isMut:!1,isSigner:!1},{name:"clock",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"BridgeArgs"}}]},{name:"swap",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"sendMint",isMut:!1,isSigner:!1},{name:"receiveMint",isMut:!1,isSigner:!1},{name:"config",isMut:!0,isSigner:!1},{name:"sendPool",isMut:!0,isSigner:!1},{name:"receivePool",isMut:!0,isSigner:!1},{name:"sendBridgeToken",isMut:!0,isSigner:!1},{name:"receiveBridgeToken",isMut:!0,isSigner:!1},{name:"sendUserToken",isMut:!0,isSigner:!1},{name:"receiveUserToken",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"},{name:"receiveAmountMin",type:"u64"}]},{name:"registerChainBridge",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"config",isMut:!1,isSigner:!1},{name:"chainBridge",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"RegisterChainBridgeArgs"}}]},{name:"updateChainBridge",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!1,isSigner:!1},{name:"chainBridge",isMut:!0,isSigner:!1}],args:[{name:"args",type:{defined:"UpdateChainBridgeArgs"}}]},{name:"receiveAndSwap",accounts:[{name:"user",isMut:!0,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"receivedMessageAccount",isMut:!1,isSigner:!1},{name:"unlock",isMut:!0,isSigner:!1},{name:"chainBridge",isMut:!1,isSigner:!1},{name:"userToken",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"messengerProgram",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"UnlockArgs"}}]},{name:"receiveAndSwapWormhole",accounts:[{name:"user",isMut:!0,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"receivedMessageAccount",isMut:!1,isSigner:!1},{name:"unlock",isMut:!0,isSigner:!1},{name:"chainBridge",isMut:!1,isSigner:!1},{name:"userToken",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"messengerProgram",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"UnlockArgs"}}]},{name:"withdrawGasToken",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"recipient",isMut:!0,isSigner:!1},{name:"config",isMut:!0,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"claimRewards",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"userToken",isMut:!0,isSigner:!1},{name:"userDeposit",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"setAdmin",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"newAdmin",isMut:!1,isSigner:!1},{name:"config",isMut:!0,isSigner:!1}],args:[]},{name:"startBridge",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!0,isSigner:!1}],args:[{name:"actionType",type:{defined:"ActionType"}}]},{name:"stopBridge",accounts:[{name:"stopAuthority",isMut:!1,isSigner:!0},{name:"config",isMut:!0,isSigner:!1}],args:[{name:"actionType",type:{defined:"ActionType"}}]},{name:"setRebalancer",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!0,isSigner:!1},{name:"rebalancer",isMut:!1,isSigner:!1}],args:[]},{name:"setStopAuthority",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"newAuthority",isMut:!1,isSigner:!1},{name:"config",isMut:!0,isSigner:!1}],args:[]},{name:"setAllbridgeMessengerProgramId",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!0,isSigner:!1}],args:[{name:"newProgramId",type:"publicKey"}]},{name:"setWormholeMessengerProgramId",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!0,isSigner:!1}],args:[{name:"newProgramId",type:"publicKey"}]},{name:"setGasOracleProgramId",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!0,isSigner:!1}],args:[{name:"newProgramId",type:"publicKey"}]},{name:"setPoolFeeShare",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1}],args:[{name:"feeShareBp",type:"u64"}]},{name:"setBalanceRatioMin",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1}],args:[{name:"balanceRatioMinBp",type:"u16"}]},{name:"setPoolAdminFeeShare",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1}],args:[{name:"feeShareBp",type:"u64"}]},{name:"addOtherBridgeToken",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"config",isMut:!1,isSigner:!1},{name:"otherBridgeToken",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"chainId",type:"u8"},{name:"tokenAddress",type:{array:["u8",32]}}]},{name:"removeOtherBridgeToken",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"config",isMut:!0,isSigner:!1},{name:"otherBridgeToken",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"chainId",type:"u8"},{name:"tokenAddress",type:{array:["u8",32]}}]},{name:"withdrawAdminFee",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"adminToken",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"adjustTotalLpAmount",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"config",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"userToken",isMut:!0,isSigner:!1},{name:"userDeposit",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]}],accounts:[{name:"chainBridge",type:{kind:"struct",fields:[{name:"address",type:{array:["u8",32]}},{name:"chainId",type:"u8"},{name:"gasUsage",type:"u64"}]}},{name:"config",type:{kind:"struct",fields:[{name:"admin",type:"publicKey"},{name:"allbridgeMessengerProgramId",type:"publicKey"},{name:"wormholeMessengerProgramId",type:"publicKey"},{name:"gasOracleProgramId",type:"publicKey"},{name:"rebalancer",type:"publicKey"},{name:"stopAuthority",type:"publicKey"},{name:"authorityBumpSeed",type:"u8"},{name:"canSwap",type:"bool"},{name:"canDeposit",type:"bool"},{name:"canWithdraw",type:"bool"}]}},{name:"lock",type:{kind:"struct",fields:[{name:"sender",type:"publicKey"},{name:"sentTokenAddress",type:"publicKey"},{name:"amount",type:"u64"},{name:"vusdAmount",type:"u64"},{name:"recipient",type:{array:["u8",32]}},{name:"destinationChainId",type:"u8"},{name:"receiveToken",type:{array:["u8",32]}},{name:"nonce",type:{array:["u8",32]}},{name:"messenger",type:{defined:"Messenger"}},{name:"slot",type:"u64"},{name:"fee",type:"u64"}]}},{name:"otherBridgeToken",type:{kind:"struct",fields:[]}},{name:"pool",type:{kind:"struct",fields:[{name:"mint",type:"publicKey"},{name:"a",type:"u64"},{name:"d",type:"u64"},{name:"tokenBalance",type:"u64"},{name:"vUsdBalance",type:"u64"},{name:"reserves",type:"u64"},{name:"decimals",type:"u8"},{name:"totalLpAmount",type:"u64"},{name:"feeShareBp",type:"u64"},{name:"adminFeeShareBp",type:"u64"},{name:"accRewardPerShareP",type:"u128"},{name:"adminFeeAmount",type:"u64"},{name:"balanceRatioMinBp",type:"u16"}]}},{name:"unlock",type:{kind:"struct",fields:[{name:"hash",type:{array:["u8",32]}},{name:"amount",type:"u64"},{name:"fee",type:"u64"},{name:"vUsdAmount",type:"u64"},{name:"slot",type:"u64"}]}},{name:"userDeposit",type:{kind:"struct",fields:[{name:"userAddress",type:"publicKey"},{name:"mint",type:"publicKey"},{name:"lpAmount",type:"u64"},{name:"rewardDebt",type:"u64"}]}}],types:[{name:"RegisterChainBridgeArgs",type:{kind:"struct",fields:[{name:"chainBridgeAddress",type:{array:["u8",32]}},{name:"chainId",type:"u8"},{name:"gasUsage",type:"u64"}]}},{name:"UpdateChainBridgeArgs",type:{kind:"struct",fields:[{name:"chainBridgeAddress",type:{array:["u8",32]}},{name:"chainId",type:"u8"},{name:"gasUsage",type:"u64"}]}},{name:"InitializeArgs",type:{kind:"struct",fields:[{name:"allbridgeMessengerProgramId",type:"publicKey"},{name:"wormholeMessengerProgramId",type:"publicKey"},{name:"gasOracleProgramId",type:"publicKey"}]}},{name:"InitializePoolArgs",type:{kind:"struct",fields:[{name:"a",type:"u64"},{name:"feeShareBp",type:"u64"},{name:"adminFeeShareBp",type:"u64"},{name:"balanceRatioMinBp",type:"u16"}]}},{name:"BridgeArgs",type:{kind:"struct",fields:[{name:"nonce",type:{array:["u8",32]}},{name:"recipient",type:{array:["u8",32]}},{name:"destinationChainId",type:"u8"},{name:"receiveToken",type:{array:["u8",32]}},{name:"vusdAmount",type:"u64"}]}},{name:"UnlockArgs",type:{kind:"struct",fields:[{name:"nonce",type:{array:["u8",32]}},{name:"amount",type:"u64"},{name:"recipient",type:"publicKey"},{name:"sourceChainId",type:"u8"},{name:"receiveToken",type:"publicKey"},{name:"messenger",type:{defined:"Messenger"}},{name:"hash",type:{array:["u8",32]}},{name:"receiveAmountMin",type:"u64"}]}},{name:"RewardError",type:{kind:"enum",variants:[{name:"FeeTooHigh"}]}},{name:"Messenger",type:{kind:"enum",variants:[{name:"None"},{name:"Allbridge"},{name:"Wormhole"}]}},{name:"ActionType",type:{kind:"enum",variants:[{name:"Deposit"},{name:"Withdraw"},{name:"Swap"}]}}],errors:[{code:6e3,name:"AccountAlreadyInitialized",msg:"This account has already been initialized"},{code:6001,name:"AdminAuthorityInvalid",msg:"This instruction requires admin authority"},{code:6002,name:"InvalidSignature",msg:"Provided signature has wrong signer or message"},{code:6003,name:"InvalidHash",msg:"Wrong unlock message hash"},{code:6004,name:"PoolOverflow",msg:"PoolInfo overflow"},{code:6005,name:"ReservesExhausted",msg:"Reserves exhausted"},{code:6006,name:"ZeroAmount",msg:"Zero amount"},{code:6007,name:"ZeroChanges",msg:"Zero changes"},{code:6008,name:"HighVusdAmount",msg:"vUSD amount is too high"},{code:6009,name:"BalanceRatioExceeded",msg:"Balance ratio exceeded"},{code:6010,name:"InsufficientReceivedAmount",msg:"Received insufficient amount"},{code:6011,name:"ForbiddenAction",msg:"ForbiddenAction"},{code:6012,name:"ValueTooHigh",msg:"Value is too high"}]};g();y();f();var ma={version:"0.1.0",name:"cctp_bridge",instructions:[{name:"initialize",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"admin",isMut:!0,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"cctpBridge",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"InitializeArgs"}}]},{name:"bridge",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"messageSentEventData",isMut:!0,isSigner:!0},{name:"lock",isMut:!0,isSigner:!1},{name:"mint",isMut:!0,isSigner:!1},{name:"cctpBridge",isMut:!0,isSigner:!1},{name:"cctpMessenger",isMut:!1,isSigner:!1},{name:"messageTransmitterProgram",isMut:!1,isSigner:!1},{name:"messageTransmitterAccount",isMut:!0,isSigner:!1},{name:"tokenMessenger",isMut:!1,isSigner:!1},{name:"tokenMinter",isMut:!1,isSigner:!1},{name:"localToken",isMut:!0,isSigner:!1},{name:"remoteTokenMessengerKey",isMut:!1,isSigner:!1},{name:"authorityPda",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"gasPrice",isMut:!1,isSigner:!1},{name:"thisGasPrice",isMut:!1,isSigner:!1},{name:"chainBridge",isMut:!1,isSigner:!1},{name:"userToken",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"BridgeArgs"}}]},{name:"registerChainBridge",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"cctpBridge",isMut:!1,isSigner:!1},{name:"chainBridge",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"args",type:{defined:"RegisterChainBridgeArgs"}}]},{name:"updateChainBridge",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"cctpBridge",isMut:!1,isSigner:!1},{name:"chainBridge",isMut:!0,isSigner:!1}],args:[{name:"args",type:{defined:"UpdateChainBridgeArgs"}}]},{name:"setAdminFeeShare",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"cctpBridge",isMut:!0,isSigner:!1}],args:[{name:"feeShareBp",type:"u64"}]},{name:"setGasOracleProgramId",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"cctpBridge",isMut:!0,isSigner:!1}],args:[{name:"newProgramId",type:"publicKey"}]},{name:"withdrawGasToken",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"recipient",isMut:!0,isSigner:!1},{name:"mint",isMut:!1,isSigner:!1},{name:"cctpBridge",isMut:!0,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"withdrawAdminFee",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"cctpBridge",isMut:!1,isSigner:!1},{name:"bridgeToken",isMut:!0,isSigner:!1},{name:"adminToken",isMut:!0,isSigner:!1},{name:"bridgeAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"setCctpTokenMessengerMinter",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"cctpBridge",isMut:!0,isSigner:!1}],args:[{name:"newProgramId",type:"publicKey"}]}],accounts:[{name:"cctpBridge",type:{kind:"struct",fields:[{name:"mint",type:"publicKey"},{name:"admin",type:"publicKey"},{name:"cctpTokenMessengerMinter",type:"publicKey"},{name:"gasOracleProgramId",type:"publicKey"},{name:"authorityBumpSeed",type:"u8"},{name:"adminFeeShareBp",type:"u64"},{name:"adminFeeAmount",type:"u64"}]}},{name:"chainBridge",type:{kind:"struct",fields:[{name:"chainId",type:"u8"},{name:"gasUsage",type:"u64"},{name:"domain",type:"u32"}]}},{name:"lock",type:{kind:"struct",fields:[{name:"sender",type:"publicKey"},{name:"amount",type:"u64"},{name:"adminFee",type:"u64"},{name:"relayerFee",type:"u64"},{name:"recipient",type:{array:["u8",32]}},{name:"destinationChainId",type:"u8"},{name:"slot",type:"u64"}]}}],types:[{name:"RegisterChainBridgeArgs",type:{kind:"struct",fields:[{name:"chainId",type:"u8"},{name:"gasUsage",type:"u64"},{name:"domain",type:"u32"},{name:"mint",type:"publicKey"}]}},{name:"UpdateChainBridgeArgs",type:{kind:"struct",fields:[{name:"chainId",type:"u8"},{name:"gasUsage",type:"u64"},{name:"domain",type:"u32"},{name:"mint",type:"publicKey"}]}},{name:"BridgeArgs",type:{kind:"struct",fields:[{name:"recipient",type:{array:["u8",32]}},{name:"destinationChainId",type:"u8"},{name:"receiveToken",type:{array:["u8",32]}},{name:"amount",type:"u64"}]}},{name:"InitializeArgs",type:{kind:"struct",fields:[{name:"gasOracleProgramId",type:"publicKey"},{name:"cctpTokenMessengerMinter",type:"publicKey"}]}}],errors:[{code:6e3,name:"ValueTooHigh",msg:"Value is too high"}]};g();y();f();import{Spl as Ls}from"@project-serum/anchor";import Xs from"big.js";import{Web3 as Jn}from"web3";async function $t(s,i){return await Ls.token(i).account.token.fetch(s)}async function la(s,i,r){let a=await i.account.pool.fetch(r),o=a.decimals,m=Xs(a.feeShareBp.toString()).div(1e4).toFixed(),u={aValue:a.a.toString(),dValue:a.d.toString(),totalLpAmount:a.totalLpAmount.toString(),tokenBalance:a.tokenBalance.toString(),vUsdBalance:a.vUsdBalance.toString(),accRewardPerShareP:a.accRewardPerShareP.toString()};return tt(s,{decimals:o,feeShare:m},u)}function da(s){let i=s.amount,r="0x"+s.recipient.toString("hex"),a=s.sourceChainId,o=s.destinationChainId,m="0x"+s.receiveToken.toString("hex"),u="0x"+s.nonce.toString("hex"),p=1,h="0x"+s.chainBridge.toString("hex"),b=Jn.utils.encodePacked({t:"uint256",v:i},{t:"bytes32",v:r},{t:"uint256",v:a},{t:"bytes32",v:m},{t:"uint256",v:u},{t:"uint8",v:p});if(!b)throw new O("message cannot be undefined");let S=Jn.utils.keccak256(w.from(b.replace("0x",""),"hex")),C=w.from(S.replace("0x",""),"hex");C[0]=a,C[1]=o;let x=Jn.utils.encodePacked({t:"bytes32",v:"0x"+C.toString("hex")},{t:"bytes32",v:h});if(!x)throw new Vt("messageWithSigner cannot be undefined");let B=Jn.utils.keccak256(w.from(x.replace("0x",""),"hex")),v=w.from(B.replace("0x",""),"hex");return v[0]=C[0],v[1]=C[1],v}g();y();f();import{ComputeBudgetInstruction as ga,ComputeBudgetProgram as Ln,Connection as fa,TransactionMessage as Ys}from"@solana/web3.js";import{Big as Ks}from"big.js";g();y();f();import{AddressLookupTableAccount as pa}from"@solana/web3.js";async function Mt(s,i){return await Promise.all(s.message.addressTableLookups.map(async r=>new pa({key:r.accountKey,state:pa.deserialize(await i.getAccountInfo(r.accountKey).then(a=>{if(!a)throw new O("Cannot get AccountInfo");return a.data}))})))}g();y();f();g();y();f();var Yr="AUTO";async function Jt(s,i,r){let a=new fa(r,"confirmed"),o=(await a.simulateTransaction(s)).value.unitsConsumed;await ha(s.instructions,o,i,a)}async function ya(s,i,r){let a=new fa(r,"confirmed"),o=await Mt(s,a),m=Ys.decompile(s.message,{addressLookupTableAccounts:o});if(s.serialize().length>1232)throw new xn;await ha(m.instructions,769230,i,a),s.message=m.compileToV0Message(o)}async function ha(s,i,r,a){if(i>0){let o=Hs(i,s);if(r?.solana){let m=r.solana;if(m===Yr)await Kr(s,a);else if("pricePerUnitInMicroLamports"in m)await Kr(s,a,m.pricePerUnitInMicroLamports);else{let u=Ks(m.extraFeeInLamports).div(o).mul(sn(6)).toFixed(0);await Kr(s,a,u)}}}}function Hs(s,i){let r=i.findIndex(m=>m.programId.equals(Ln.programId)&&ga.decodeInstructionType(m)==="SetComputeUnitLimit"),a=Number((s*1.3).toFixed(0)),o=Ln.setComputeUnitLimit({units:a});return r>=0?i[r]=o:i.push(o),a.toString()}async function Kr(s,i,r){let a=s.findIndex(u=>u.programId.equals(Ln.programId)&&ga.decodeInstructionType(u)==="SetComputeUnitPrice"),o=BigInt(r||await Qs(i)),m=Ln.setComputeUnitPrice({microLamports:o});return a>=0?s[a]=m:s.push(m),o.toString()}async function Qs(s){let i=await s.getRecentPrioritizationFees(),r=0;for(let a of i)r+=a.prioritizationFee;return(r/i.length).toFixed(0)}g();y();f();import{NATIVE_MINT as zs}from"@solana/spl-token";import{Connection as qs,TransactionMessage as Ta,VersionedTransaction as eo}from"@solana/web3.js";import ba,{AxiosError as Sa}from"axios";var Xn=class{connection;jupiterUrl;apiKeyHeader;maxAccounts;constructor(i,r){this.connection=new qs(i),this.jupiterUrl=r.jupiterUrl.replace(/\/$/,""),this.apiKeyHeader=r.jupiterApiKeyHeader,this.maxAccounts=r.jupiterMaxAccounts}async getJupiterSwapTx(i,r,a,o){let m;try{let C=o?"ExactOut":"ExactIn",x=`${this.jupiterUrl}/quote?inputMint=${r}&outputMint=${zs.toString()}&amount=${a}&swapMode=${C}&slippageBps=100&onlyDirectRoutes=true`;this.maxAccounts&&(x+=`&maxAccounts=${this.maxAccounts}`),m=await ba.get(x,{headers:this.apiKeyHeader?{"x-api-key":this.apiKeyHeader}:void 0})}catch(C){throw C instanceof Sa&&C.response&&C.response.data&&C.response.data.error?new ye(C.response.data.error):new ye("Cannot get route")}let u;if(o&&m?.data?.inAmount)u=m.data.inAmount;else if(o)throw new ye("Cannot get inAmount");let p;try{p=await ba.post(`${this.jupiterUrl}/swap`,{quoteResponse:m.data,userPublicKey:i,wrapAndUnwrapSol:!0},{headers:this.apiKeyHeader?{"x-api-key":this.apiKeyHeader}:void 0})}catch(C){throw C instanceof Sa&&C.response&&C.response.data&&C.response.data.error?new ye(C.response.data.error):new ye("Cannot get swap transaction")}let h;if(p?.data?.swapTransaction)h=p.data.swapTransaction;else throw new ye("Cannot get swap transaction");let b=w.from(h,"base64"),S=eo.deserialize(b);return o?{tx:S,amountIn:u}:{tx:S}}async amendJupiterWithSdkTx(i,r){try{let a=await Mt(i,this.connection),o=await Mt(r,this.connection),m=Ta.decompile(i.message,{addressLookupTableAccounts:a}),u=Ta.decompile(r.message,{addressLookupTableAccounts:o});if(u.instructions.shift(),m.instructions.push(...u.instructions),a.push(...o),i.message=m.compileToV0Message(a),r.message.header.numRequiredSignatures===2&&i.signatures.length===1){let p=r.signatures[0];if(!p)throw new O("Signature is undefined");i.signatures.push(p)}return i}catch(a){throw a instanceof Error&&a.message?new ye(`Some error occurred during creation final swap and bridge transaction. ${a.message}`):new ye("Some error occurred during creation final swap and bridge transaction")}}};var Qr=1e6,wa=1.1,Yn=class extends De{constructor(r,a,o){super();this.solanaRpcUrl=r;this.params=a;this.api=o;this.jupiterService=new Xn(r,a.jupiterParams)}chainType="SOLANA";jupiterService;async buildRawTransactionSwap(r){let a=at(this.chainType,r);return await this.buildSwapTransaction(a,r.sourceToken.poolAddress,r.destinationToken.poolAddress,r.txFeeParams)}async buildSwapTransaction(r,a,o,m){let{fromAccountAddress:u,amount:p,contractAddress:h,fromTokenAddress:b,toTokenAddress:S,toAccountAddress:C,minimumReceiveAmount:x}=r,B=u,v=h,M=b,F=S,W=o,D=C,U=new re(B),K=yt(this.solanaRpcUrl,U.toString()),j=new Hr(mn,v,K),X=await Zt(j.programId),Pe=await ft(j.programId),Ae=new re(M),Ee=await _t(Ae,j.programId),Ge=new re(a),Je=await Xe(U,Ae),Fe=new re(D),ge=new re(F),we=await _t(ge,j.programId),Me=new re(W),Ce=await Xe(Fe,ge),Ve=[ht.ComputeBudgetProgram.setComputeUnitLimit({units:Qr})];try{await $t(Ce,K)}catch{let wn=await to.associatedToken(K).methods.create().accounts({mint:ge,owner:Fe,associatedAccount:Ce}).instruction();Ve.push(wn)}let je=await j.methods.swap(new Lt(p),new Lt(x||0)).accounts({payer:U,config:Pe,bridgeAuthority:X,user:U,sendBridgeToken:Ee,sendMint:Ae,sendPool:Ge,sendUserToken:Je,receiveBridgeToken:we,receiveMint:ge,receivePool:Me,receiveUserToken:Ce}).preInstructions(Ve).transaction(),Oe=K.connection;return je.recentBlockhash=(await Oe.getLatestBlockhash()).blockhash,je.feePayer=U,await Jt(je,m,this.solanaRpcUrl),await this.convertToVersionedTransaction(je,Oe)}async buildRawTransactionSend(r){let a=await Ke(this.chainType,r,this.api),o=this.addPoolAddress(r,a),m=o.gasFeePaymentMethod=="stablecoin",u;if(m)try{let{tx:b,solTxSendUpdatedParams:S}=await this.processJup(o,r,!0);u=b,o={...o,...S}}catch{try{let{tx:S,solTxSendUpdatedParams:C}=await this.processJup(o,r,!1);u=S,o={...o,...C}}catch(S){throw S instanceof me?S:S instanceof Error&&S.message?new ye(`Some error occurred during creation Jupiter swap transaction. ${S.message}`):new ye("Some error occurred during creation Jupiter swap transaction")}}let p,h;switch(a.messenger){case 1:{let b=await this.prepareSwapAndBridgeData(o);p=await this.buildSwapAndBridgeAllbridgeTransaction(b);break}case 2:{let b=await this.prepareSwapAndBridgeData(o),{transaction:S,messageAccount:C}=await this.buildSwapAndBridgeWormholeTransaction(b);p=S,h=C;break}case 3:case 4:{let b=await this.prepareSwapAndBridgeCctpData(o),{transaction:S,messageSentEventDataKeypair:C}=await this.buildSwapAndBridgeCctpTransaction(r.destinationToken.chainSymbol,b);p=S,h=C;break}}if(m){if(!u)throw new ye("Swap tx is absent");p=await this.jupiterService.amendJupiterWithSdkTx(u,p)}return await ya(p,r.txFeeParams,this.solanaRpcUrl),h&&p.sign([h]),p}async processJup(r,a,o){let{fee:m,extraGas:u,gasFeePaymentMethod:p}=await this.convertStableCoinFeeAndExtraGasToNativeCurrency(a.sourceToken.decimals,r),h=o?He(m):He(r.fee);u&&(h=h.plus(u)),o||(h=h.mul(wa));let{tx:b,amountIn:S}=await this.jupiterService.getJupiterSwapTx(a.fromAccountAddress,a.sourceToken.tokenAddress,h.toFixed(0),o),C;if(o){if(!S)throw new ye("Cannot get inAmount");C=He(r.amount).minus(He(S).mul(wa)).toFixed(0)}else C=He(r.amount).minus(h).toFixed(0);if(He(C).lte(0))throw new Gt(`Amount not enough to pay fee, ${Y(He(C).minus(1).neg(),a.sourceToken.decimals).toFixed()} stables is missing`);return{tx:b,solTxSendUpdatedParams:{amount:C,fee:m,extraGas:u,gasFeePaymentMethod:p}}}addPoolAddress(r,a){return{...a,poolAddress:r.sourceToken.poolAddress}}async convertStableCoinFeeAndExtraGasToNativeCurrency(r,a){if(a.gasFeePaymentMethod=="stablecoin"){let o=(await this.api.getReceiveTransactionCost({sourceChainId:a.fromChainId,destinationChainId:a.toChainId,messenger:a.messenger})).sourceNativeTokenPrice,m=He(a.fee).div(o).mul(He(10).pow(Q.getChainDecimalsByType("SOLANA")-r)).toFixed(0),u;return a.extraGas&&(u=He(a.extraGas).div(o).mul(He(10).pow(Q.getChainDecimalsByType("SOLANA")-r)).toFixed(0)),{fee:m,extraGas:u,gasFeePaymentMethod:"native"}}return{fee:a.fee,extraGas:a.extraGas,gasFeePaymentMethod:"native"}}getExtraGasInstruction(r,a,o){return ht.SystemProgram.transfer({fromPubkey:a,toPubkey:o,lamports:+r})}async prepareSwapAndBridgeData(r){let{amount:a,contractAddress:o,fromChainId:m,fromAccountAddress:u,fromTokenAddress:p,toChainId:h,toAccountAddress:b,toTokenAddress:S,poolAddress:C,extraGas:x}=r,B=p,v=u,M=h,F=S,W=b,D=o,U=m,K=yt(this.solanaRpcUrl,v),j=new Hr(mn,D,K),X=Array.from(Gn()),Pe=new re(C),Ae=await la(a,j,Pe),Ee=await Qi(X,j.programId),Ge=await Zt(j.programId),Je=await Xe(new re(v),new re(B)),Fe=await _t(new re(B),j.programId),ge=await _r(M,j.programId),we=await qi(M,w.from(F),j.programId),Me=await ft(j.programId),Ce=await j.account.config.fetch(Me),Ve=await cn(M,Ce.gasOracleProgramId),je=await cn(U,Ce.gasOracleProgramId),Oe=da({amount:Ae,recipient:w.from(W),nonce:w.from(X),receiveToken:w.from(F),destinationChainId:M,sourceChainId:U,chainBridge:(await Zt(j.programId)).toBuffer()}),E={};return E.bridge=j,E.amount=new Lt(a),E.vusdAmount=new Lt(Ae),E.nonce=X,E.recipient=Array.from(W),E.receiveToken=Array.from(F),E.poolAccount=Pe,E.lockAccount=Ee,E.bridgeAuthority=Ge,E.userToken=Je,E.bridgeTokenAccount=Fe,E.chainBridgeAccount=ge,E.otherBridgeTokenAccount=we,E.userAccount=new re(v),E.destinationChainId=M,E.mint=new re(B),E.config=Me,E.configAccountInfo=Ce,E.gasPrice=Ve,E.thisGasPrice=je,E.message=Oe,x&&(E.extraGasInstruction=this.getExtraGasInstruction(x,E.userAccount,Me)),E}async buildSwapAndBridgeAllbridgeTransaction(r){let{bridge:a,vusdAmount:o,nonce:m,recipient:u,receiveToken:p,poolAccount:h,lockAccount:b,bridgeAuthority:S,userToken:C,bridgeTokenAccount:x,chainBridgeAccount:B,otherBridgeTokenAccount:v,userAccount:M,destinationChainId:F,mint:W,config:D,configAccountInfo:U,gasPrice:K,thisGasPrice:j,message:X,extraGasInstruction:Pe}=r,Ae=U.allbridgeMessengerProgramId,Ee=await $r(F,Ae),Ge=await ft(Ae),Je=await ea(X,Ae),Fe=[];Pe&&Fe.push(Pe);let ge=await a.methods.swapAndBridge({vusdAmount:o,nonce:m,destinationChainId:F,recipient:u,receiveToken:p}).accounts({mint:W,user:M,config:D,lock:b,pool:h,gasPrice:K,thisGasPrice:j,bridgeAuthority:S,userToken:C,bridgeToken:x,chainBridge:B,messenger:Ae,messengerGasUsage:Ee,messengerConfig:Ge,sentMessageAccount:Je,otherBridgeToken:v}).preInstructions([ht.ComputeBudgetProgram.setComputeUnitLimit({units:Qr})]).postInstructions(Fe).transaction(),we=yt(this.solanaRpcUrl,M.toString()).connection;return ge.recentBlockhash=(await we.getLatestBlockhash()).blockhash,ge.feePayer=M,await this.convertToVersionedTransaction(ge,we)}async convertToVersionedTransaction(r,a){let o=await a.getAddressLookupTable(new re(this.params.solanaLookUpTable)).then(u=>u.value);if(!o)throw new O("Cannot find allbridgeLookupTableAccount");let m=new ht.TransactionMessage({payerKey:r.feePayer,recentBlockhash:r.recentBlockhash,instructions:r.instructions}).compileToV0Message([o]);return new ht.VersionedTransaction(m)}async buildSwapAndBridgeWormholeTransaction(r){let{bridge:a,vusdAmount:o,nonce:m,recipient:u,receiveToken:p,poolAccount:h,lockAccount:b,bridgeAuthority:S,userToken:C,bridgeTokenAccount:x,chainBridgeAccount:B,otherBridgeTokenAccount:v,userAccount:M,destinationChainId:F,mint:W,config:D,configAccountInfo:U,gasPrice:K,thisGasPrice:j,message:X,extraGasInstruction:Pe}=r,Ae=this.params.wormholeMessengerProgramId,[Ee]=re.findProgramAddressSync([w.from("Bridge")],new re(Ae)),[Ge]=re.findProgramAddressSync([w.from("fee_collector")],new re(Ae)),[Je]=re.findProgramAddressSync([w.from("Sequence"),S.toBuffer()],new re(Ae)),Fe=await $r(F,U.wormholeMessengerProgramId),ge=await ft(U.wormholeMessengerProgramId),we=Pa.generate(),Me=yt(this.solanaRpcUrl,M.toString()),Ce=await Me.connection.getAccountInfo(Ee);if(Ce==null)throw new O("Cannot fetch wormhole bridge account info");let Ve=new Lt(Ce.data.slice(16,24),"le").toString(),je=no.transfer({fromPubkey:M,toPubkey:Ge,lamports:+Ve}),Oe=[];Pe&&Oe.push(Pe);let E={mint:W,user:M,config:D,lock:b,pool:h,gasPrice:K,thisGasPrice:j,bridgeAuthority:S,userToken:C,bridgeToken:x,chainBridge:B,otherBridgeToken:v,messengerGasUsage:Fe,wormholeProgram:Ae,bridge:Ee,message:we.publicKey,wormholeMessenger:U.wormholeMessengerProgramId,sequence:Je,feeCollector:Ge,wormholeMessengerConfig:ge,clock:ht.SYSVAR_CLOCK_PUBKEY},le=await a.methods.swapAndBridgeWormhole({vusdAmount:o,nonce:m,destinationChainId:F,recipient:u,receiveToken:p}).accounts(E).preInstructions([ht.ComputeBudgetProgram.setComputeUnitLimit({units:Qr}),je]).postInstructions(Oe).signers([we]).transaction();return le.recentBlockhash=(await Me.connection.getLatestBlockhash()).blockhash,le.feePayer=M,{transaction:await this.convertToVersionedTransaction(le,Me.connection),messageAccount:we}}async prepareSwapAndBridgeCctpData(r){let{contractAddress:a,amount:o,fromAccountAddress:m,fromTokenAddress:u,toChainId:p,toAccountAddress:h,toTokenAddress:b,extraGas:S}=r,C=a;if(!C)throw new Be("Such route does not support CCTP protocol");let x=4,B=m,v=b,M=h,F=yt(this.solanaRpcUrl,B),W=new Hr(ma,C,F),D=new re(u),U=await ta(D,W.programId),K=new re(B),j=await W.account.cctpBridge.fetch(U),X={};return X.cctpBridge=W,X.cctpBridgeAccount=U,X.cctpAddressAccount=new re(C),X.amount=new Lt(o),X.recipient=Array.from(M),X.receiveToken=Array.from(v),X.userToken=await Xe(K,D),X.bridgeAuthority=await zi(U,W.programId),X.bridgeTokenAccount=await na(D,W.programId),X.chainBridgeAccount=await _r(p,W.programId),X.userAccount=K,X.destinationChainId=p,X.mint=D,X.gasPrice=await cn(p,j.gasOracleProgramId),X.thisGasPrice=await cn(x,j.gasOracleProgramId),X.provider=F,S&&(X.extraGasInstruction=this.getExtraGasInstruction(S,X.userAccount,U)),X}async buildSwapAndBridgeCctpTransaction(r,a){let{cctpBridge:o,cctpBridgeAccount:m,amount:u,recipient:p,receiveToken:h,bridgeAuthority:b,userToken:S,bridgeTokenAccount:C,chainBridgeAccount:x,userAccount:B,destinationChainId:v,mint:M,gasPrice:F,thisGasPrice:W,extraGasInstruction:D,provider:U}=a,K=this.params.cctpParams.cctpDomains[r],j=this.params.cctpParams.cctpTransmitterProgramId,X=this.params.cctpParams.cctpTokenMessengerMinter;if(K==null||!j||!X)throw new O("CCTP is not configured");let Pe=new re(j),Ae=new re(X),{messageTransmitterAccount:Ee,tokenMessenger:Ge,tokenMessengerEventAuthority:Je,tokenMinter:Fe,localToken:ge,remoteTokenMessengerKey:we,authorityPda:Me}=ia(K,M,Pe,Ae),Ce=[];D&&Ce.push(D);let Ve=Pa.generate(),je=ra(o.programId,Ve.publicKey),Oe=await o.methods.bridge({amount:u,destinationChainId:v,recipient:p,receiveToken:h}).accounts({mint:M,user:B,cctpBridge:m,messageSentEventData:Ve.publicKey,lock:je,cctpMessenger:Ae,messageTransmitterProgram:Pe,messageTransmitterAccount:Ee,tokenMessenger:Ge,tokenMinter:Fe,localToken:ge,remoteTokenMessengerKey:we,authorityPda:Me,eventAuthority:Je,bridgeToken:C,gasPrice:F,thisGasPrice:W,chainBridge:x,userToken:S,bridgeAuthority:b}).preInstructions([ht.ComputeBudgetProgram.setComputeUnitLimit({units:2e6})]).postInstructions(Ce).transaction(),E=U.connection;return Oe.recentBlockhash=(await E.getLatestBlockhash()).blockhash,Oe.feePayer=B,{transaction:await this.convertToVersionedTransaction(Oe,E),messageSentEventDataKeypair:Ve}}send(r){throw new de}};g();y();f();import{Address as zr,contract as YR}from"@stellar/stellar-sdk";import{Big as ao}from"big.js";g();y();f();import{contract as n}from"@stellar/stellar-sdk";var ro=n.Spec,io=n.Client;var ln=class extends io{constructor(r){super(new ro(["AAAAAAAAAAAAAAAKaW5pdGlhbGl6ZQAAAAAABAAAAAAAAAAFYWRtaW4AAAAAAAATAAAAAAAAAAltZXNzZW5nZXIAAAAAAAATAAAAAAAAAApnYXNfb3JhY2xlAAAAAAATAAAAAAAAAAxuYXRpdmVfdG9rZW4AAAATAAAAAQAAA+kAAAPtAAAAAAAAAAM=","AAAAAAAAAAAAAAAPc3dhcF9hbmRfYnJpZGdlAAAAAAkAAAAAAAAABnNlbmRlcgAAAAAAEwAAAAAAAAAFdG9rZW4AAAAAAAATAAAAAAAAAAZhbW91bnQAAAAAAAoAAAAAAAAACXJlY2lwaWVudAAAAAAAA+4AAAAgAAAAAAAAABRkZXN0aW5hdGlvbl9jaGFpbl9pZAAAAAQAAAAAAAAADXJlY2VpdmVfdG9rZW4AAAAAAAPuAAAAIAAAAAAAAAAFbm9uY2UAAAAAAAAMAAAAAAAAAApnYXNfYW1vdW50AAAAAAAKAAAAAAAAABBmZWVfdG9rZW5fYW1vdW50AAAACgAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAOcmVjZWl2ZV90b2tlbnMAAAAAAAgAAAAAAAAABnNlbmRlcgAAAAAAEwAAAAAAAAAGYW1vdW50AAAAAAAKAAAAAAAAAAlyZWNpcGllbnQAAAAAAAATAAAAAAAAAA9zb3VyY2VfY2hhaW5faWQAAAAABAAAAAAAAAANcmVjZWl2ZV90b2tlbgAAAAAAA+4AAAAgAAAAAAAAAAVub25jZQAAAAAAAAwAAAAAAAAAEnJlY2VpdmVfYW1vdW50X21pbgAAAAAACgAAAAAAAAAJZXh0cmFfZ2FzAAAAAAAD6AAAAAoAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAAAAAAEc3dhcAAAAAYAAAAAAAAABnNlbmRlcgAAAAAAEwAAAAAAAAAGYW1vdW50AAAAAAAKAAAAAAAAAAV0b2tlbgAAAAAAA+4AAAAgAAAAAAAAAA1yZWNlaXZlX3Rva2VuAAAAAAAD7gAAACAAAAAAAAAACXJlY2lwaWVudAAAAAAAABMAAAAAAAAAEnJlY2VpdmVfYW1vdW50X21pbgAAAAAACgAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAJc3RvcF9zd2FwAAAAAAAAAAAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAKc3RhcnRfc3dhcAAAAAAAAAAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAOc2V0X2dhc19vcmFjbGUAAAAAAAEAAAAAAAAAC25ld19hZGRyZXNzAAAAABMAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAAAAAASc2V0X3N0b3BfYXV0aG9yaXR5AAAAAAABAAAAAAAAAA5zdG9wX2F1dGhvcml0eQAAAAAAEwAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAOc2V0X3JlYmFsYW5jZXIAAAAAAAEAAAAAAAAACnJlYmFsYW5jZXIAAAAAABMAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAAAAAANc2V0X21lc3NlbmdlcgAAAAAAAAEAAAAAAAAACW1lc3NlbmdlcgAAAAAAABMAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAAAAAANc2V0X2dhc191c2FnZQAAAAAAAAIAAAAAAAAACGNoYWluX2lkAAAABAAAAAAAAAAJZ2FzX3VzYWdlAAAAAAAACgAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAPcmVnaXN0ZXJfYnJpZGdlAAAAAAIAAAAAAAAACGNoYWluX2lkAAAABAAAAAAAAAAOYnJpZGdlX2FkZHJlc3MAAAAAA+4AAAAgAAAAAQAAA+kAAAPtAAAAAAAAAAM=","AAAAAAAAAAAAAAAQYWRkX2JyaWRnZV90b2tlbgAAAAIAAAAAAAAACGNoYWluX2lkAAAABAAAAAAAAAANdG9rZW5fYWRkcmVzcwAAAAAAA+4AAAAgAAAAAQAAA+kAAAPtAAAAAAAAAAM=","AAAAAAAAAAAAAAATcmVtb3ZlX2JyaWRnZV90b2tlbgAAAAACAAAAAAAAAAhjaGFpbl9pZAAAAAQAAAAAAAAADXRva2VuX2FkZHJlc3MAAAAAAAPuAAAAIAAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAIYWRkX3Bvb2wAAAACAAAAAAAAAARwb29sAAAAEwAAAAAAAAAFdG9rZW4AAAAAAAATAAAAAQAAA+kAAAPtAAAAAAAAAAM=","AAAAAAAAAAAAAAATd2l0aGRyYXdfZ2FzX3Rva2VucwAAAAACAAAAAAAAAAZzZW5kZXIAAAAAABMAAAAAAAAABmFtb3VudAAAAAAACgAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAfd2l0aGRyYXdfYnJpZGdpbmdfZmVlX2luX3Rva2VucwAAAAACAAAAAAAAAAZzZW5kZXIAAAAAABMAAAAAAAAADXRva2VuX2FkZHJlc3MAAAAAAAATAAAAAQAAA+kAAAPtAAAAAAAAAAM=","AAAAAAAAAAAAAAAVaGFzX3Byb2Nlc3NlZF9tZXNzYWdlAAAAAAAAAQAAAAAAAAAHbWVzc2FnZQAAAAPuAAAAIAAAAAEAAAPpAAAAAQAAAAM=","AAAAAAAAAAAAAAAUaGFzX3JlY2VpdmVkX21lc3NhZ2UAAAABAAAAAAAAAAdtZXNzYWdlAAAAA+4AAAAgAAAAAQAAA+kAAAABAAAAAw==","AAAAAAAAAAAAAAAQZ2V0X3Bvb2xfYWRkcmVzcwAAAAEAAAAAAAAADXRva2VuX2FkZHJlc3MAAAAAAAPuAAAAIAAAAAEAAAPpAAAAEwAAAAM=","AAAAAAAAAAAAAAAKZ2V0X2NvbmZpZwAAAAAAAAAAAAEAAAPpAAAH0AAAAAZCcmlkZ2UAAAAAAAM=","AAAAAAAAAAAAAAASZ2V0X3N0b3BfYXV0aG9yaXR5AAAAAAAAAAAAAQAAA+kAAAATAAAAAw==","AAAAAAAAAAAAAAAUZ2V0X3RyYW5zYWN0aW9uX2Nvc3QAAAABAAAAAAAAAAhjaGFpbl9pZAAAAAQAAAABAAAD6QAAAAoAAAAD","AAAAAAAAAAAAAAANZ2V0X2dhc191c2FnZQAAAAAAAAEAAAAAAAAACGNoYWluX2lkAAAABAAAAAEAAAPpAAAACgAAAAM=","AAAAAAAAAAAAAAAJZ2V0X2FkbWluAAAAAAAAAAAAAAEAAAPpAAAAEwAAAAM=","AAAAAAAAAAAAAAAOZ2V0X2dhc19vcmFjbGUAAAAAAAAAAAABAAAD6QAAABMAAAAD","AAAAAAAAAAAAAAASZ2V0X2Fub3RoZXJfYnJpZGdlAAAAAAABAAAAAAAAAAhjaGFpbl9pZAAAAAQAAAABAAAD6QAAB9AAAAANQW5vdGhlckJyaWRnZQAAAAAAAAM=","AAAAAAAAAAAAAAAJc2V0X2FkbWluAAAAAAAAAQAAAAAAAAAJbmV3X2FkbWluAAAAAAAAEwAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAHdXBncmFkZQAAAAABAAAAAAAAAA1uZXdfd2FzbV9oYXNoAAAAAAAD7gAAACAAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAQAAAAAAAAAAAAAAB1N3YXBwZWQAAAAABgAAAAAAAAAOcmVjZWl2ZV9hbW91bnQAAAAAAAoAAAAAAAAADXJlY2VpdmVfdG9rZW4AAAAAAAPuAAAAIAAAAAAAAAAJcmVjaXBpZW50AAAAAAAAEwAAAAAAAAALc2VuZF9hbW91bnQAAAAACgAAAAAAAAAKc2VuZF90b2tlbgAAAAAD7gAAACAAAAAAAAAABnNlbmRlcgAAAAAAEw==","AAAAAQAAAAAAAAAAAAAAClRva2Vuc1NlbnQAAAAAAAUAAAAAAAAABmFtb3VudAAAAAAACgAAAAAAAAAUZGVzdGluYXRpb25fY2hhaW5faWQAAAAEAAAAAAAAAAVub25jZQAAAAAAAAwAAAAAAAAADXJlY2VpdmVfdG9rZW4AAAAAAAPuAAAAIAAAAAAAAAAJcmVjaXBpZW50AAAAAAAD7gAAACA=","AAAAAQAAAAAAAAAAAAAADlRva2Vuc1JlY2VpdmVkAAAAAAAEAAAAAAAAAAZhbW91bnQAAAAAAAoAAAAAAAAAB21lc3NhZ2UAAAAD7gAAACAAAAAAAAAABW5vbmNlAAAAAAAADAAAAAAAAAAJcmVjaXBpZW50AAAAAAAD7gAAACA=","AAAAAQAAAAAAAAAAAAAAClJlY2VpdmVGZWUAAAAAAAMAAAAAAAAAF2JyaWRnZV90cmFuc2FjdGlvbl9jb3N0AAAAAAoAAAAAAAAACWV4dHJhX2dhcwAAAAAAAAoAAAAAAAAAGG1lc3NhZ2VfdHJhbnNhY3Rpb25fY29zdAAAAAo=","AAAAAQAAAAAAAAAAAAAAFUJyaWRnaW5nRmVlRnJvbVRva2VucwAAAAAAAAIAAAAAAAAAEGZlZV90b2tlbl9hbW91bnQAAAAKAAAAAAAAAANnYXMAAAAACg==","AAAAAQAAAAAAAAAAAAAADUFub3RoZXJCcmlkZ2UAAAAAAAACAAAAAAAAAAdhZGRyZXNzAAAAA+4AAAAgAAAAAAAAAAZ0b2tlbnMAAAAAA+wAAAPuAAAAIAAAAAE=","AAAAAQAAAAAAAAAAAAAABkJyaWRnZQAAAAAABgAAAGBwcmVjb21wdXRlZCB2YWx1ZXMgb2YgdGhlIHNjYWxpbmcgZmFjdG9yIHJlcXVpcmVkIGZvciBwYXlpbmcgdGhlIGJyaWRnaW5nIGZlZSB3aXRoIHN0YWJsZSB0b2tlbnMAAAAeYnJpZGdpbmdfZmVlX2NvbnZlcnNpb25fZmFjdG9yAAAAAAPsAAAAEwAAAAoAAAAAAAAACGNhbl9zd2FwAAAAAQAAAGxwcmVjb21wdXRlZCB2YWx1ZXMgdG8gZGl2aWRlIGJ5IHRvIGNoYW5nZSB0aGUgcHJlY2lzaW9uIGZyb20gdGhlIEdhcyBPcmFjbGUgcHJlY2lzaW9uIHRvIHRoZSB0b2tlbiBwcmVjaXNpb24AAAAWZnJvbV9nYXNfb3JhY2xlX2ZhY3RvcgAAAAAD7AAAABMAAAAKAAAAAAAAAAltZXNzZW5nZXIAAAAAAAATAAAAAAAAAAVwb29scwAAAAAAA+wAAAPuAAAAIAAAABMAAAAAAAAACnJlYmFsYW5jZXIAAAAAABM=","AAAAAgAAAAAAAAAAAAAAB0RhdGFLZXkAAAAAAwAAAAEAAAAAAAAAC090aGVyQnJpZGdlAAAAAAEAAAAEAAAAAQAAAAAAAAALU2VudE1lc3NhZ2UAAAAAAQAAA+4AAAAgAAAAAQAAAAAAAAAPUmVjZWl2ZWRNZXNzYWdlAAAAAAEAAAPuAAAAIA==","AAAAAQAAAAAAAAAAAAAABUFkbWluAAAAAAAAAQAAAAAAAAABMAAAAAAAABM=","AAAAAQAAAAAAAAAAAAAAEEdhc09yYWNsZUFkZHJlc3MAAAABAAAAAAAAAAEwAAAAAAAAEw==","AAAAAQAAAAAAAAAAAAAACEdhc1VzYWdlAAAAAQAAAAAAAAABMAAAAAAAA+wAAAAEAAAACg==","AAAAAQAAAAAAAAAAAAAAC05hdGl2ZVRva2VuAAAAAAEAAAAAAAAAATAAAAAAAAAT","AAAAAQAAAAAAAAAAAAAADVN0b3BBdXRob3JpdHkAAAAAAAABAAAAAAAAAAEwAAAAAAAAEw==","AAAABAAAAAAAAAAAAAAABUVycm9yAAAAAAAAKAAAAAAAAAANVW5pbXBsZW1lbnRlZAAAAAAAAAAAAAAAAAAAC0luaXRpYWxpemVkAAAAAAEAAAAAAAAADVVuaW5pdGlhbGl6ZWQAAAAAAAACAAAAAAAAAAxVbmF1dGhvcml6ZWQAAAADAAAAAAAAAApJbnZhbGlkQXJnAAAAAAAEAAAAAAAAAA5JbnZhbGlkQ2hhaW5JZAAAAAAABQAAAAAAAAATSW52YWxpZE90aGVyQ2hhaW5JZAAAAAAGAAAAAAAAAA5HYXNVc2FnZU5vdFNldAAAAAAABwAAAAAAAAANQnJva2VuQWRkcmVzcwAAAAAAAAgAAAAAAAAACE5vdEZvdW5kAAAACQAAAAAAAAAYVG9rZW5JbnN1ZmZpY2llbnRCYWxhbmNlAAAACgAAAAAAAAAKQ2FzdEZhaWxlZAAAAAAACwAAAAAAAAAMVTI1Nk92ZXJmbG93AAAADAAAAAAAAAAKWmVyb0Ftb3VudAAAAAAAZwAAAAAAAAAMUG9vbE92ZXJmbG93AAAAaAAAAAAAAAALWmVyb0NoYW5nZXMAAAAAaQAAAAAAAAARUmVzZXJ2ZXNFeGhhdXN0ZWQAAAAAAABqAAAAAAAAABpJbnN1ZmZpY2llbnRSZWNlaXZlZEFtb3VudAAAAAAAawAAAAAAAAAUQmFsYW5jZVJhdGlvRXhjZWVkZWQAAABsAAAAAAAAAAlGb3JiaWRkZW4AAAAAAABtAAAAAAAAABlVbmF1dGhvcml6ZWRTdG9wQXV0aG9yaXR5AAAAAAAAywAAAAAAAAAOU3dhcFByb2hpYml0ZWQAAAAAAMwAAAAAAAAAEkFtb3VudFRvb0xvd0ZvckZlZQAAAAAAzQAAAAAAAAAWQnJpZGdlVG9UaGVaZXJvQWRkcmVzcwAAAAAAzgAAAAAAAAAORW1wdHlSZWNpcGllbnQAAAAAAM8AAAAAAAAAE1NvdXJjZU5vdFJlZ2lzdGVyZWQAAAAA0AAAAAAAAAAVV3JvbmdEZXN0aW5hdGlvbkNoYWluAAAAAAAA0QAAAAAAAAATVW5rbm93bkFub3RoZXJDaGFpbgAAAADSAAAAAAAAABFUb2tlbnNBbHJlYWR5U2VudAAAAAAAANMAAAAAAAAAEE1lc3NhZ2VQcm9jZXNzZWQAAADUAAAAAAAAAAxOb3RFbm91Z2hGZWUAAADWAAAAAAAAAAlOb01lc3NhZ2UAAAAAAADXAAAAAAAAAA1Ob1JlY2VpdmVQb29sAAAAAAAA2AAAAAAAAAAGTm9Qb29sAAAAAADZAAAAAAAAABNVbmtub3duQW5vdGhlclRva2VuAAAAANoAAAAAAAAAD1dyb25nQnl0ZUxlbmd0aAAAAAEsAAAAAAAAAApIYXNNZXNzYWdlAAAAAAEtAAAAAAAAABdJbnZhbGlkUHJpbWFyeVNpZ25hdHVyZQAAAAEuAAAAAAAAABlJbnZhbGlkU2Vjb25kYXJ5U2lnbmF0dXJlAAAAAAABLwAAAAAAAAARTm9HYXNEYXRhRm9yQ2hhaW4AAAAAAAGQ"]),r);this.options=r}fromJSON={initialize:this.txFromJSON,swap_and_bridge:this.txFromJSON,receive_tokens:this.txFromJSON,swap:this.txFromJSON,stop_swap:this.txFromJSON,start_swap:this.txFromJSON,set_gas_oracle:this.txFromJSON,set_stop_authority:this.txFromJSON,set_rebalancer:this.txFromJSON,set_messenger:this.txFromJSON,set_gas_usage:this.txFromJSON,register_bridge:this.txFromJSON,add_bridge_token:this.txFromJSON,remove_bridge_token:this.txFromJSON,add_pool:this.txFromJSON,withdraw_gas_tokens:this.txFromJSON,withdraw_bridging_fee_in_tokens:this.txFromJSON,has_processed_message:this.txFromJSON,has_received_message:this.txFromJSON,get_pool_address:this.txFromJSON,get_config:this.txFromJSON,get_stop_authority:this.txFromJSON,get_transaction_cost:this.txFromJSON,get_gas_usage:this.txFromJSON,get_admin:this.txFromJSON,get_gas_oracle:this.txFromJSON,get_another_bridge:this.txFromJSON,set_admin:this.txFromJSON,upgrade:this.txFromJSON}};var Kn=class extends De{constructor(r,a,o){super();this.nodeRpcUrlsConfig=r;this.params=a;this.api=o}chainType="SRB";async buildRawTransactionSend(r){let a=await Ke(this.chainType,r,this.api);return await this.buildRawTransactionSendFromParams(a)}async buildRawTransactionSendFromParams(r){let{amount:a,contractAddress:o,fromAccountAddress:m,fromTokenAddress:u,toChainId:p,toAccountAddress:h,toTokenAddress:b,fee:S,gasFeePaymentMethod:C,extraGas:x}=r,B=S;x&&(B=ao(B).plus(x).toFixed());let v=this.getContract(ln,o,m),M;return C==="stablecoin"?M=await v.swap_and_bridge({sender:m,token:zr.contract(w.from(u)).toString(),amount:BigInt(a),recipient:w.from(h),destination_chain_id:+p,receive_token:w.from(b),nonce:it(),gas_amount:BigInt(0),fee_token_amount:BigInt(B)}):M=await v.swap_and_bridge({sender:m,token:zr.contract(w.from(u)).toString(),amount:BigInt(a),recipient:w.from(h),destination_chain_id:+p,receive_token:w.from(b),nonce:it(),gas_amount:BigInt(B),fee_token_amount:BigInt(0)}),M.toXDR()}async buildRawTransactionSwap(r){let a=at(this.chainType,r);return await this.buildRawTransactionSwapFromParams(a)}async buildRawTransactionSwapFromParams(r){let{amount:a,contractAddress:o,fromAccountAddress:m,fromTokenAddress:u,toAccountAddress:p,toTokenAddress:h,minimumReceiveAmount:b}=r;return(await this.getContract(ln,o,m).swap({sender:m,amount:BigInt(a),token:zr.contract(w.from(u)).toBuffer(),receive_token:w.from(h),recipient:p,receive_amount_min:BigInt(b)})).toXDR()}send(r){throw new de}getContract(r,a,o){let m={publicKey:o,contractId:a,networkPassphrase:this.params.sorobanNetworkPassphrase,rpcUrl:this.nodeRpcUrlsConfig.getNodeRpcUrl("SRB")};return new r(m)}};g();y();f();import{SuiClient as To}from"@mysten/sui/client";import{coinWithBalance as ce,Transaction as tr}from"@mysten/sui/transactions";import{SUI_CLOCK_OBJECT_ID as Ea}from"@mysten/sui/utils";import{Big as ui}from"big.js";var mi=Le(Tt());g();y();f();var lt=Le(Tt());fe();function Ia(s,i,r){return s.moveCall({target:`${lt.PUBLISHED_AT}::bridge_interface::swap`,typeArguments:i,arguments:[V(s,r.bridge),V(s,r.coin),_e(s,r.receiveAmountMin,"u64")]})}function Ra(s,i,r){return s.moveCall({target:`${lt.PUBLISHED_AT}::bridge_interface::deposit`,typeArguments:[i],arguments:[V(s,r.bridge),V(s,r.userDeposit),V(s,r.coin)]})}function va(s,i,r){return s.moveCall({target:`${lt.PUBLISHED_AT}::bridge_interface::withdraw`,typeArguments:[i],arguments:[V(s,r.bridge),V(s,r.userDeposit),_e(s,r.amountLp,"u64")]})}function ka(s,i,r){return s.moveCall({target:`${lt.PUBLISHED_AT}::bridge_interface::claim_reward`,typeArguments:[i],arguments:[V(s,r.bridge),V(s,r.userDeposit)]})}function xa(s,i,r){return s.moveCall({target:`${lt.PUBLISHED_AT}::bridge_interface::pool`,typeArguments:[i],arguments:[V(s,r)]})}function ei(s,i,r){return s.moveCall({target:`${lt.PUBLISHED_AT}::bridge_interface::swap_and_bridge_wormhole`,typeArguments:[i],arguments:[V(s,r.bridge),V(s,r.messenger),V(s,r.wormholeState),V(s,r.theClock),V(s,r.gasOracle),V(s,r.amount),V(s,r.recipient),_e(s,r.destinationChainId,"u8"),V(s,r.receiveToken),_e(s,r.nonce,"u256"),V(s,r.feeSuiCoin),V(s,r.feeTokenCoin)]})}function Fa(s,i){return s.moveCall({target:`${lt.PUBLISHED_AT}::bridge_interface::new_user_deposit`,typeArguments:[i],arguments:[]})}function ti(s,i,r){return s.moveCall({target:`${lt.PUBLISHED_AT}::bridge_interface::swap_and_bridge`,typeArguments:[i],arguments:[V(s,r.bridge),V(s,r.messenger),V(s,r.gasOracle),V(s,r.amount),V(s,r.recipient),_e(s,r.destinationChainId,"u8"),V(s,r.receiveToken),_e(s,r.nonce,"u256"),V(s,r.feeSuiCoin),V(s,r.feeTokenCoin)]})}var Ga=Le(ri());g();y();f();var Oa=Le(ri());fe();function ii(s,i,r){return s.moveCall({target:`${Oa.PUBLISHED_AT}::cctp_bridge_interface::bridge`,typeArguments:[i],arguments:[V(s,r.cctpBridge),V(s,r.gasOracle),V(s,r.tokenMessengerMinterState),V(s,r.messageTransmitterState),V(s,r.treasury),V(s,r.denyList),V(s,r.amount),V(s,r.feeSuiCoin),V(s,r.feeTokenCoin),_e(s,r.destinationChainId,"u8"),V(s,r.recipient),V(s,r.recipientWalletAddress)]})}var Va=Le(si());g();y();f();var Ua=Le(si());g();y();f();g();y();f();fe();import{bcs as bt}from"@mysten/sui/bcs";import{fromHEX as lo,toHEX as po}from"@mysten/sui/utils";g();y();f();import{bcs as mo}from"@mysten/sui/bcs";fe();var oi=class s{__VectorClass=!0;static $typeName="vector";static $numTypeParams=1;static $isPhantom=[!1];$typeName="vector";$fullTypeName;$typeArgs;$isPhantom=[!1];elements;constructor(i,r){this.$fullTypeName=H(this.$typeName,...i),this.$typeArgs=i,this.elements=r}static reified(i){return{typeName:s.$typeName,fullTypeName:H(s.$typeName,Z(i)),typeArgs:[Z(i)],isPhantom:s.$isPhantom,reifiedTypeArgs:[i],fromFields:r=>s.fromFields(i,r),fromFieldsWithTypes:r=>s.fromFieldsWithTypes(i,r),fromBcs:r=>s.fromBcs(i,r),bcs:s.bcs(dn(i)),fromJSONField:r=>s.fromJSONField(i,r),fromJSON:r=>s.fromJSON(i,r),new:r=>new s([Z(i)],r),kind:"VectorClassReified"}}static get r(){return s.reified}static get bcs(){return mo.vector}static fromFields(i,r){return s.reified(i).new(r.map(a=>L(i,a)))}static fromFieldsWithTypes(i,r){return s.reified(i).new(r.map(a=>$(i,a)))}static fromBcs(i,r){return s.fromFields(i,s.bcs(dn(i)).parse(r))}toJSONField(){return this.elements.map(i=>Ot(this.$typeArgs[0],i))}toJSON(){return{$typeName:this.$typeName,$typeArgs:this.$typeArgs,elements:this.toJSONField()}}static fromJSONField(i,r){return s.reified(i).new(r.map(a=>J(i,a)))}static fromJSON(i,r){if(r.$typeName!==s.$typeName)throw new Error("not a vector json object");return s.fromJSONField(i,r.elements)}};function Xt(s){return oi.r(s)}function oe(s){return typeof s=="string"?{phantomType:s,kind:"PhantomReified"}:{phantomType:s.fullTypeName,kind:"PhantomReified"}}var go=bt.bytes(32).transform({input:s=>lo(s),output:s=>po(s)});function dn(s){switch(s){case"bool":return bt.bool();case"u8":return bt.u8();case"u16":return bt.u16();case"u32":return bt.u32();case"u64":return bt.u64();case"u128":return bt.u128();case"u256":return bt.u256();case"address":return go;default:return s.bcs}}function Z(s){switch(s){case"u8":case"u16":case"u32":case"u64":case"u128":case"u256":case"bool":case"address":return s}switch(s.kind){case"PhantomReified":return s.phantomType;case"StructClassReified":return s.fullTypeName;case"VectorClassReified":return s.fullTypeName}throw new Error("unreachable")}function L(s,i){switch(s){case"bool":case"u8":case"u16":case"u32":return i;case"u64":case"u128":case"u256":return BigInt(i);case"address":return`0x${i}`}if(s.kind==="VectorClassReified")return s.fromFields(i).elements;switch(s.typeName){case"0x1::string::String":case"0x1::ascii::String":return new TextDecoder().decode(Uint8Array.from(i.bytes)).toString();case"0x2::url::Url":return new TextDecoder().decode(Uint8Array.from(i.url.bytes)).toString();case"0x2::object::ID":return`0x${i.bytes}`;case"0x2::object::UID":return`0x${i.id.bytes}`;case"0x1::option::Option":return i.vec.length===0?null:s.fromFields(i).vec[0];default:return s.fromFields(i)}}function $(s,i){switch(s){case"bool":case"u8":case"u16":case"u32":return i;case"u64":case"u128":case"u256":return BigInt(i);case"address":return i}if(s.kind==="VectorClassReified")return s.fromFieldsWithTypes(i).elements;switch(s.typeName){case"0x1::string::String":case"0x1::ascii::String":case"0x2::url::Url":case"0x2::object::ID":return i;case"0x2::object::UID":return i.id;case"0x2::balance::Balance":return s.fromFields({value:BigInt(i)});case"0x1::option::Option":return i===null?null:$(s.reifiedTypeArgs[0],i);default:return s.fromFieldsWithTypes(i)}}function Qe(s,i,r){if(r.length!==i.length)throw new Error(`provided item has mismatching number of type argments ${s} (expected ${r.length}, got ${i.length}))`);for(let a=0;a<i.length;a++)if(G(i[a])!==G(Z(r[a])))throw new Error(`provided item has mismatching type argments ${s} (expected ${Z(r[a])}, got ${i[a]}))`)}function st(s,i){let{typeArgs:r}=be(s.type);Qe(s.type,r,i)}function Ot(s,i){let{typeName:r,typeArgs:a}=be(s);switch(r){case"bool":return i;case"u8":case"u16":case"u32":return i;case"u64":case"u128":case"u256":return i.toString();case"address":case"signer":return i;case"vector":return i.map(o=>Ot(a[0],o));case"0x1::string::String":case"0x1::ascii::String":case"0x2::url::Url":case"0x2::object::ID":case"0x2::object::UID":return i;case"0x1::option::Option":return i===null?null:Ot(a[0],i);default:return i.toJSONField()}}function J(s,i){switch(s){case"bool":case"u8":case"u16":case"u32":return i;case"u64":case"u128":case"u256":return BigInt(i);case"address":return i}if(s.kind==="VectorClassReified")return s.fromJSONField(i).elements;switch(s.typeName){case"0x1::string::String":case"0x1::ascii::String":case"0x2::url::Url":case"0x2::object::ID":case"0x2::object::UID":return i;case"0x1::option::Option":return i===null?null:J(s.reifiedTypeArgs[0],i);default:return s.fromJSONField(i)}}fe();g();y();f();var Hn="0x1";import{bcs as Dg}from"@mysten/sui/bcs";import{fromB64 as Ug}from"@mysten/sui/utils";g();y();f();fe();import{bcs as ci}from"@mysten/sui/bcs";import{fromB64 as fo}from"@mysten/sui/utils";function Qn(s){return s=G(s),s===`${Hn}::string::String`}var zn=class s{__StructClass=!0;static get $typeName(){return`${Hn}::string::String`}static $numTypeParams=0;static $isPhantom=[];$typeName=s.$typeName;$fullTypeName;$typeArgs;$isPhantom=s.$isPhantom;bytes;constructor(i,r){this.$fullTypeName=H(s.$typeName,...i),this.$typeArgs=i,this.bytes=r.bytes}static reified(){return{typeName:s.$typeName,fullTypeName:H(s.$typeName),typeArgs:[],isPhantom:s.$isPhantom,reifiedTypeArgs:[],fromFields:i=>s.fromFields(i),fromFieldsWithTypes:i=>s.fromFieldsWithTypes(i),fromBcs:i=>s.fromBcs(i),bcs:s.bcs,fromJSONField:i=>s.fromJSONField(i),fromJSON:i=>s.fromJSON(i),fromSuiParsedData:i=>s.fromSuiParsedData(i),fromSuiObjectData:i=>s.fromSuiObjectData(i),fetch:async(i,r)=>s.fetch(i,r),new:i=>new s([],i),kind:"StructClassReified"}}static get r(){return s.reified()}static phantom(){return oe(s.reified())}static get p(){return s.phantom()}static get bcs(){return ci.struct("String",{bytes:ci.vector(ci.u8())})}static fromFields(i){return s.reified().new({bytes:L(Xt("u8"),i.bytes)})}static fromFieldsWithTypes(i){if(!Qn(i.type))throw new Error("not a String type");return s.reified().new({bytes:$(Xt("u8"),i.fields.bytes)})}static fromBcs(i){return s.fromFields(s.bcs.parse(i))}toJSONField(){return{bytes:Ot("vector<u8>",this.bytes)}}toJSON(){return{$typeName:this.$typeName,$typeArgs:this.$typeArgs,...this.toJSONField()}}static fromJSONField(i){return s.reified().new({bytes:J(Xt("u8"),i.bytes)})}static fromJSON(i){if(i.$typeName!==s.$typeName)throw new Error("not a WithTwoGenerics json object");return s.fromJSONField(i)}static fromSuiParsedData(i){if(i.dataType!=="moveObject")throw new Error("not an object");if(!Qn(i.type))throw new Error(`object at ${i.fields.id} is not a String object`);return s.fromFieldsWithTypes(i)}static fromSuiObjectData(i){if(i.bcs){if(i.bcs.dataType!=="moveObject"||!Qn(i.bcs.type))throw new Error("object at is not a String object");return s.fromBcs(fo(i.bcs.bcsBytes))}if(i.content)return s.fromSuiParsedData(i.content);throw new Error("Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.")}static async fetch(i,r){let a=await i.getObject({id:r,options:{showBcs:!0}});if(a.error)throw new Error(`error fetching String object at id ${r}: ${a.error.code}`);if(a.data?.bcs?.dataType!=="moveObject"||!Qn(a.data.bcs.type))throw new Error(`object at id ${r} is not a String object`);return s.fromSuiObjectData(a.data)}};fe();g();y();f();fe();g();y();f();var St="0x2";import{bcs as Ai}from"@mysten/sui/bcs";import{fromB64 as Wa,fromHEX as yo,toHEX as ho}from"@mysten/sui/utils";function qn(s){return s=G(s),s===`${St}::object::ID`}var Nt=class s{__StructClass=!0;static get $typeName(){return`${St}::object::ID`}static $numTypeParams=0;static $isPhantom=[];$typeName=s.$typeName;$fullTypeName;$typeArgs;$isPhantom=s.$isPhantom;bytes;constructor(i,r){this.$fullTypeName=H(s.$typeName,...i),this.$typeArgs=i,this.bytes=r.bytes}static reified(){return{typeName:s.$typeName,fullTypeName:H(s.$typeName),typeArgs:[],isPhantom:s.$isPhantom,reifiedTypeArgs:[],fromFields:i=>s.fromFields(i),fromFieldsWithTypes:i=>s.fromFieldsWithTypes(i),fromBcs:i=>s.fromBcs(i),bcs:s.bcs,fromJSONField:i=>s.fromJSONField(i),fromJSON:i=>s.fromJSON(i),fromSuiParsedData:i=>s.fromSuiParsedData(i),fromSuiObjectData:i=>s.fromSuiObjectData(i),fetch:async(i,r)=>s.fetch(i,r),new:i=>new s([],i),kind:"StructClassReified"}}static get r(){return s.reified()}static phantom(){return oe(s.reified())}static get p(){return s.phantom()}static get bcs(){return Ai.struct("ID",{bytes:Ai.bytes(32).transform({input:i=>yo(i),output:i=>ho(i)})})}static fromFields(i){return s.reified().new({bytes:L("address",i.bytes)})}static fromFieldsWithTypes(i){if(!qn(i.type))throw new Error("not a ID type");return s.reified().new({bytes:$("address",i.fields.bytes)})}static fromBcs(i){return s.fromFields(s.bcs.parse(i))}toJSONField(){return{bytes:this.bytes}}toJSON(){return{$typeName:this.$typeName,$typeArgs:this.$typeArgs,...this.toJSONField()}}static fromJSONField(i){return s.reified().new({bytes:J("address",i.bytes)})}static fromJSON(i){if(i.$typeName!==s.$typeName)throw new Error("not a WithTwoGenerics json object");return s.fromJSONField(i)}static fromSuiParsedData(i){if(i.dataType!=="moveObject")throw new Error("not an object");if(!qn(i.type))throw new Error(`object at ${i.fields.id} is not a ID object`);return s.fromFieldsWithTypes(i)}static fromSuiObjectData(i){if(i.bcs){if(i.bcs.dataType!=="moveObject"||!qn(i.bcs.type))throw new Error("object at is not a ID object");return s.fromBcs(Wa(i.bcs.bcsBytes))}if(i.content)return s.fromSuiParsedData(i.content);throw new Error("Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.")}static async fetch(i,r){let a=await i.getObject({id:r,options:{showBcs:!0}});if(a.error)throw new Error(`error fetching ID object at id ${r}: ${a.error.code}`);if(a.data?.bcs?.dataType!=="moveObject"||!qn(a.data.bcs.type))throw new Error(`object at id ${r} is not a ID object`);return s.fromSuiObjectData(a.data)}};function er(s){return s=G(s),s===`${St}::object::UID`}var $e=class s{__StructClass=!0;static get $typeName(){return`${St}::object::UID`}static $numTypeParams=0;static $isPhantom=[];$typeName=s.$typeName;$fullTypeName;$typeArgs;$isPhantom=s.$isPhantom;id;constructor(i,r){this.$fullTypeName=H(s.$typeName,...i),this.$typeArgs=i,this.id=r.id}static reified(){return{typeName:s.$typeName,fullTypeName:H(s.$typeName),typeArgs:[],isPhantom:s.$isPhantom,reifiedTypeArgs:[],fromFields:i=>s.fromFields(i),fromFieldsWithTypes:i=>s.fromFieldsWithTypes(i),fromBcs:i=>s.fromBcs(i),bcs:s.bcs,fromJSONField:i=>s.fromJSONField(i),fromJSON:i=>s.fromJSON(i),fromSuiParsedData:i=>s.fromSuiParsedData(i),fromSuiObjectData:i=>s.fromSuiObjectData(i),fetch:async(i,r)=>s.fetch(i,r),new:i=>new s([],i),kind:"StructClassReified"}}static get r(){return s.reified()}static phantom(){return oe(s.reified())}static get p(){return s.phantom()}static get bcs(){return Ai.struct("UID",{id:Nt.bcs})}static fromFields(i){return s.reified().new({id:L(Nt.reified(),i.id)})}static fromFieldsWithTypes(i){if(!er(i.type))throw new Error("not a UID type");return s.reified().new({id:$(Nt.reified(),i.fields.id)})}static fromBcs(i){return s.fromFields(s.bcs.parse(i))}toJSONField(){return{id:this.id}}toJSON(){return{$typeName:this.$typeName,$typeArgs:this.$typeArgs,...this.toJSONField()}}static fromJSONField(i){return s.reified().new({id:J(Nt.reified(),i.id)})}static fromJSON(i){if(i.$typeName!==s.$typeName)throw new Error("not a WithTwoGenerics json object");return s.fromJSONField(i)}static fromSuiParsedData(i){if(i.dataType!=="moveObject")throw new Error("not an object");if(!er(i.type))throw new Error(`object at ${i.fields.id} is not a UID object`);return s.fromFieldsWithTypes(i)}static fromSuiObjectData(i){if(i.bcs){if(i.bcs.dataType!=="moveObject"||!er(i.bcs.type))throw new Error("object at is not a UID object");return s.fromBcs(Wa(i.bcs.bcsBytes))}if(i.content)return s.fromSuiParsedData(i.content);throw new Error("Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.")}static async fetch(i,r){let a=await i.getObject({id:r,options:{showBcs:!0}});if(a.error)throw new Error(`error fetching UID object at id ${r}: ${a.error.code}`);if(a.data?.bcs?.dataType!=="moveObject"||!er(a.data.bcs.type))throw new Error(`object at id ${r} is not a UID object`);return s.fromSuiObjectData(a.data)}};function ze(s,i){return s.moveCall({target:`${Ua.PUBLISHED_AT}::bytes32::from_hex`,arguments:[_e(s,i,`${zn.$typeName}`)]})}g();y();f();async function ot(s,i,r=[]){let a=await s(i),o=r.concat(a.data);return a.hasNextPage&&a.nextCursor?ot(s,a.nextCursor,o):o}var nr=class extends De{constructor(r,a){super();this.nodeRpcUrlsConfig=r;this.api=a;this.client=new To({url:r.getNodeRpcUrl(this.chainSymbol)})}chainType="SUI";chainSymbol="SUI";client;send(){throw new O("Method send not implemented.")}async buildRawTransactionSwap(r){let a=r.sourceToken.suiAddresses;if(!a)throw new O("SUI token must contain 'suiAddresses'");(0,mi.setAddress)(a.bridgeAddress,a.bridgeAddressOrigin);let o=at(this.chainType,r);return await this.buildRawTransactionSwapFromParams(o,a)}async buildRawTransactionSwapFromParams(r,a){let{amount:o,fromAccountAddress:m,fromTokenAddress:u,toTokenAddress:p,minimumReceiveAmount:h}=r,b=new tr;b.setSender(m);let S={bridge:a.bridgeObjectAddress,coin:ce({balance:BigInt(o),type:u}),receiveAmountMin:BigInt(h)},C=Ia(b,[u,p],S),x=await ot(B=>this.client.getCoins({owner:r.toAccountAddress,coinType:p,cursor:B}));return x.length===0||!x[0]?b.transferObjects([C],r.toAccountAddress):b.mergeCoins(x[0].coinObjectId,[C]),await b.toJSON({client:this.client})}async buildRawTransactionSend(r){let a=await Ke(this.chainType,r,this.api),{messenger:o}=a,m=r.sourceToken.suiAddresses;if(!m)throw new O("SUI token must contain 'suiAddresses'");switch((0,mi.setAddress)(m.bridgeAddress,m.bridgeAddressOrigin),(0,Va.setAddress)(m.utilsAddress),o){case 1:return this.buildRawTransactionAllbridgeSend(a,m);case 2:return this.buildRawTransactionWormholeSend(a,m);case 3:case 4:return this.buildRawTransactionCctpSend(r,a,m)}}async buildRawTransactionAllbridgeSend(r,a){let{amount:o,fromAccountAddress:m,fromTokenAddress:u,toChainId:p,toAccountAddress:h,toTokenAddress:b,fee:S,gasFeePaymentMethod:C,extraGas:x}=r,B=S;x&&(B=ui(B).plus(x).toFixed());let v=new tr;if(v.setSender(m),C==="stablecoin"){let M=BigInt(o)-BigInt(B),F={bridge:a.bridgeObjectAddress,messenger:a.allbridgeMessengerObjectAddress,amount:ce({balance:M,type:u}),destinationChainId:p,nonce:it(),recipient:ze(v,Ye(h)),receiveToken:ze(v,Ye(b)),gasOracle:a.gasOracleObjectAddress,feeTokenCoin:ce({balance:BigInt(B),type:u}),feeSuiCoin:ce({balance:BigInt(0),useGasCoin:!1})};ti(v,u,F)}else{let M=B==="0"?ce({balance:BigInt(B),useGasCoin:!1}):ce({balance:BigInt(B)}),F={bridge:a.bridgeObjectAddress,messenger:a.allbridgeMessengerObjectAddress,amount:ce({balance:BigInt(o),type:u}),destinationChainId:p,nonce:it(),recipient:ze(v,Ye(h)),receiveToken:ze(v,Ye(b)),gasOracle:a.gasOracleObjectAddress,feeTokenCoin:ce({balance:BigInt(0),type:u}),feeSuiCoin:M};ti(v,u,F)}return await v.toJSON({client:this.client})}async buildRawTransactionWormholeSend(r,a){let{amount:o,fromAccountAddress:m,fromTokenAddress:u,toChainId:p,toAccountAddress:h,toTokenAddress:b,fee:S,gasFeePaymentMethod:C,extraGas:x}=r,B=S;x&&(B=ui(B).plus(x).toFixed());let v=new tr;if(v.setSender(m),C==="stablecoin"){let M=BigInt(o)-BigInt(B),F={bridge:a.bridgeObjectAddress,messenger:a.wormholeMessengerObjectAddress,wormholeState:a.wormholeStateObjectAddress,theClock:Ea,amount:ce({balance:M,type:u}),destinationChainId:p,nonce:it(),recipient:ze(v,Ye(h)),receiveToken:ze(v,Ye(b)),gasOracle:a.gasOracleObjectAddress,feeTokenCoin:ce({balance:BigInt(B),type:u}),feeSuiCoin:ce({balance:BigInt(0),useGasCoin:!1})};ei(v,u,F)}else{let M=B==="0"?ce({balance:BigInt(B),useGasCoin:!1}):ce({balance:BigInt(B)}),F={bridge:a.bridgeObjectAddress,messenger:a.wormholeMessengerObjectAddress,wormholeState:a.wormholeStateObjectAddress,theClock:Ea,amount:ce({balance:BigInt(o),type:u}),destinationChainId:p,nonce:it(),recipient:ze(v,Ye(h)),receiveToken:ze(v,Ye(b)),gasOracle:a.gasOracleObjectAddress,feeTokenCoin:ce({balance:BigInt(0),type:u}),feeSuiCoin:M};ei(v,u,F)}return await v.toJSON({client:this.client})}async buildRawTransactionCctpSend(r,a,o){let{amount:m,fromAccountAddress:u,fromTokenAddress:p,toChainId:h,toAccountAddress:b,fee:S,gasFeePaymentMethod:C,extraGas:x}=a;(0,Ga.setAddress)(o.cctpAddress,o.cctpAddressOrigin);let B=S;x&&(B=ui(B).plus(x).toFixed());let v=new tr;v.setSender(u);let M=ze(v,Ye(b)),F;if(r.destinationToken.chainType==="SOLANA"){let W=await Zn(this.chainType,r.toAccountAddress,r.destinationToken.tokenAddress,this.nodeRpcUrlsConfig.getNodeRpcUrl("SOL"));F=ze(v,Ye(W))}else F=M;if(C==="stablecoin"){let W=BigInt(m)-BigInt(B),D={cctpBridge:o.cctpObjectAddress,tokenMessengerMinterState:o.cctpTokenMessengerMinterStateObjectAddress,messageTransmitterState:o.cctpMessageTransmitterStateObjectAddress,treasury:o.cctpTreasuryObjectAddress,denyList:o.cctpDenyListObjectAddress,amount:ce({balance:W,type:p}),destinationChainId:h,recipient:F,recipientWalletAddress:M,gasOracle:o.gasOracleObjectAddress,feeTokenCoin:ce({balance:BigInt(B),type:p}),feeSuiCoin:ce({balance:BigInt(0),useGasCoin:!1})};ii(v,p,D)}else{let W=B==="0"?ce({balance:BigInt(B),useGasCoin:!1}):ce({balance:BigInt(B)}),D={cctpBridge:o.cctpObjectAddress,tokenMessengerMinterState:o.cctpTokenMessengerMinterStateObjectAddress,messageTransmitterState:o.cctpMessageTransmitterStateObjectAddress,treasury:o.cctpTreasuryObjectAddress,denyList:o.cctpDenyListObjectAddress,amount:ce({balance:BigInt(m),type:p}),destinationChainId:h,recipient:F,recipientWalletAddress:M,gasOracle:o.gasOracleObjectAddress,feeTokenCoin:ce({balance:BigInt(0),type:p}),feeSuiCoin:W};ii(v,p,D)}return await v.toJSON({client:this.client})}};g();y();f();import{Big as Po}from"big.js";g();y();f();g();y();f();import bo from"bn.js";function rr(s){return"0x"+new bo(s).toString("hex")}function ja(s){return new Promise(i=>setTimeout(()=>i(),s))}async function ir(s,i){let r=await s.trx.sign(i);if(!r.signature)throw new Vt("Transaction was not signed properly");let o=(await s.trx.sendRawTransaction(r)).transaction.txID;return await So(s,o),{txId:o}}async function So(s,i,r=1e4){let a=Date.now();for(;;){if(Date.now()-a>r)throw new rn("Transaction not found");let o=await s.trx.getUnconfirmedTransactionInfo(i);if(!o?.receipt){await ja(2e3);continue}if(o.receipt.result==="SUCCESS")return o;throw new rn(`Transaction status is ${o.receipt.result}`)}}var pn=class extends De{constructor(r,a){super();this.tronWeb=r;this.api=a}chainType="TRX";async send(r){let a=await Ke(this.chainType,r,this.api),o=await this.buildRawTransactionSendFromParams(a);return await ir(this.tronWeb,o)}async buildRawTransactionSwap(r){let a=at(this.chainType,r);return await this.buildRawTransactionSwapFromParams(a)}async buildRawTransactionSwapFromParams(r){let{amount:a,contractAddress:o,fromAccountAddress:m,fromTokenAddress:u,toAccountAddress:p,toTokenAddress:h,minimumReceiveAmount:b}=r,S=[{type:"uint256",value:a},{type:"bytes32",value:u},{type:"bytes32",value:h},{type:"address",value:p},{type:"uint256",value:b}];return this.buildRawTransaction(o,"swap(uint256,bytes32,bytes32,address,uint256)",S,"0",m)}async buildRawTransactionSend(r){let a=await Ke(this.chainType,r,this.api);return this.buildRawTransactionSendFromParams(a)}async buildRawTransactionSendFromParams(r){let{amount:a,contractAddress:o,fromAccountAddress:m,fromTokenAddress:u,toChainId:p,toAccountAddress:h,toTokenAddress:b,messenger:S,fee:C,gasFeePaymentMethod:x,extraGas:B}=r,v=C;B&&(v=Po(v).plus(B).toFixed());let M=it().toString(),F,W,D;return S==3||S==4?(x==="stablecoin"?(F=[{type:"uint256",value:a},{type:"bytes32",value:h},{type:"uint256",value:p},{type:"uint256",value:v}],W="0"):(F=[{type:"uint256",value:a},{type:"bytes32",value:h},{type:"uint256",value:p},{type:"uint256",value:0}],W=v),D="bridge(uint256,bytes32,uint256,uint256)"):(x==="stablecoin"?(F=[{type:"bytes32",value:u},{type:"uint256",value:a},{type:"bytes32",value:h},{type:"uint256",value:p},{type:"bytes32",value:b},{type:"uint256",value:M},{type:"uint8",value:S},{type:"uint256",value:v}],W="0"):(F=[{type:"bytes32",value:u},{type:"uint256",value:a},{type:"bytes32",value:h},{type:"uint256",value:p},{type:"bytes32",value:b},{type:"uint256",value:M},{type:"uint8",value:S},{type:"uint256",value:0}],W=v),D="swapAndBridge(bytes32,uint256,bytes32,uint256,bytes32,uint256,uint8,uint256)"),this.buildRawTransaction(o,D,F,W,m)}async buildRawTransaction(r,a,o,m,u){let p=await this.tronWeb.transactionBuilder.triggerSmartContract(r,a,{callValue:+m},o,u);if(!p?.result?.result)throw new O("Unknown error: "+JSON.stringify(p,null,2));return p.transaction}};var ar=class{constructor(i,r,a,o){this.api=i;this.nodeRpcUrlsConfig=r;this.params=a;this.tokenService=o;this.rawTxBuilder=new _n(i,r,a,o)}rawTxBuilder;async getAllowance(i,r){let a,o;r?(a=i,o=r):o=i;let m=un(o.token,o.messenger);return await this.tokenService.getAllowance({...o,spender:m},a)}async checkAllowance(i,r){let a,o;r?(a=i,o=r):o=i;let m=un(o.token,o.messenger);return this.tokenService.checkAllowance({...o,spender:m},a)}async approve(i,r){let a=un(r.token,r.messenger);return this.tokenService.approve(i,{...r,spender:a})}async send(i,r){return ee(r.amount),ne("amount",r.amount,r.sourceToken.decimals),$n(r.sourceToken.chainSymbol,this.api,this.nodeRpcUrlsConfig,this.params,i).send(r)}};function un(s,i){if(i&&i==3){if(s.cctpAddress)return s.cctpAddress;throw new Be("Such route does not support CCTP protocol")}else if(i&&i==4){if(s.cctpV2Address)return s.cctpV2Address;throw new Be("Such route does not support CCTP V2 protocol")}else return s.bridgeAddress}function $n(s,i,r,a,o){switch(Q.getChainProperty(s).chainType){case"EVM":{if(o)return new An(o,i,r);{let m=r.getNodeRpcUrl(s);return new An(new Co(m),i,r)}}case"TRX":{if(o)return new pn(o,i);{let m=r.getNodeRpcUrl(s);return new pn(new wo({fullHost:m,solidityNode:m,eventServer:m}),i)}}case"SOLANA":return new Yn(r.getNodeRpcUrl("SOL"),{wormholeMessengerProgramId:a.wormholeMessengerProgramId,solanaLookUpTable:a.solanaLookUpTable,cctpParams:a.cctpParams,jupiterParams:{jupiterUrl:a.jupiterUrl,jupiterApiKeyHeader:a.jupiterApiKeyHeader,jupiterMaxAccounts:a.jupiterMaxAccounts}},i);case"SRB":return new Kn(r,a,i);case"SUI":return new nr(r,i)}}g();y();f();import{Big as jo}from"big.js";import Zo from"timed-cache";import{TronWeb as _o}from"tronweb";import{FMT_BYTES as $o,FMT_NUMBER as Jo,Web3 as Lo}from"web3";g();y();f();import{Big as dt}from"big.js";function Za(s,i,r,a,o){let m=z(s,3),u=dt(m),p=dt(r),h=dt(a).plus(o),b,S;if(p.eq(0)||h.eq(0)){let x=u.div(2);b=dt(a).plus(x),S=dt(o).plus(x)}else b=dt(a).plus(u.mul(a).div(h)),S=dt(o).plus(u.mul(o).div(h));return dt(ji(i,b.toFixed(),S.toFixed())).minus(p).toFixed()}function _a(s){let i=z(s,3);return dt(i).round().toFixed()}g();y();f();import{Web3 as Pt}from"web3";g();y();f();var Bo={abi:[{inputs:[{internalType:"address",name:"_router",type:"address"},{internalType:"uint256",name:"_a",type:"uint256"},{internalType:"contract ERC20",name:"_token",type:"address"},{internalType:"uint16",name:"_feeShareBP",type:"uint16"},{internalType:"uint256",name:"_balanceRatioMinBP",type:"uint256"},{internalType:"string",name:"lpName",type:"string"},{internalType:"string",name:"lpSymbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RewardsClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"vUsdAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"fee",type:"uint256"}],name:"SwappedFromVUsd",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"vUsdAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"fee",type:"uint256"}],name:"SwappedToVUsd",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"},{stateMutability:"payable",type:"fallback"},{inputs:[],name:"a",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"accRewardPerShareP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"adjustTotalLpAmount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"adminFeeAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"adminFeeShareBP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"balanceRatioMinBP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"canWithdraw",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"claimAdminFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"d",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"feeShareBP",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"getY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"pendingReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"reserves",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_adminFeeShareBP",type:"uint256"}],name:"setAdminFeeShare",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_balanceRatioMinBP",type:"uint256"}],name:"setBalanceRatioMinBP",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint16",name:"_feeShareBP",type:"uint16"}],name:"setFeeShare",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_router",type:"address"}],name:"setRouter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_stopAuthority",type:"address"}],name:"setStopAuthority",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"receiveAmountMin",type:"uint256"},{internalType:"bool",name:"zeroFee",type:"bool"}],name:"swapFromVUsd",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"zeroFee",type:"bool"}],name:"swapToVUsd",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"token",outputs:[{internalType:"contract ERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"userRewardDebt",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"vUsdBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amountLp",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}]},Yt=Bo;g();y();f();g();y();f();var ve=class{lpAmount;rewardDebt;constructor(i){this.lpAmount=i.lpAmount,this.rewardDebt=i.rewardDebt}get userLiquidity(){return Y(this.lpAmount,3).toFixed()}earned(i,r){let a=Gi(this.lpAmount,this.rewardDebt,i.accRewardPerShareP,i.p);return r?Y(a,r).toFixed():a}};g();y();f();var We=class{};var gn=class extends We{constructor(r,a){super();this.web3=r;this.api=a}chainType="EVM";P=52;async getUserBalanceInfo(r,a){let o;try{o=await Un(this.getUserBalanceInfoByBatch(r,a),`Cannot get UserBalanceInfo for ${a.name} on ${a.chainSymbol}`,5e3)}catch{o=await Zr(()=>this.getUserBalanceInfoPerProperty(r,a),`Cannot get UserBalanceInfo for ${a.name} on ${a.chainSymbol}`,5,2e3)}return o}async getPoolInfoFromChain(r){let a;try{a=await Un(this.getPoolInfoByBatch(r),`Cannot get PoolInfo for ${r.name} on ${r.chainSymbol}`,5e3)}catch{a=await Zr(()=>this.getPoolInfoPerProperty(r),`Cannot get PoolInfo for ${r.name} on ${r.chainSymbol}`,5,2e3)}return a}async getUserBalanceInfoByBatch(r,a){let o=new this.web3.eth.BatchRequest,m=this.getPoolContract(a.poolAddress),u=m.methods.userRewardDebt(r).encodeABI(),p=m.methods.balanceOf(r).encodeABI();o.add({method:"eth_call",params:[{to:a.poolAddress,data:u},"latest"]}),o.add({method:"eth_call",params:[{to:a.poolAddress,data:p},"latest"]});let[h,b]=await o.execute();if(h&&b&&!h.error&&!b.error)return new ve({lpAmount:Pt.utils.toBigInt(b.result).toString(),rewardDebt:Pt.utils.toBigInt(h.result).toString()});throw new Error("Batched failed")}async getUserBalanceInfoPerProperty(r,a){let o=(await this.getPoolContract(a.poolAddress).methods.userRewardDebt(r).call()).toString(),m=(await this.getPoolContract(a.poolAddress).methods.balanceOf(r).call()).toString();return new ve({lpAmount:m,rewardDebt:o})}async getPoolInfoByBatch(r){let a=new this.web3.eth.BatchRequest,o=this.getPoolContract(r.poolAddress),m=o.methods.a().encodeABI(),u=o.methods.d().encodeABI(),p=o.methods.tokenBalance().encodeABI(),h=o.methods.vUsdBalance().encodeABI(),b=o.methods.totalSupply().encodeABI(),S=o.methods.accRewardPerShareP().encodeABI();a.add({method:"eth_call",params:[{to:r.poolAddress,data:m},"latest"]}),a.add({method:"eth_call",params:[{to:r.poolAddress,data:u},"latest"]}),a.add({method:"eth_call",params:[{to:r.poolAddress,data:p},"latest"]}),a.add({method:"eth_call",params:[{to:r.poolAddress,data:h},"latest"]}),a.add({method:"eth_call",params:[{to:r.poolAddress,data:b},"latest"]}),a.add({method:"eth_call",params:[{to:r.poolAddress,data:S},"latest"]});let[C,x,B,v,M,F]=await a.execute();if(C&&x&&B&&v&&M&&F&&!C.error&&!x.error&&!B.error&&!v.error&&!M.error&&!F.error){let W=Pt.utils.toBigInt(B.result).toString(),D=Pt.utils.toBigInt(v.result).toString(),U=Ie({tokenBalance:W,vUsdBalance:D});return{aValue:Pt.utils.toBigInt(C.result).toString(),dValue:Pt.utils.toBigInt(x.result).toString(),tokenBalance:W,vUsdBalance:D,totalLpAmount:Pt.utils.toBigInt(M.result).toString(),accRewardPerShareP:Pt.utils.toBigInt(F.result).toString(),p:this.P,imbalance:U}}throw new Error("Batched failed")}async getPoolInfoPerProperty(r){let a=this.getPoolContract(r.poolAddress),o=(await a.methods.a().call()).toString(),m=(await a.methods.d().call()).toString(),u=(await a.methods.tokenBalance().call()).toString(),p=(await a.methods.vUsdBalance().call()).toString(),h=(await a.methods.totalSupply().call()).toString(),b=(await a.methods.accRewardPerShareP().call()).toString(),S=Ie({tokenBalance:u,vUsdBalance:p});return{aValue:o,dValue:m,tokenBalance:u,vUsdBalance:p,totalLpAmount:h,accRewardPerShareP:b,p:this.P,imbalance:S}}async buildRawTransactionDeposit(r){return Promise.resolve({...this.buildTxParams(r),data:this.getPoolContract(r.token.poolAddress).methods.deposit(r.amount).encodeABI()})}async buildRawTransactionWithdraw(r){return Promise.resolve({...this.buildTxParams(r),data:this.getPoolContract(r.token.poolAddress).methods.withdraw(r.amount).encodeABI()})}async buildRawTransactionClaimRewards(r){return Promise.resolve({...this.buildTxParams(r),data:this.getPoolContract(r.token.poolAddress).methods.claimRewards().encodeABI()})}buildTxParams(r){return{from:r.accountAddress,to:r.token.poolAddress,value:"0"}}getPoolContract(r){return new this.web3.eth.Contract(Yt.abi,r)}};g();y();f();var sr=class{constructor(i,r,a,o){this.api=i;this.nodeRpcUrlsConfig=r;this.params=a;this.tokenService=o}async approve(i,r){if(r){let a=i,o=r;return this.tokenService.buildRawTransactionApprove({...o,spender:o.token.poolAddress},a)}else{let a=i;return this.tokenService.buildRawTransactionApprove({...a,spender:a.token.poolAddress})}}async deposit(i,r){return ee(i.amount),ne("amount",i.amount,i.token.decimals),i.amount=z(i.amount,i.token.decimals).toFixed(),Kt(i.token.chainSymbol,this.api,this.nodeRpcUrlsConfig,this.params,r).buildRawTransactionDeposit(i)}async withdraw(i,r){return ee(i.amount),ne("amount",i.amount,i.token.decimals),i.amount=z(i.amount,3).toFixed(),Kt(i.token.chainSymbol,this.api,this.nodeRpcUrlsConfig,this.params,r).buildRawTransactionWithdraw(i)}async claimRewards(i,r){return Kt(i.token.chainSymbol,this.api,this.nodeRpcUrlsConfig,this.params,r).buildRawTransactionClaimRewards(i)}};g();y();f();import{AnchorProvider as Io,BN as $a,Program as Ro,Spl as vo,web3 as ko}from"@project-serum/anchor";import{Connection as xo,PublicKey as wt}from"@solana/web3.js";var or=class extends We{constructor(r,a){super();this.solanaRpcUrl=r;this.api=a}chainType="SOLANA";P=48;async getUserBalanceInfo(r,a){let o=this.buildAnchorProvider(r),m=this.getBridge(a.bridgeAddress,o),u=new wt(a.poolAddress),p=await m.account.pool.fetch(u);try{let h=await Jr(new wt(r),p.mint,m.programId),{lpAmount:b,rewardDebt:S}=await m.account.userDeposit.fetch(h);return new ve({lpAmount:b.toString(),rewardDebt:S.toString()})}catch{return new ve({lpAmount:"0",rewardDebt:"0"})}}async getPoolInfoFromChain(r){let a=this.buildAnchorProvider(r.bridgeAddress),o=await this.getBridge(r.bridgeAddress,a).account.pool.fetch(r.poolAddress),m=o.vUsdBalance.toString(),u=o.tokenBalance.toString(),p=Ie({tokenBalance:u,vUsdBalance:m});return{dValue:o.d.toString(),aValue:o.a.toString(),totalLpAmount:o.totalLpAmount.toString(),vUsdBalance:m,tokenBalance:u,accRewardPerShareP:o.accRewardPerShareP.toString(),p:this.P,imbalance:p}}async buildRawTransactionDeposit(r){let{bridge:a,accounts:o,preInstructions:m}=await this.prepareDataForTransaction(r),u=await a.methods.deposit(new $a(r.amount)).accounts(o).preInstructions(m).transaction();return u.recentBlockhash=(await this.buildAnchorProvider(r.accountAddress).connection.getLatestBlockhash()).blockhash,u.feePayer=new wt(r.accountAddress),await Jt(u,r.txFeeParams,this.solanaRpcUrl),u}async buildRawTransactionWithdraw(r){let{bridge:a,accounts:o,preInstructions:m}=await this.prepareDataForTransaction(r),u=await a.methods.withdraw(new $a(r.amount)).accounts(o).preInstructions(m).transaction();return u.recentBlockhash=(await this.buildAnchorProvider(r.accountAddress).connection.getLatestBlockhash()).blockhash,u.feePayer=new wt(r.accountAddress),await Jt(u,r.txFeeParams,this.solanaRpcUrl),u}async buildRawTransactionClaimRewards(r){let{bridge:a,accounts:o,preInstructions:m}=await this.prepareDataForTransaction(r),u=await a.methods.claimRewards().accounts(o).preInstructions(m).transaction();return u.recentBlockhash=(await this.buildAnchorProvider(r.accountAddress).connection.getLatestBlockhash()).blockhash,u.feePayer=new wt(r.accountAddress),await Jt(u,r.txFeeParams,this.solanaRpcUrl),u}async prepareDataForTransaction(r){let a=this.buildAnchorProvider(r.accountAddress),o=this.getBridge(r.token.bridgeAddress,a),{accounts:m,preInstructions:u}=await this._getLPTransactionData(o,r.token.poolAddress,r.accountAddress,a);return{bridge:o,accounts:m,preInstructions:u}}getBridge(r,a){return new Ro(mn,r,a)}buildAnchorProvider(r){let a=new xo(this.solanaRpcUrl,"confirmed"),o=new wt(r);return new Io(a,{publicKey:o},{preflightCommitment:"confirmed",commitment:"confirmed"})}async _getLPTransactionData(r,a,o,m){let u=new wt(o),p=await ft(r.programId),h=await Zt(r.programId),b=new wt(a),C=(await r.account.pool.fetch(b)).mint,x=await Xe(u,C),B=await _t(C,r.programId),v=await Jr(u,C,r.programId),M=[ko.ComputeBudgetProgram.setComputeUnitLimit({units:1e6})];try{await $t(x,m)}catch{let U=await vo.associatedToken(m).methods.create().accounts({mint:C,owner:u,associatedAccount:x}).instruction();M.push(U)}try{await r.account.userDeposit.fetch(v)}catch{let D=await r.methods.initDepositAccount().accounts({mint:C,user:u,userDeposit:v}).instruction();M.push(D)}return{accounts:{mint:C,user:u,config:p,pool:b,bridgeAuthority:h,userDeposit:v,userToken:x,bridgeToken:B},preInstructions:M}}};g();y();f();import{contract as KR}from"@stellar/stellar-sdk";g();y();f();import{contract as t}from"@stellar/stellar-sdk";var Fo=t.Spec,Mo=t.Client;var cr=class extends Mo{constructor(r){super(new Fo(["AAAAAAAAAAAAAAAKaW5pdGlhbGl6ZQAAAAAABwAAAAAAAAAFYWRtaW4AAAAAAAATAAAAAAAAAAZicmlkZ2UAAAAAABMAAAAAAAAAAWEAAAAAAAAKAAAAAAAAAAV0b2tlbgAAAAAAABMAAAAAAAAADGZlZV9zaGFyZV9icAAAAAoAAAAAAAAAFGJhbGFuY2VfcmF0aW9fbWluX2JwAAAACgAAAAAAAAASYWRtaW5fZmVlX3NoYXJlX2JwAAAAAAAKAAAAAQAAA+kAAAPtAAAAAAAAAAM=","AAAAAAAAAAAAAAAHZGVwb3NpdAAAAAACAAAAAAAAAAZzZW5kZXIAAAAAABMAAAAAAAAABmFtb3VudAAAAAAACgAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAId2l0aGRyYXcAAAACAAAAAAAAAAZzZW5kZXIAAAAAABMAAAAAAAAACWFtb3VudF9scAAAAAAAAAoAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAAAAAANc3dhcF90b192X3VzZAAAAAAAAAMAAAAAAAAABHVzZXIAAAATAAAAAAAAAAZhbW91bnQAAAAAAAoAAAAAAAAACHplcm9fZmVlAAAAAQAAAAEAAAPpAAAACgAAAAM=","AAAAAAAAAAAAAAAPc3dhcF9mcm9tX3ZfdXNkAAAAAAQAAAAAAAAABHVzZXIAAAATAAAAAAAAAAt2dXNkX2Ftb3VudAAAAAAKAAAAAAAAABJyZWNlaXZlX2Ftb3VudF9taW4AAAAAAAoAAAAAAAAACHplcm9fZmVlAAAAAQAAAAEAAAPpAAAACgAAAAM=","AAAAAAAAAAAAAAANY2xhaW1fcmV3YXJkcwAAAAAAAAEAAAAAAAAABnNlbmRlcgAAAAAAEwAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAdgYWRtaW5gAAAAAA1zZXRfZmVlX3NoYXJlAAAAAAAAAQAAAAAAAAAMZmVlX3NoYXJlX2JwAAAACgAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAWYWRqdXN0X3RvdGFsX2xwX2Ftb3VudAAAAAAAAAAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAYc2V0X2JhbGFuY2VfcmF0aW9fbWluX2JwAAAAAQAAAAAAAAAUYmFsYW5jZV9yYXRpb19taW5fYnAAAAAKAAAAAQAAA+kAAAPtAAAAAAAAAAM=","AAAAAAAAAAAAAAAMc3RvcF9kZXBvc2l0AAAAAAAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAANc3RhcnRfZGVwb3NpdAAAAAAAAAAAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAAAAAANc3RvcF93aXRoZHJhdwAAAAAAAAAAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAAAAAAOc3RhcnRfd2l0aGRyYXcAAAAAAAAAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAAAAAASc2V0X3N0b3BfYXV0aG9yaXR5AAAAAAABAAAAAAAAAA5zdG9wX2F1dGhvcml0eQAAAAAAEwAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAAKc2V0X2JyaWRnZQAAAAAAAQAAAAAAAAAGYnJpZGdlAAAAAAATAAAAAQAAA+kAAAPtAAAAAAAAAAM=","AAAAAAAAAAAAAAAJc2V0X2FkbWluAAAAAAAAAQAAAAAAAAAJbmV3X2FkbWluAAAAAAAAEwAAAAEAAAPpAAAD7QAAAAAAAAAD","AAAAAAAAAAAAAAATc2V0X2FkbWluX2ZlZV9zaGFyZQAAAAABAAAAAAAAABJhZG1pbl9mZWVfc2hhcmVfYnAAAAAAAAoAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAAAAAAPY2xhaW1fYWRtaW5fZmVlAAAAAAAAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAAAAAAZgdmlld2AAAAAAAA5wZW5kaW5nX3Jld2FyZAAAAAAAAQAAAAAAAAAEdXNlcgAAABMAAAABAAAD6QAAAAoAAAAD","AAAAAAAAAAAAAAAIZ2V0X3Bvb2wAAAAAAAAAAQAAA+kAAAfQAAAABFBvb2wAAAAD","AAAAAAAAAAAAAAAJZ2V0X2FkbWluAAAAAAAAAAAAAAEAAAPpAAAAEwAAAAM=","AAAAAAAAAAAAAAASZ2V0X3N0b3BfYXV0aG9yaXR5AAAAAAAAAAAAAQAAA+kAAAATAAAAAw==","AAAAAAAAAAAAAAAKZ2V0X2JyaWRnZQAAAAAAAAAAAAEAAAPpAAAAEwAAAAM=","AAAAAAAAAAAAAAAQZ2V0X3VzZXJfZGVwb3NpdAAAAAEAAAAAAAAABHVzZXIAAAATAAAAAQAAA+kAAAfQAAAAC1VzZXJEZXBvc2l0AAAAAAM=","AAAAAAAAAAAAAAAHdXBncmFkZQAAAAABAAAAAAAAAA1uZXdfd2FzbV9oYXNoAAAAAAAD7gAAACAAAAABAAAD6QAAA+0AAAAAAAAAAw==","AAAAAQAAAAAAAAAAAAAAD1N3YXBwZWRGcm9tVlVzZAAAAAAFAAAAAAAAAAZhbW91bnQAAAAAAAoAAAAAAAAAA2ZlZQAAAAAKAAAAAAAAAAlyZWNpcGllbnQAAAAAAAATAAAAAAAAAAV0b2tlbgAAAAAAABMAAAAAAAAAC3Z1c2RfYW1vdW50AAAAAAo=","AAAAAQAAAAAAAAAAAAAADVN3YXBwZWRUb1ZVc2QAAAAAAAAFAAAAAAAAAAZhbW91bnQAAAAAAAoAAAAAAAAAA2ZlZQAAAAAKAAAAAAAAAAZzZW5kZXIAAAAAABMAAAAAAAAABXRva2VuAAAAAAAAEwAAAAAAAAALdnVzZF9hbW91bnQAAAAACg==","AAAAAQAAAAAAAAAAAAAAB0RlcG9zaXQAAAAAAgAAAAAAAAAGYW1vdW50AAAAAAAKAAAAAAAAAAR1c2VyAAAAEw==","AAAAAQAAAAAAAAAAAAAACFdpdGhkcmF3AAAAAgAAAAAAAAAGYW1vdW50AAAAAAAKAAAAAAAAAAR1c2VyAAAAEw==","AAAAAQAAAAAAAAAAAAAADlJld2FyZHNDbGFpbWVkAAAAAAACAAAAAAAAAAZhbW91bnQAAAAAAAoAAAAAAAAABHVzZXIAAAAT","AAAAAQAAAAAAAAAAAAAABkJyaWRnZQAAAAAAAQAAAAAAAAABMAAAAAAAABM=","AAAAAgAAAAAAAAAAAAAAB0RhdGFLZXkAAAAAAQAAAAEAAAAAAAAAC1VzZXJEZXBvc2l0AAAAAAEAAAAT","AAAAAQAAAAAAAAAAAAAABFBvb2wAAAAPAAAAAAAAAAFhAAAAAAAACgAAAAAAAAAWYWNjX3Jld2FyZF9wZXJfc2hhcmVfcAAAAAAACgAAAAAAAAAQYWRtaW5fZmVlX2Ftb3VudAAAAAoAAAAAAAAAEmFkbWluX2ZlZV9zaGFyZV9icAAAAAAACgAAAAAAAAAUYmFsYW5jZV9yYXRpb19taW5fYnAAAAAKAAAAAAAAAAtjYW5fZGVwb3NpdAAAAAABAAAAAAAAAAxjYW5fd2l0aGRyYXcAAAABAAAAAAAAAAFkAAAAAAAACgAAAAAAAAAIZGVjaW1hbHMAAAAEAAAAAAAAAAxmZWVfc2hhcmVfYnAAAAAKAAAAAAAAAAhyZXNlcnZlcwAAAAoAAAAAAAAABXRva2VuAAAAAAAAEwAAAAAAAAANdG9rZW5fYmFsYW5jZQAAAAAAAAoAAAAAAAAAD3RvdGFsX2xwX2Ftb3VudAAAAAAKAAAAAAAAAA12X3VzZF9iYWxhbmNlAAAAAAAACg==","AAAAAQAAAAAAAAAAAAAAC1VzZXJEZXBvc2l0AAAAAAIAAAAAAAAACWxwX2Ftb3VudAAAAAAAAAoAAAAAAAAAC3Jld2FyZF9kZWJ0AAAAAAo=","AAAAAQAAAAAAAAAAAAAABUFkbWluAAAAAAAAAQAAAAAAAAABMAAAAAAAABM=","AAAAAQAAAAAAAAAAAAAAEEdhc09yYWNsZUFkZHJlc3MAAAABAAAAAAAAAAEwAAAAAAAAEw==","AAAAAQAAAAAAAAAAAAAACEdhc1VzYWdlAAAAAQAAAAAAAAABMAAAAAAAA+wAAAAEAAAACg==","AAAAAQAAAAAAAAAAAAAAC05hdGl2ZVRva2VuAAAAAAEAAAAAAAAAATAAAAAAAAAT","AAAAAQAAAAAAAAAAAAAADVN0b3BBdXRob3JpdHkAAAAAAAABAAAAAAAAAAEwAAAAAAAAEw==","AAAABAAAAAAAAAAAAAAABUVycm9yAAAAAAAAKAAAAAAAAAANVW5pbXBsZW1lbnRlZAAAAAAAAAAAAAAAAAAAC0luaXRpYWxpemVkAAAAAAEAAAAAAAAADVVuaW5pdGlhbGl6ZWQAAAAAAAACAAAAAAAAAAxVbmF1dGhvcml6ZWQAAAADAAAAAAAAAApJbnZhbGlkQXJnAAAAAAAEAAAAAAAAAA5JbnZhbGlkQ2hhaW5JZAAAAAAABQAAAAAAAAATSW52YWxpZE90aGVyQ2hhaW5JZAAAAAAGAAAAAAAAAA5HYXNVc2FnZU5vdFNldAAAAAAABwAAAAAAAAANQnJva2VuQWRkcmVzcwAAAAAAAAgAAAAAAAAACE5vdEZvdW5kAAAACQAAAAAAAAAYVG9rZW5JbnN1ZmZpY2llbnRCYWxhbmNlAAAACgAAAAAAAAAKQ2FzdEZhaWxlZAAAAAAACwAAAAAAAAAMVTI1Nk92ZXJmbG93AAAADAAAAAAAAAAKWmVyb0Ftb3VudAAAAAAAZwAAAAAAAAAMUG9vbE92ZXJmbG93AAAAaAAAAAAAAAALWmVyb0NoYW5nZXMAAAAAaQAAAAAAAAARUmVzZXJ2ZXNFeGhhdXN0ZWQAAAAAAABqAAAAAAAAABpJbnN1ZmZpY2llbnRSZWNlaXZlZEFtb3VudAAAAAAAawAAAAAAAAAUQmFsYW5jZVJhdGlvRXhjZWVkZWQAAABsAAAAAAAAAAlGb3JiaWRkZW4AAAAAAABtAAAAAAAAABlVbmF1dGhvcml6ZWRTdG9wQXV0aG9yaXR5AAAAAAAAywAAAAAAAAAOU3dhcFByb2hpYml0ZWQAAAAAAMwAAAAAAAAAEkFtb3VudFRvb0xvd0ZvckZlZQAAAAAAzQAAAAAAAAAWQnJpZGdlVG9UaGVaZXJvQWRkcmVzcwAAAAAAzgAAAAAAAAAORW1wdHlSZWNpcGllbnQAAAAAAM8AAAAAAAAAE1NvdXJjZU5vdFJlZ2lzdGVyZWQAAAAA0AAAAAAAAAAVV3JvbmdEZXN0aW5hdGlvbkNoYWluAAAAAAAA0QAAAAAAAAATVW5rbm93bkFub3RoZXJDaGFpbgAAAADSAAAAAAAAABFUb2tlbnNBbHJlYWR5U2VudAAAAAAAANMAAAAAAAAAEE1lc3NhZ2VQcm9jZXNzZWQAAADUAAAAAAAAAAxOb3RFbm91Z2hGZWUAAADWAAAAAAAAAAlOb01lc3NhZ2UAAAAAAADXAAAAAAAAAA1Ob1JlY2VpdmVQb29sAAAAAAAA2AAAAAAAAAAGTm9Qb29sAAAAAADZAAAAAAAAABNVbmtub3duQW5vdGhlclRva2VuAAAAANoAAAAAAAAAD1dyb25nQnl0ZUxlbmd0aAAAAAEsAAAAAAAAAApIYXNNZXNzYWdlAAAAAAEtAAAAAAAAABdJbnZhbGlkUHJpbWFyeVNpZ25hdHVyZQAAAAEuAAAAAAAAABlJbnZhbGlkU2Vjb25kYXJ5U2lnbmF0dXJlAAAAAAABLwAAAAAAAAARTm9HYXNEYXRhRm9yQ2hhaW4AAAAAAAGQ"]),r);this.options=r}fromJSON={initialize:this.txFromJSON,deposit:this.txFromJSON,withdraw:this.txFromJSON,swap_to_v_usd:this.txFromJSON,swap_from_v_usd:this.txFromJSON,claim_rewards:this.txFromJSON,set_fee_share:this.txFromJSON,adjust_total_lp_amount:this.txFromJSON,set_balance_ratio_min_bp:this.txFromJSON,stop_deposit:this.txFromJSON,start_deposit:this.txFromJSON,stop_withdraw:this.txFromJSON,start_withdraw:this.txFromJSON,set_stop_authority:this.txFromJSON,set_bridge:this.txFromJSON,set_admin:this.txFromJSON,set_admin_fee_share:this.txFromJSON,claim_admin_fee:this.txFromJSON,pending_reward:this.txFromJSON,get_pool:this.txFromJSON,get_admin:this.txFromJSON,get_stop_authority:this.txFromJSON,get_bridge:this.txFromJSON,get_user_deposit:this.txFromJSON,upgrade:this.txFromJSON}};g();y();f();import{contract as fT,rpc as Oo}from"@stellar/stellar-sdk";var Ja=Oo.Api;function Ht(s){let{simulation:i,options:r}=s;if(!i)throw new Error("Soroban assembled transaction does not have simulation");if(Ja.isSimulationSuccess(i))return i.result==null?void 0:r.parseResultXdr(i.result.retval);throw new Error(i.error)}function Qt(s){let{simulation:i}=s;if(!i)throw new Error("Soroban assembled transaction does not have simulation");return Ja.isSimulationError(i)}var Ar=class extends We{constructor(r,a,o){super();this.nodeRpcUrlsConfig=r;this.params=a;this.api=o}chainType="SRB";P=48;async getUserBalanceInfo(r,a){let m=await this.getContract(a.poolAddress).get_user_deposit({user:r});if(Qt(m))throw new O;let u=Ht(m);if(!u)throw new O;let p=u.unwrap();return new ve({lpAmount:p.lp_amount.toString(),rewardDebt:p.reward_debt.toString()})}async getPoolInfoFromChain(r){let o=await this.getContract(r.poolAddress).get_pool();if(Qt(o))throw new O;let m=Ht(o);if(!m)throw new O;let u=m.unwrap();return{aValue:u.a.toString(),accRewardPerShareP:u.acc_reward_per_share_p.toString(),dValue:u.d.toString(),tokenBalance:u.token_balance.toString(),p:this.P,totalLpAmount:u.total_lp_amount.toString(),vUsdBalance:u.v_usd_balance.toString(),imbalance:Ie({tokenBalance:u.token_balance.toString(),vUsdBalance:u.v_usd_balance.toString()})}}async buildRawTransactionDeposit(r){return(await this.getContract(r.token.poolAddress,r.accountAddress).deposit({sender:r.accountAddress,amount:BigInt(r.amount)})).toXDR()}async buildRawTransactionWithdraw(r){return(await this.getContract(r.token.poolAddress,r.accountAddress).withdraw({sender:r.accountAddress,amount_lp:BigInt(r.amount)})).toXDR()}async buildRawTransactionClaimRewards(r){return(await this.getContract(r.token.poolAddress,r.accountAddress).claim_rewards({sender:r.accountAddress})).toXDR()}getContract(r,a){let o={publicKey:a,contractId:r,networkPassphrase:this.params.sorobanNetworkPassphrase,rpcUrl:this.nodeRpcUrlsConfig.getNodeRpcUrl("SRB")};return new cr(o)}};g();y();f();import{SuiClient as Vo}from"@mysten/sui/client";import{Transaction as hr}from"@mysten/sui/transactions";var qt=Le(Tt());g();y();f();fe();g();y();f();fe();import{bcs as La}from"@mysten/sui/bcs";import{fromB64 as No}from"@mysten/sui/utils";function ur(s){return s=G(s),s.startsWith(`${St}::balance::Balance<`)}var Se=class s{__StructClass=!0;static get $typeName(){return`${St}::balance::Balance`}static $numTypeParams=1;static $isPhantom=[!0];$typeName=s.$typeName;$fullTypeName;$typeArgs;$isPhantom=s.$isPhantom;value;constructor(i,r){this.$fullTypeName=H(s.$typeName,...i),this.$typeArgs=i,this.value=r.value}static reified(i){return{typeName:s.$typeName,fullTypeName:H(s.$typeName,Z(i)),typeArgs:[Z(i)],isPhantom:s.$isPhantom,reifiedTypeArgs:[i],fromFields:r=>s.fromFields(i,r),fromFieldsWithTypes:r=>s.fromFieldsWithTypes(i,r),fromBcs:r=>s.fromBcs(i,r),bcs:s.bcs,fromJSONField:r=>s.fromJSONField(i,r),fromJSON:r=>s.fromJSON(i,r),fromSuiParsedData:r=>s.fromSuiParsedData(i,r),fromSuiObjectData:r=>s.fromSuiObjectData(i,r),fetch:async(r,a)=>s.fetch(r,i,a),new:r=>new s([Z(i)],r),kind:"StructClassReified"}}static get r(){return s.reified}static phantom(i){return oe(s.reified(i))}static get p(){return s.phantom}static get bcs(){return La.struct("Balance",{value:La.u64()})}static fromFields(i,r){return s.reified(i).new({value:L("u64",r.value)})}static fromFieldsWithTypes(i,r){if(!ur(r.type))throw new Error("not a Balance type");return st(r,[i]),s.reified(i).new({value:$("u64",r.fields.value)})}static fromBcs(i,r){return s.fromFields(i,s.bcs.parse(r))}toJSONField(){return{value:this.value.toString()}}toJSON(){return{$typeName:this.$typeName,$typeArgs:this.$typeArgs,...this.toJSONField()}}static fromJSONField(i,r){return s.reified(i).new({value:J("u64",r.value)})}static fromJSON(i,r){if(r.$typeName!==s.$typeName)throw new Error("not a WithTwoGenerics json object");return Qe(H(s.$typeName,Z(i)),r.$typeArgs,[i]),s.fromJSONField(i,r)}static fromSuiParsedData(i,r){if(r.dataType!=="moveObject")throw new Error("not an object");if(!ur(r.type))throw new Error(`object at ${r.fields.id} is not a Balance object`);return s.fromFieldsWithTypes(i,r)}static fromSuiObjectData(i,r){if(r.bcs){if(r.bcs.dataType!=="moveObject"||!ur(r.bcs.type))throw new Error("object at is not a Balance object");let a=be(r.bcs.type).typeArgs;if(a.length!==1)throw new Error(`type argument mismatch: expected 1 type argument but got '${a.length}'`);let o=G(a[0]),m=G(Z(i));if(o!==G(Z(i)))throw new Error(`type argument mismatch: expected '${m}' but got '${o}'`);return s.fromBcs(i,No(r.bcs.bcsBytes))}if(r.content)return s.fromSuiParsedData(i,r.content);throw new Error("Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.")}static async fetch(i,r,a){let o=await i.getObject({id:a,options:{showBcs:!0}});if(o.error)throw new Error(`error fetching Balance object at id ${a}: ${o.error.code}`);if(o.data?.bcs?.dataType!=="moveObject"||!ur(o.data.bcs.type))throw new Error(`object at id ${a} is not a Balance object`);return s.fromSuiObjectData(r,o.data)}};var pi=Le(Tt());g();y();f();fe();var li=Le(Tt());import{bcs as mr}from"@mysten/sui/bcs";import{fromB64 as Do}from"@mysten/sui/utils";function lr(s){return s=G(s),s.startsWith(`${li.PKG_V1}::pool_rewards::PoolRewards<`)}var Dt=class s{__StructClass=!0;static get $typeName(){return`${li.PKG_V1}::pool_rewards::PoolRewards`}static $numTypeParams=1;static $isPhantom=[!0];$typeName=s.$typeName;$fullTypeName;$typeArgs;$isPhantom=s.$isPhantom;accRewardPerShareP;adminFeeShareBp;adminFee;rewards;lpSupply;constructor(i,r){this.$fullTypeName=H(s.$typeName,...i),this.$typeArgs=i,this.accRewardPerShareP=r.accRewardPerShareP,this.adminFeeShareBp=r.adminFeeShareBp,this.adminFee=r.adminFee,this.rewards=r.rewards,this.lpSupply=r.lpSupply}static reified(i){return{typeName:s.$typeName,fullTypeName:H(s.$typeName,Z(i)),typeArgs:[Z(i)],isPhantom:s.$isPhantom,reifiedTypeArgs:[i],fromFields:r=>s.fromFields(i,r),fromFieldsWithTypes:r=>s.fromFieldsWithTypes(i,r),fromBcs:r=>s.fromBcs(i,r),bcs:s.bcs,fromJSONField:r=>s.fromJSONField(i,r),fromJSON:r=>s.fromJSON(i,r),fromSuiParsedData:r=>s.fromSuiParsedData(i,r),fromSuiObjectData:r=>s.fromSuiObjectData(i,r),fetch:async(r,a)=>s.fetch(r,i,a),new:r=>new s([Z(i)],r),kind:"StructClassReified"}}static get r(){return s.reified}static phantom(i){return oe(s.reified(i))}static get p(){return s.phantom}static get bcs(){return mr.struct("PoolRewards",{acc_reward_per_share_p:mr.u128(),admin_fee_share_bp:mr.u64(),admin_fee:Se.bcs,rewards:Se.bcs,lp_supply:mr.u64()})}static fromFields(i,r){return s.reified(i).new({accRewardPerShareP:L("u128",r.acc_reward_per_share_p),adminFeeShareBp:L("u64",r.admin_fee_share_bp),adminFee:L(Se.reified(i),r.admin_fee),rewards:L(Se.reified(i),r.rewards),lpSupply:L("u64",r.lp_supply)})}static fromFieldsWithTypes(i,r){if(!lr(r.type))throw new Error("not a PoolRewards type");return st(r,[i]),s.reified(i).new({accRewardPerShareP:$("u128",r.fields.acc_reward_per_share_p),adminFeeShareBp:$("u64",r.fields.admin_fee_share_bp),adminFee:$(Se.reified(i),r.fields.admin_fee),rewards:$(Se.reified(i),r.fields.rewards),lpSupply:$("u64",r.fields.lp_supply)})}static fromBcs(i,r){return s.fromFields(i,s.bcs.parse(r))}toJSONField(){return{accRewardPerShareP:this.accRewardPerShareP.toString(),adminFeeShareBp:this.adminFeeShareBp.toString(),adminFee:this.adminFee.toJSONField(),rewards:this.rewards.toJSONField(),lpSupply:this.lpSupply.toString()}}toJSON(){return{$typeName:this.$typeName,$typeArgs:this.$typeArgs,...this.toJSONField()}}static fromJSONField(i,r){return s.reified(i).new({accRewardPerShareP:J("u128",r.accRewardPerShareP),adminFeeShareBp:J("u64",r.adminFeeShareBp),adminFee:J(Se.reified(i),r.adminFee),rewards:J(Se.reified(i),r.rewards),lpSupply:J("u64",r.lpSupply)})}static fromJSON(i,r){if(r.$typeName!==s.$typeName)throw new Error("not a WithTwoGenerics json object");return Qe(H(s.$typeName,Z(i)),r.$typeArgs,[i]),s.fromJSONField(i,r)}static fromSuiParsedData(i,r){if(r.dataType!=="moveObject")throw new Error("not an object");if(!lr(r.type))throw new Error(`object at ${r.fields.id} is not a PoolRewards object`);return s.fromFieldsWithTypes(i,r)}static fromSuiObjectData(i,r){if(r.bcs){if(r.bcs.dataType!=="moveObject"||!lr(r.bcs.type))throw new Error("object at is not a PoolRewards object");let a=be(r.bcs.type).typeArgs;if(a.length!==1)throw new Error(`type argument mismatch: expected 1 type argument but got '${a.length}'`);let o=G(a[0]),m=G(Z(i));if(o!==G(Z(i)))throw new Error(`type argument mismatch: expected '${m}' but got '${o}'`);return s.fromBcs(i,Do(r.bcs.bcsBytes))}if(r.content)return s.fromSuiParsedData(i,r.content);throw new Error("Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.")}static async fetch(i,r,a){let o=await i.getObject({id:a,options:{showBcs:!0}});if(o.error)throw new Error(`error fetching PoolRewards object at id ${a}: ${o.error.code}`);if(o.data?.bcs?.dataType!=="moveObject"||!lr(o.data.bcs.type))throw new Error(`object at id ${a} is not a PoolRewards object`);return s.fromSuiObjectData(r,o.data)}};g();y();f();fe();var di=Le(Tt());import{bcs as zt}from"@mysten/sui/bcs";import{fromB64 as Wo}from"@mysten/sui/utils";function dr(s){return s=G(s),s.startsWith(`${di.PKG_V1}::pool_state::PoolState<`)}var Wt=class s{__StructClass=!0;static get $typeName(){return`${di.PKG_V1}::pool_state::PoolState`}static $numTypeParams=1;static $isPhantom=[!0];$typeName=s.$typeName;$fullTypeName;$typeArgs;$isPhantom=s.$isPhantom;tokenBalance;vusdBalance;d;a;balanceRatioMinBp;constructor(i,r){this.$fullTypeName=H(s.$typeName,...i),this.$typeArgs=i,this.tokenBalance=r.tokenBalance,this.vusdBalance=r.vusdBalance,this.d=r.d,this.a=r.a,this.balanceRatioMinBp=r.balanceRatioMinBp}static reified(i){return{typeName:s.$typeName,fullTypeName:H(s.$typeName,Z(i)),typeArgs:[Z(i)],isPhantom:s.$isPhantom,reifiedTypeArgs:[i],fromFields:r=>s.fromFields(i,r),fromFieldsWithTypes:r=>s.fromFieldsWithTypes(i,r),fromBcs:r=>s.fromBcs(i,r),bcs:s.bcs,fromJSONField:r=>s.fromJSONField(i,r),fromJSON:r=>s.fromJSON(i,r),fromSuiParsedData:r=>s.fromSuiParsedData(i,r),fromSuiObjectData:r=>s.fromSuiObjectData(i,r),fetch:async(r,a)=>s.fetch(r,i,a),new:r=>new s([Z(i)],r),kind:"StructClassReified"}}static get r(){return s.reified}static phantom(i){return oe(s.reified(i))}static get p(){return s.phantom}static get bcs(){return zt.struct("PoolState",{token_balance:zt.u64(),vusd_balance:zt.u64(),d:zt.u64(),a:zt.u64(),balance_ratio_min_bp:zt.u64()})}static fromFields(i,r){return s.reified(i).new({tokenBalance:L("u64",r.token_balance),vusdBalance:L("u64",r.vusd_balance),d:L("u64",r.d),a:L("u64",r.a),balanceRatioMinBp:L("u64",r.balance_ratio_min_bp)})}static fromFieldsWithTypes(i,r){if(!dr(r.type))throw new Error("not a PoolState type");return st(r,[i]),s.reified(i).new({tokenBalance:$("u64",r.fields.token_balance),vusdBalance:$("u64",r.fields.vusd_balance),d:$("u64",r.fields.d),a:$("u64",r.fields.a),balanceRatioMinBp:$("u64",r.fields.balance_ratio_min_bp)})}static fromBcs(i,r){return s.fromFields(i,s.bcs.parse(r))}toJSONField(){return{tokenBalance:this.tokenBalance.toString(),vusdBalance:this.vusdBalance.toString(),d:this.d.toString(),a:this.a.toString(),balanceRatioMinBp:this.balanceRatioMinBp.toString()}}toJSON(){return{$typeName:this.$typeName,$typeArgs:this.$typeArgs,...this.toJSONField()}}static fromJSONField(i,r){return s.reified(i).new({tokenBalance:J("u64",r.tokenBalance),vusdBalance:J("u64",r.vusdBalance),d:J("u64",r.d),a:J("u64",r.a),balanceRatioMinBp:J("u64",r.balanceRatioMinBp)})}static fromJSON(i,r){if(r.$typeName!==s.$typeName)throw new Error("not a WithTwoGenerics json object");return Qe(H(s.$typeName,Z(i)),r.$typeArgs,[i]),s.fromJSONField(i,r)}static fromSuiParsedData(i,r){if(r.dataType!=="moveObject")throw new Error("not an object");if(!dr(r.type))throw new Error(`object at ${r.fields.id} is not a PoolState object`);return s.fromFieldsWithTypes(i,r)}static fromSuiObjectData(i,r){if(r.bcs){if(r.bcs.dataType!=="moveObject"||!dr(r.bcs.type))throw new Error("object at is not a PoolState object");let a=be(r.bcs.type).typeArgs;if(a.length!==1)throw new Error(`type argument mismatch: expected 1 type argument but got '${a.length}'`);let o=G(a[0]),m=G(Z(i));if(o!==G(Z(i)))throw new Error(`type argument mismatch: expected '${m}' but got '${o}'`);return s.fromBcs(i,Wo(r.bcs.bcsBytes))}if(r.content)return s.fromSuiParsedData(i,r.content);throw new Error("Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.")}static async fetch(i,r,a){let o=await i.getObject({id:a,options:{showBcs:!0}});if(o.error)throw new Error(`error fetching PoolState object at id ${a}: ${o.error.code}`);if(o.data?.bcs?.dataType!=="moveObject"||!dr(o.data.bcs.type))throw new Error(`object at id ${a} is not a PoolState object`);return s.fromSuiObjectData(r,o.data)}};import{bcs as fn}from"@mysten/sui/bcs";import{fromB64 as Uo}from"@mysten/sui/utils";function pr(s){return s=G(s),s.startsWith(`${pi.PKG_V1}::pool::Pool<`)}var gr=class s{__StructClass=!0;static get $typeName(){return`${pi.PKG_V1}::pool::Pool`}static $numTypeParams=1;static $isPhantom=[!0];$typeName=s.$typeName;$fullTypeName;$typeArgs;$isPhantom=s.$isPhantom;id;state;rewards;feeShareBp;canDeposit;canWithdraw;decimals;balance;constructor(i,r){this.$fullTypeName=H(s.$typeName,...i),this.$typeArgs=i,this.id=r.id,this.state=r.state,this.rewards=r.rewards,this.feeShareBp=r.feeShareBp,this.canDeposit=r.canDeposit,this.canWithdraw=r.canWithdraw,this.decimals=r.decimals,this.balance=r.balance}static reified(i){return{typeName:s.$typeName,fullTypeName:H(s.$typeName,Z(i)),typeArgs:[Z(i)],isPhantom:s.$isPhantom,reifiedTypeArgs:[i],fromFields:r=>s.fromFields(i,r),fromFieldsWithTypes:r=>s.fromFieldsWithTypes(i,r),fromBcs:r=>s.fromBcs(i,r),bcs:s.bcs,fromJSONField:r=>s.fromJSONField(i,r),fromJSON:r=>s.fromJSON(i,r),fromSuiParsedData:r=>s.fromSuiParsedData(i,r),fromSuiObjectData:r=>s.fromSuiObjectData(i,r),fetch:async(r,a)=>s.fetch(r,i,a),new:r=>new s([Z(i)],r),kind:"StructClassReified"}}static get r(){return s.reified}static phantom(i){return oe(s.reified(i))}static get p(){return s.phantom}static get bcs(){return fn.struct("Pool",{id:$e.bcs,state:Wt.bcs,rewards:Dt.bcs,fee_share_bp:fn.u64(),can_deposit:fn.bool(),can_withdraw:fn.bool(),decimals:fn.u8(),balance:Se.bcs})}static fromFields(i,r){return s.reified(i).new({id:L($e.reified(),r.id),state:L(Wt.reified(i),r.state),rewards:L(Dt.reified(i),r.rewards),feeShareBp:L("u64",r.fee_share_bp),canDeposit:L("bool",r.can_deposit),canWithdraw:L("bool",r.can_withdraw),decimals:L("u8",r.decimals),balance:L(Se.reified(i),r.balance)})}static fromFieldsWithTypes(i,r){if(!pr(r.type))throw new Error("not a Pool type");return st(r,[i]),s.reified(i).new({id:$($e.reified(),r.fields.id),state:$(Wt.reified(i),r.fields.state),rewards:$(Dt.reified(i),r.fields.rewards),feeShareBp:$("u64",r.fields.fee_share_bp),canDeposit:$("bool",r.fields.can_deposit),canWithdraw:$("bool",r.fields.can_withdraw),decimals:$("u8",r.fields.decimals),balance:$(Se.reified(i),r.fields.balance)})}static fromBcs(i,r){return s.fromFields(i,s.bcs.parse(r))}toJSONField(){return{id:this.id,state:this.state.toJSONField(),rewards:this.rewards.toJSONField(),feeShareBp:this.feeShareBp.toString(),canDeposit:this.canDeposit,canWithdraw:this.canWithdraw,decimals:this.decimals,balance:this.balance.toJSONField()}}toJSON(){return{$typeName:this.$typeName,$typeArgs:this.$typeArgs,...this.toJSONField()}}static fromJSONField(i,r){return s.reified(i).new({id:J($e.reified(),r.id),state:J(Wt.reified(i),r.state),rewards:J(Dt.reified(i),r.rewards),feeShareBp:J("u64",r.feeShareBp),canDeposit:J("bool",r.canDeposit),canWithdraw:J("bool",r.canWithdraw),decimals:J("u8",r.decimals),balance:J(Se.reified(i),r.balance)})}static fromJSON(i,r){if(r.$typeName!==s.$typeName)throw new Error("not a WithTwoGenerics json object");return Qe(H(s.$typeName,Z(i)),r.$typeArgs,[i]),s.fromJSONField(i,r)}static fromSuiParsedData(i,r){if(r.dataType!=="moveObject")throw new Error("not an object");if(!pr(r.type))throw new Error(`object at ${r.fields.id} is not a Pool object`);return s.fromFieldsWithTypes(i,r)}static fromSuiObjectData(i,r){if(r.bcs){if(r.bcs.dataType!=="moveObject"||!pr(r.bcs.type))throw new Error("object at is not a Pool object");let a=be(r.bcs.type).typeArgs;if(a.length!==1)throw new Error(`type argument mismatch: expected 1 type argument but got '${a.length}'`);let o=G(a[0]),m=G(Z(i));if(o!==G(Z(i)))throw new Error(`type argument mismatch: expected '${m}' but got '${o}'`);return s.fromBcs(i,Uo(r.bcs.bcsBytes))}if(r.content)return s.fromSuiParsedData(i,r.content);throw new Error("Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.")}static async fetch(i,r,a){let o=await i.getObject({id:a,options:{showBcs:!0}});if(o.error)throw new Error(`error fetching Pool object at id ${a}: ${o.error.code}`);if(o.data?.bcs?.dataType!=="moveObject"||!pr(o.data.bcs.type))throw new Error(`object at id ${a} is not a Pool object`);return s.fromSuiObjectData(r,o.data)}};g();y();f();fe();var fi=Le(Tt());import{bcs as gi}from"@mysten/sui/bcs";import{fromB64 as Eo}from"@mysten/sui/utils";function fr(s){return s=G(s),s.startsWith(`${fi.PKG_V1}::user_deposit::UserDeposit<`)}var yr=class s{__StructClass=!0;static get $typeName(){return`${fi.PKG_V1}::user_deposit::UserDeposit`}static $numTypeParams=1;static $isPhantom=[!0];$typeName=s.$typeName;$fullTypeName;$typeArgs;$isPhantom=s.$isPhantom;id;lpAmount;rewardDebt;constructor(i,r){this.$fullTypeName=H(s.$typeName,...i),this.$typeArgs=i,this.id=r.id,this.lpAmount=r.lpAmount,this.rewardDebt=r.rewardDebt}static reified(i){return{typeName:s.$typeName,fullTypeName:H(s.$typeName,Z(i)),typeArgs:[Z(i)],isPhantom:s.$isPhantom,reifiedTypeArgs:[i],fromFields:r=>s.fromFields(i,r),fromFieldsWithTypes:r=>s.fromFieldsWithTypes(i,r),fromBcs:r=>s.fromBcs(i,r),bcs:s.bcs,fromJSONField:r=>s.fromJSONField(i,r),fromJSON:r=>s.fromJSON(i,r),fromSuiParsedData:r=>s.fromSuiParsedData(i,r),fromSuiObjectData:r=>s.fromSuiObjectData(i,r),fetch:async(r,a)=>s.fetch(r,i,a),new:r=>new s([Z(i)],r),kind:"StructClassReified"}}static get r(){return s.reified}static phantom(i){return oe(s.reified(i))}static get p(){return s.phantom}static get bcs(){return gi.struct("UserDeposit",{id:$e.bcs,lp_amount:gi.u64(),reward_debt:gi.u64()})}static fromFields(i,r){return s.reified(i).new({id:L($e.reified(),r.id),lpAmount:L("u64",r.lp_amount),rewardDebt:L("u64",r.reward_debt)})}static fromFieldsWithTypes(i,r){if(!fr(r.type))throw new Error("not a UserDeposit type");return st(r,[i]),s.reified(i).new({id:$($e.reified(),r.fields.id),lpAmount:$("u64",r.fields.lp_amount),rewardDebt:$("u64",r.fields.reward_debt)})}static fromBcs(i,r){return s.fromFields(i,s.bcs.parse(r))}toJSONField(){return{id:this.id,lpAmount:this.lpAmount.toString(),rewardDebt:this.rewardDebt.toString()}}toJSON(){return{$typeName:this.$typeName,$typeArgs:this.$typeArgs,...this.toJSONField()}}static fromJSONField(i,r){return s.reified(i).new({id:J($e.reified(),r.id),lpAmount:J("u64",r.lpAmount),rewardDebt:J("u64",r.rewardDebt)})}static fromJSON(i,r){if(r.$typeName!==s.$typeName)throw new Error("not a WithTwoGenerics json object");return Qe(H(s.$typeName,Z(i)),r.$typeArgs,[i]),s.fromJSONField(i,r)}static fromSuiParsedData(i,r){if(r.dataType!=="moveObject")throw new Error("not an object");if(!fr(r.type))throw new Error(`object at ${r.fields.id} is not a UserDeposit object`);return s.fromFieldsWithTypes(i,r)}static fromSuiObjectData(i,r){if(r.bcs){if(r.bcs.dataType!=="moveObject"||!fr(r.bcs.type))throw new Error("object at is not a UserDeposit object");let a=be(r.bcs.type).typeArgs;if(a.length!==1)throw new Error(`type argument mismatch: expected 1 type argument but got '${a.length}'`);let o=G(a[0]),m=G(Z(i));if(o!==G(Z(i)))throw new Error(`type argument mismatch: expected '${m}' but got '${o}'`);return s.fromBcs(i,Eo(r.bcs.bcsBytes))}if(r.content)return s.fromSuiParsedData(i,r.content);throw new Error("Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.")}static async fetch(i,r,a){let o=await i.getObject({id:a,options:{showBcs:!0}});if(o.error)throw new Error(`error fetching UserDeposit object at id ${a}: ${o.error.code}`);if(o.data?.bcs?.dataType!=="moveObject"||!fr(o.data.bcs.type))throw new Error(`object at id ${a} is not a UserDeposit object`);return s.fromSuiObjectData(r,o.data)}};g();y();f();function Ya(s,i,r){if(i.length===0||!i[0])return[];let a=i[0],o=s.reduce((p,h)=>p+BigInt(h),BigInt(0)),m=BigInt(a.balance),u=[];for(let p of i.slice(1)){if(m>o)return Xa(r,a,u,s);m+=BigInt(p.balance),u.push(p)}return m>=o?Xa(r,a,u,s):[]}function Xa(s,i,r,a){let o=a.map(m=>s.pure.u64(m));return r.length>0&&s.mergeCoins(i.coinObjectId,r.map(m=>m.coinObjectId)),s.splitCoins(i.coinObjectId,o)}g();y();f();var Go="0x0000000000000000000000000000000000000000000000000000000000000000";async function Ka(s,i,r){let a=await s.devInspectTransactionBlock({sender:Go,transactionBlock:i});if(a.effects.status.status!=="success")throw new Error(`inspectionResult failed. ${JSON.stringify(a,null,2)}`);let o=a.results?.pop()?.returnValues?.pop();if(!o)throw new Error(`Something with inspectionResult went wrong. ${JSON.stringify(a,null,2)}`);let[m,u]=o;return typeof r=="object"?r.fromBcs(Uint8Array.from(m)).toJSONField():dn(r).parse(Uint8Array.from(m))}var Tr=class extends We{constructor(r,a){super();this.suiRpcUrl=r;this.api=a;this.client=new Vo({url:r})}chainType="SUI";client;async getUserBalanceInfo(r,a){if(!a.originTokenAddress)throw new O("SUI token must contain 'originTokenAddress'");let o=a.suiAddresses;if(!o)throw new O("SUI token must contain 'suiAddresses'");(0,qt.setAddress)(o.bridgeAddress,o.bridgeAddressOrigin);let u=(await this.fetchDeposits(r,a.originTokenAddress)).reduce((p,h)=>{if(h.data)return p.lpAmount+=BigInt(h.data.content.fields.lp_amount),p.rewardDebt+=BigInt(h.data.content.fields.reward_debt),p;throw new O("Deposits fetch failed")},{lpAmount:BigInt(0),rewardDebt:BigInt(0)});return new ve({lpAmount:u.lpAmount.toString(),rewardDebt:u.rewardDebt.toString()})}async fetchDeposits(r,a){return await ot(o=>this.client.getOwnedObjects({owner:r,filter:{StructType:yr.phantom(oe(a)).phantomType},options:{showContent:!0},cursor:o}))}async getPoolInfoFromChain(r){let a=r.suiAddresses;if(!a)throw new O("SUI token must contain 'suiAddresses'");if((0,qt.setAddress)(a.bridgeAddress,a.bridgeAddressOrigin),!r.originTokenAddress)throw new O("SUI token must contain 'originTokenAddress'");let o=48,m=new hr;xa(m,r.originTokenAddress,a.bridgeObjectAddress);let u=await Ka(this.client,m,gr.reified(oe(r.originTokenAddress))),p=u.state.tokenBalance,h=u.state.vusdBalance,b=Ie({tokenBalance:p,vUsdBalance:h});return{dValue:u.state.d,aValue:u.state.a,totalLpAmount:u.rewards.lpSupply,vUsdBalance:h,tokenBalance:p,accRewardPerShareP:u.rewards.accRewardPerShareP,p:o,imbalance:b}}async buildRawTransactionDeposit(r){let a=r.token.suiAddresses;if(!a)throw new O("SUI token must contain 'suiAddresses'");if((0,qt.setAddress)(a.bridgeAddress,a.bridgeAddressOrigin),!r.token.originTokenAddress)throw new O("SUI token must contain 'originTokenAddress'");let o=await ot(C=>this.client.getCoins({owner:r.accountAddress,coinType:r.token.originTokenAddress,cursor:C}));if(o.length===0||!o[0])throw new ct("No coins to deposit");let m=o[0],u=new hr;u.setSender(r.accountAddress);let{depositObj:p,isNewDeposit:h}=await this.getDepositObject(r.accountAddress,r.token.originTokenAddress,u),[b]=Ya([r.amount],o,u);if(!b)throw new ct("No coins to deposit");if(!r.token.originTokenAddress)throw new O("SUI token must contain 'originTokenAddress'");let S=Ra(u,r.token.originTokenAddress,{bridge:a.bridgeObjectAddress,userDeposit:p,coin:b});return u.mergeCoins(m.coinObjectId,[S]),h&&u.transferObjects([p],r.accountAddress),await u.toJSON({client:this.client})}async getDepositObject(r,a,o){let m=await this.fetchDeposits(r,a);if(m.length===0||!m[0]){let u=oe(a).phantomType;return{depositObj:Fa(o,u),isNewDeposit:!0}}else{if(m[0].data?.objectId)return{depositObj:m[0].data.objectId,isNewDeposit:!1};throw new O("Something went wrong while deposit")}}async buildRawTransactionWithdraw(r){let a=r.token.suiAddresses;if(!a)throw new O("SUI token must contain 'suiAddresses'");if((0,qt.setAddress)(a.bridgeAddress,a.bridgeAddressOrigin),!r.token.originTokenAddress)throw new O("SUI token must contain 'originTokenAddress'");let o=oe(r.token.originTokenAddress).phantomType,m=new hr;m.setSender(r.accountAddress);let{depositObj:u,isNewDeposit:p}=await this.getDepositObject(r.accountAddress,r.token.originTokenAddress,m);if(p)throw new ct("No deposit found");let h=va(m,o,{bridge:a.bridgeObjectAddress,userDeposit:u,amountLp:BigInt(r.amount)}),b=await ot(S=>this.client.getCoins({owner:r.accountAddress,coinType:r.token.originTokenAddress,cursor:S}));if(!h[0]||!h[1])throw new O("No rewards found");return b[0]?m.mergeCoins(b[0].coinObjectId,[h[0],h[1]]):(m.mergeCoins(h[0],[h[1]]),m.transferObjects([h[0]],r.accountAddress)),await m.toJSON({client:this.client})}async buildRawTransactionClaimRewards(r){let a=r.token.suiAddresses;if(!a)throw new O("SUI token must contain 'suiAddresses'");if((0,qt.setAddress)(a.bridgeAddress,a.bridgeAddressOrigin),!r.token.originTokenAddress)throw new O("SUI token must contain 'originTokenAddress'");let o=oe(r.token.originTokenAddress).phantomType,m=new hr;m.setSender(r.accountAddress);let{depositObj:u,isNewDeposit:p}=await this.getDepositObject(r.accountAddress,r.token.originTokenAddress,m);if(p)throw new ct("No deposit found");let h=ka(m,o,{bridge:a.bridgeObjectAddress,userDeposit:u}),b=await ot(S=>this.client.getCoins({owner:r.accountAddress,coinType:r.token.originTokenAddress,cursor:S}));return b[0]?m.mergeCoins(b[0].coinObjectId,[h]):m.transferObjects([h],r.accountAddress),await m.toJSON({client:this.client})}};g();y();f();import{Web3 as pt}from"web3";var yn=class extends We{constructor(r,a,o){super();this.tronWeb=r;this.api=a;o&&(this.web3=new pt(o))}chainType="TRX";P=52;web3;async getUserBalanceInfo(r,a){let o;if(this.web3)try{o=await this.getUserBalanceInfoByBatch(this.web3,r,a)}catch{o=await this.getUserBalanceInfoPerProperty(r,a)}else o=await this.getUserBalanceInfoPerProperty(r,a);return o}async getUserBalanceInfoByBatch(r,a,o){let m=new r.BatchRequest,u=new r.eth.Contract(Yt.abi,En(o.poolAddress)),p=u.methods.userRewardDebt(a).encodeABI(),h=u.methods.balanceOf(a).encodeABI();m.add({method:"eth_call",params:[{to:o.poolAddress,data:p},"latest"]}),m.add({method:"eth_call",params:[{to:o.poolAddress,data:h},"latest"]});let[b,S]=await m.execute();if(b&&S&&!b.error&&!S.error)return new ve({lpAmount:pt.utils.toBigInt(S.result).toString(),rewardDebt:pt.utils.toBigInt(b.result).toString()});throw new Error("Batched failed")}async getUserBalanceInfoPerProperty(r,a){this.tronWeb.defaultAddress.base58||this.tronWeb.setAddress(r);let o=this.getContract(a.poolAddress),m=(await o.methods.userRewardDebt(r).call()).toString(),u=(await o.methods.balanceOf(r).call()).toString();return new ve({lpAmount:u,rewardDebt:m})}async getPoolInfoFromChain(r){let a;if(this.web3)try{a=await this.getPoolInfoByBatch(this.web3,r)}catch{a=await this.getPoolInfoPerProperty(r)}else a=await this.getPoolInfoPerProperty(r);return a}async getPoolInfoByBatch(r,a){let o=new r.BatchRequest,m=new r.eth.Contract(Yt.abi,En(a.poolAddress),this.web3),u=m.methods.a().encodeABI(),p=m.methods.d().encodeABI(),h=m.methods.tokenBalance().encodeABI(),b=m.methods.vUsdBalance().encodeABI(),S=m.methods.totalSupply().encodeABI(),C=m.methods.accRewardPerShareP().encodeABI();o.add({method:"eth_call",params:[{to:a.poolAddress,data:u},"latest"]}),o.add({method:"eth_call",params:[{to:a.poolAddress,data:p},"latest"]}),o.add({method:"eth_call",params:[{to:a.poolAddress,data:h},"latest"]}),o.add({method:"eth_call",params:[{to:a.poolAddress,data:b},"latest"]}),o.add({method:"eth_call",params:[{to:a.poolAddress,data:S},"latest"]}),o.add({method:"eth_call",params:[{to:a.poolAddress,data:C},"latest"]});let[x,B,v,M,F,W]=await o.execute();if(x&&B&&v&&M&&F&&W&&!x.error&&!B.error&&!v.error&&!M.error&&!F.error&&!W.error){let D=pt.utils.toBigInt(v.result).toString(),U=pt.utils.toBigInt(M.result).toString(),K=Ie({tokenBalance:D,vUsdBalance:U});return{aValue:pt.utils.toBigInt(x.result).toString(),dValue:pt.utils.toBigInt(B.result).toString(),tokenBalance:D,vUsdBalance:U,totalLpAmount:pt.utils.toBigInt(F.result).toString(),accRewardPerShareP:pt.utils.toBigInt(W.result).toString(),p:this.P,imbalance:K}}throw new Error("Batched failed")}async getPoolInfoPerProperty(r){this.tronWeb.defaultAddress.base58||this.tronWeb.setAddress(r.poolAddress);let a=this.getContract(r.poolAddress),[o,m,u,p,h,b]=await Promise.all([a.methods.a().call(),a.methods.d().call(),a.methods.tokenBalance().call(),a.methods.vUsdBalance().call(),a.methods.totalSupply().call(),a.methods.accRewardPerShareP().call()]),S=u.toString(),C=p.toString(),x=Ie({tokenBalance:S,vUsdBalance:C});return{aValue:o.toString(),dValue:m.toString(),tokenBalance:S,vUsdBalance:C,totalLpAmount:h.toString(),accRewardPerShareP:b.toString(),p:this.P,imbalance:x}}buildRawTransactionDeposit(r){let{amount:a,accountAddress:o}=r,m=[{type:"uint256",value:a}];return this.buildRawTransaction(r.token.poolAddress,"deposit(uint256)",m,"0",o)}buildRawTransactionWithdraw(r){let{amount:a,accountAddress:o}=r,m=[{type:"uint256",value:a}];return this.buildRawTransaction(r.token.poolAddress,"withdraw(uint256)",m,"0",o)}buildRawTransactionClaimRewards(r){let{accountAddress:a}=r,o=[];return this.buildRawTransaction(r.token.poolAddress,"claimRewards()",o,"0",a)}async buildRawTransaction(r,a,o,m,u){let p=await this.tronWeb.transactionBuilder.triggerSmartContract(r,a,{callValue:+m},o,u);if(!p?.result?.result)throw new O("Unknown error: "+JSON.stringify(p,null,2));return p.transaction}getContract(r){return this.tronWeb.contract(Yt.abi,r)}};var br=class{constructor(i,r,a,o){this.api=i;this.nodeRpcUrlsConfig=r;this.params=a;this.tokenService=o;this.rawTxBuilder=new sr(i,r,this.params,o);let m=a.cachePoolInfoChainSec>0?a.cachePoolInfoChainSec*1e3:20*1e3;this.cache=new Zo({defaultTtl:m})}rawTxBuilder;cache;async getAllowance(i,r){if(r){let a=i,o=r;return await this.tokenService.getAllowance({...o,spender:o.token.poolAddress},a)}else{let a=i;return await this.tokenService.getAllowance({...a,spender:a.token.poolAddress})}}async checkAllowance(i,r){if(r){let a=i,o=r;return this.tokenService.checkAllowance({...o,spender:o.token.poolAddress},a)}else{let a=i;return this.tokenService.checkAllowance({...a,spender:a.token.poolAddress})}}async approve(i,r){return this.tokenService.approve(i,{...r,spender:r.token.poolAddress})}async getAmountToBeDeposited(i,r,a){ee(i),ne("amount",i,r.decimals);let o=await this.getPoolInfoFromChain(r,a),{vUsdBalance:m,tokenBalance:u,aValue:p,dValue:h}=o,b=Za(i,p,h,u,m);return Y(b,3).toFixed()}async getAmountToBeWithdrawn(i,r,a,o){ee(i),ne("amount",i,a.decimals);let m=await this.getPoolInfoFromChain(a,o),u=_a(i),p=Ne(u,a.decimals),b=(await this.getUserBalanceInfo(r,a,o)).earned(m)||"0",S=jo(p).plus(b).toFixed();return Y(S,a.decimals).toFixed()}async getUserBalanceInfo(i,r,a){return Kt(r.chainSymbol,this.api,this.nodeRpcUrlsConfig,this.params,a).getUserBalanceInfo(i,r)}async getPoolInfoFromChain(i,r){let a={chainSymbol:i.chainSymbol,poolAddress:i.poolAddress},o=this.cache.get(a);if(o)return o;{let m=await Kt(i.chainSymbol,this.api,this.nodeRpcUrlsConfig,this.params,r).getPoolInfoFromChain(i);return this.cache.put(a,m),this.api.cachePut({chainSymbol:i.chainSymbol,poolAddress:i.poolAddress},m),m}}};function Kt(s,i,r,a,o){switch(Q.getChainProperty(s).chainType){case"EVM":{if(o)return new gn(o,i);{let m=r.getNodeRpcUrl(s),u=new Lo(m);return u.defaultReturnFormat={number:Jo.STR,bytes:$o.HEX},new gn(u,i)}}case"TRX":{let m=r.getNodeRpcUrl(s),u=a.tronJsonRpc;if(o)return new yn(o,i,u);{let p=new _o({fullHost:m});return new yn(p,i,u)}}case"SOLANA":{let m=r.getNodeRpcUrl(s);return new or(m,i)}case"SRB":return new Ar(r,a,i);case"SUI":return new Tr(r.getNodeRpcUrl(s),i)}}g();y();f();g();y();f();import{Big as ue}from"big.js";function za(s,i,r){let a=Xo(s,{decimals:i.decimals,feeShare:i.feeShare},i.poolInfo),o=Yo(a.amountIncludingCommissionInSystemPrecision,{decimals:r.decimals,feeShare:r.feeShare},r.poolInfo);return{swapToVUsdCalcResult:a,swapFromVUsdCalcResult:o}}function qa(s,i,r){let a=Ko(s,{decimals:r.decimals,feeShare:r.feeShare},r.poolInfo),o=Ho(a.amountIncludingCommissionInSystemPrecision,{decimals:i.decimals,feeShare:i.feeShare},i.poolInfo);return{swapToVUsdCalcResult:a,swapFromVUsdCalcResult:o}}function Xo(s,{feeShare:i,decimals:r},a){let o=ue(s),m=o.times(i),u=o.minus(m);return{bridgeFeeInTokenPrecision:m.round().toFixed(),amountIncludingCommissionInSystemPrecision:Ha(kt(u,r),a),amountExcludingCommissionInSystemPrecision:Ha(kt(o,r),a)}}function Ha(s,i){if(s.eq(0))return"0";let r=ue(i.tokenBalance).plus(s),a=nt(r.toFixed(),i.aValue,i.dValue);return ue(i.vUsdBalance).minus(a).round().toFixed()}function Yo(s,{feeShare:i,decimals:r},a){if(ue(s).eq(0))return{bridgeFeeInTokenPrecision:"0",amountIncludingCommissionInTokenPrecision:"0",amountExcludingCommissionInTokenPrecision:"0"};let m=ue(s).plus(a.vUsdBalance),u=nt(m,a.aValue,a.dValue),p=Ne(ue(a.tokenBalance).minus(u),r),h=ue(p).times(i),b=ue(p).minus(h).round();return{bridgeFeeInTokenPrecision:h.round().toFixed(),amountIncludingCommissionInTokenPrecision:b.toFixed(),amountExcludingCommissionInTokenPrecision:p.toFixed()}}function Ko(s,{feeShare:i,decimals:r},a){let o=ue(i).div(ue(1).minus(i)),m=ue(s).times(o),u=ue(s).plus(m);return{bridgeFeeInTokenPrecision:m.round().toFixed(),amountIncludingCommissionInSystemPrecision:Qa(kt(u,r),a),amountExcludingCommissionInSystemPrecision:Qa(kt(s,r),a)}}function Qa(s,i){let r=ue(i.tokenBalance).minus(s),a=nt(r.toFixed(),i.aValue,i.dValue);return ue(a).minus(i.vUsdBalance).round().toFixed()}function Ho(s,{feeShare:i,decimals:r},a){if(ue(s).eq(0))return{bridgeFeeInTokenPrecision:"0",amountIncludingCommissionInTokenPrecision:"0",amountExcludingCommissionInTokenPrecision:"0"};let o=ue(a.vUsdBalance).minus(s),m=nt(o.toFixed(),a.aValue,a.dValue),u=ue(m).minus(a.tokenBalance),p=Ne(u.toFixed(),r),h=ue(i).div(ue(1).minus(i)),b=ue(p).times(h),S=ue(p).plus(b);return{bridgeFeeInTokenPrecision:b.round().toFixed(),amountIncludingCommissionInTokenPrecision:S.round().toFixed(),amountExcludingCommissionInTokenPrecision:p.toFixed()}}g();y();f();import{Big as Ct}from"big.js";function es(s,i,r,a,o){let m=tt(s,i,r),u=Ne(m,i.decimals),p=on(m,a,o),h=Ct(s).times(i.feeShare),b=Ct(p).div(Ct(1).minus(a.feeShare)).minus(p);return{sourceLPSwap:{fee:Y(h,i.decimals).neg().round(i.decimals,Ct.roundUp).toFixed(),swap:Y(Ct(s).minus(u).minus(h),i.decimals).neg().round(i.decimals,Ct.roundUp).toFixed()},destLPSwap:{fee:Y(b,a.decimals).neg().round(a.decimals,Ct.roundUp).toFixed(),swap:Y(Ne(m,a.decimals).minus(p).minus(b),a.decimals).neg().round(a.decimals,Ct.roundUp).toFixed()}}}g();y();f();g();y();f();g();y();f();import{Connection as Qo,PublicKey as zo,TransactionMessage as qo}from"@solana/web3.js";var Sr=class{constructor(i,r){this.nodeRpcUrlsConfig=i;this.params=r}async addMemoToTx(i,r){if(r.length>28)throw new O("InvalidArgumentException memo cannot be more than 28 characters");let a=new Qo(this.nodeRpcUrlsConfig.getNodeRpcUrl("SOL"),"confirmed"),o=await Mt(i,a),m=qo.decompile(i.message,{addressLookupTableAccounts:o}),u=m.instructions[m.instructions.length-1];if(!u?.keys)throw new O("Last instruction or its keys are invalid.");u.keys.push({pubkey:new zo(w.from(r)),isSigner:!1,isWritable:!1}),i.message=m.compileToV0Message(o)}};g();y();f();import{Asset as nc,BASE_FEE as rc,contract as HR,Horizon as ts,Operation as ic,Operation as ac,rpc as Tn,TimeoutInfinite as sc,TransactionBuilder as yi,TransactionBuilder as ns}from"@stellar/stellar-sdk";g();y();f();import{contract as e}from"@stellar/stellar-sdk";var ec=e.Spec,tc=e.Client;var hn=class extends tc{constructor(r){super(new ec(["AAAAAAAAAYlSZXR1cm5zIHRoZSBhbGxvd2FuY2UgZm9yIGBzcGVuZGVyYCB0byB0cmFuc2ZlciBmcm9tIGBmcm9tYC4KClRoZSBhbW91bnQgcmV0dXJuZWQgaXMgdGhlIGFtb3VudCB0aGF0IHNwZW5kZXIgaXMgYWxsb3dlZCB0byB0cmFuc2ZlcgpvdXQgb2YgZnJvbSdzIGJhbGFuY2UuIFdoZW4gdGhlIHNwZW5kZXIgdHJhbnNmZXJzIGFtb3VudHMsIHRoZSBhbGxvd2FuY2UKd2lsbCBiZSByZWR1Y2VkIGJ5IHRoZSBhbW91bnQgdHJhbnNmZXJlZC4KCiMgQXJndW1lbnRzCgoqIGBmcm9tYCAtIFRoZSBhZGRyZXNzIGhvbGRpbmcgdGhlIGJhbGFuY2Ugb2YgdG9rZW5zIHRvIGJlIGRyYXduIGZyb20uCiogYHNwZW5kZXJgIC0gVGhlIGFkZHJlc3Mgc3BlbmRpbmcgdGhlIHRva2VucyBoZWxkIGJ5IGBmcm9tYC4AAAAAAAAJYWxsb3dhbmNlAAAAAAAAAgAAAAAAAAAEZnJvbQAAABMAAAAAAAAAB3NwZW5kZXIAAAAAEwAAAAEAAAAL","AAAAAAAAAIlSZXR1cm5zIHRydWUgaWYgYGlkYCBpcyBhdXRob3JpemVkIHRvIHVzZSBpdHMgYmFsYW5jZS4KCiMgQXJndW1lbnRzCgoqIGBpZGAgLSBUaGUgYWRkcmVzcyBmb3Igd2hpY2ggdG9rZW4gYXV0aG9yaXphdGlvbiBpcyBiZWluZyBjaGVja2VkLgAAAAAAAAphdXRob3JpemVkAAAAAAABAAAAAAAAAAJpZAAAAAAAEwAAAAEAAAAB","AAAAAAAAA55TZXQgdGhlIGFsbG93YW5jZSBieSBgYW1vdW50YCBmb3IgYHNwZW5kZXJgIHRvIHRyYW5zZmVyL2J1cm4gZnJvbQpgZnJvbWAuCgpUaGUgYW1vdW50IHNldCBpcyB0aGUgYW1vdW50IHRoYXQgc3BlbmRlciBpcyBhcHByb3ZlZCB0byB0cmFuc2ZlciBvdXQgb2YKZnJvbSdzIGJhbGFuY2UuIFRoZSBzcGVuZGVyIHdpbGwgYmUgYWxsb3dlZCB0byB0cmFuc2ZlciBhbW91bnRzLCBhbmQKd2hlbiBhbiBhbW91bnQgaXMgdHJhbnNmZXJyZWQgdGhlIGFsbG93YW5jZSB3aWxsIGJlIHJlZHVjZWQgYnkgdGhlCmFtb3VudCB0cmFuc2ZlcmVkLgoKIyBBcmd1bWVudHMKCiogYGZyb21gIC0gVGhlIGFkZHJlc3MgaG9sZGluZyB0aGUgYmFsYW5jZSBvZiB0b2tlbnMgdG8gYmUgZHJhd24gZnJvbS4KKiBgc3BlbmRlcmAgLSBUaGUgYWRkcmVzcyBiZWluZyBhdXRob3JpemVkIHRvIHNwZW5kIHRoZSB0b2tlbnMgaGVsZCBieQpgZnJvbWAuCiogYGFtb3VudGAgLSBUaGUgdG9rZW5zIHRvIGJlIG1hZGUgYXZhaWxhYmxlIHRvIGBzcGVuZGVyYC4KKiBgZXhwaXJhdGlvbl9sZWRnZXJgIC0gVGhlIGxlZGdlciBudW1iZXIgd2hlcmUgdGhpcyBhbGxvd2FuY2UgZXhwaXJlcy4gQ2Fubm90CmJlIGxlc3MgdGhhbiB0aGUgY3VycmVudCBsZWRnZXIgbnVtYmVyIHVubGVzcyB0aGUgYW1vdW50IGlzIGJlaW5nIHNldCB0byAwLgpBbiBleHBpcmVkIGVudHJ5ICh3aGVyZSBleHBpcmF0aW9uX2xlZGdlciA8IHRoZSBjdXJyZW50IGxlZGdlciBudW1iZXIpCnNob3VsZCBiZSB0cmVhdGVkIGFzIGEgMCBhbW91bnQgYWxsb3dhbmNlLgoKIyBFdmVudHMKCkVtaXRzIGFuIGV2ZW50IHdpdGggdG9waWNzIGBbImFwcHJvdmUiLCBmcm9tOiBBZGRyZXNzLApzcGVuZGVyOiBBZGRyZXNzXSwgZGF0YSA9IFthbW91bnQ6IGkxMjgsIGV4cGlyYXRpb25fbGVkZ2VyOiB1MzJdYAAAAAAAB2FwcHJvdmUAAAAABAAAAAAAAAAEZnJvbQAAABMAAAAAAAAAB3NwZW5kZXIAAAAAEwAAAAAAAAAGYW1vdW50AAAAAAALAAAAAAAAABFleHBpcmF0aW9uX2xlZGdlcgAAAAAAAAQAAAAA","AAAAAAAAAJhSZXR1cm5zIHRoZSBiYWxhbmNlIG9mIGBpZGAuCgojIEFyZ3VtZW50cwoKKiBgaWRgIC0gVGhlIGFkZHJlc3MgZm9yIHdoaWNoIGEgYmFsYW5jZSBpcyBiZWluZyBxdWVyaWVkLiBJZiB0aGUKYWRkcmVzcyBoYXMgbm8gZXhpc3RpbmcgYmFsYW5jZSwgcmV0dXJucyAwLgAAAAdiYWxhbmNlAAAAAAEAAAAAAAAAAmlkAAAAAAATAAAAAQAAAAs=","AAAAAAAAAWRCdXJuIGBhbW91bnRgIGZyb20gYGZyb21gLgoKUmVkdWNlcyBmcm9tJ3MgYmFsYW5jZSBieSB0aGUgYW1vdW50LCB3aXRob3V0IHRyYW5zZmVycmluZyB0aGUgYmFsYW5jZQp0byBhbm90aGVyIGhvbGRlcidzIGJhbGFuY2UuCgojIEFyZ3VtZW50cwoKKiBgZnJvbWAgLSBUaGUgYWRkcmVzcyBob2xkaW5nIHRoZSBiYWxhbmNlIG9mIHRva2VucyB3aGljaCB3aWxsIGJlCmJ1cm5lZCBmcm9tLgoqIGBhbW91bnRgIC0gVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgYnVybmVkLgoKIyBFdmVudHMKCkVtaXRzIGFuIGV2ZW50IHdpdGggdG9waWNzIGBbImJ1cm4iLCBmcm9tOiBBZGRyZXNzXSwgZGF0YSA9IFthbW91bnQ6CmkxMjhdYAAAAARidXJuAAAAAgAAAAAAAAAEZnJvbQAAABMAAAAAAAAABmFtb3VudAAAAAAACwAAAAA=","AAAAAAAAAtxCdXJuIGBhbW91bnRgIGZyb20gYGZyb21gLCBjb25zdW1pbmcgdGhlIGFsbG93YW5jZSBvZiBgc3BlbmRlcmAuCgpSZWR1Y2VzIGZyb20ncyBiYWxhbmNlIGJ5IHRoZSBhbW91bnQsIHdpdGhvdXQgdHJhbnNmZXJyaW5nIHRoZSBiYWxhbmNlCnRvIGFub3RoZXIgaG9sZGVyJ3MgYmFsYW5jZS4KClRoZSBzcGVuZGVyIHdpbGwgYmUgYWxsb3dlZCB0byBidXJuIHRoZSBhbW91bnQgZnJvbSBmcm9tJ3MgYmFsYW5jZSwgaWYKdGhlIGFtb3VudCBpcyBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdGhlIGFsbG93YW5jZSB0aGF0IHRoZSBzcGVuZGVyIGhhcwpvbiB0aGUgZnJvbSdzIGJhbGFuY2UuIFRoZSBzcGVuZGVyJ3MgYWxsb3dhbmNlIG9uIGZyb20ncyBiYWxhbmNlIHdpbGwgYmUKcmVkdWNlZCBieSB0aGUgYW1vdW50LgoKIyBBcmd1bWVudHMKCiogYHNwZW5kZXJgIC0gVGhlIGFkZHJlc3MgYXV0aG9yaXppbmcgdGhlIGJ1cm4sIGFuZCBoYXZpbmcgaXRzIGFsbG93YW5jZQpjb25zdW1lZCBkdXJpbmcgdGhlIGJ1cm4uCiogYGZyb21gIC0gVGhlIGFkZHJlc3MgaG9sZGluZyB0aGUgYmFsYW5jZSBvZiB0b2tlbnMgd2hpY2ggd2lsbCBiZQpidXJuZWQgZnJvbS4KKiBgYW1vdW50YCAtIFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJlIGJ1cm5lZC4KCiMgRXZlbnRzCgpFbWl0cyBhbiBldmVudCB3aXRoIHRvcGljcyBgWyJidXJuIiwgZnJvbTogQWRkcmVzc10sIGRhdGEgPSBbYW1vdW50OgppMTI4XWAAAAAJYnVybl9mcm9tAAAAAAAAAwAAAAAAAAAHc3BlbmRlcgAAAAATAAAAAAAAAARmcm9tAAAAEwAAAAAAAAAGYW1vdW50AAAAAAALAAAAAA==","AAAAAAAAAVNDbGF3YmFjayBgYW1vdW50YCBmcm9tIGBmcm9tYCBhY2NvdW50LiBgYW1vdW50YCBpcyBidXJuZWQgaW4gdGhlCmNsYXdiYWNrIHByb2Nlc3MuCgojIEFyZ3VtZW50cwoKKiBgZnJvbWAgLSBUaGUgYWRkcmVzcyBob2xkaW5nIHRoZSBiYWxhbmNlIGZyb20gd2hpY2ggdGhlIGNsYXdiYWNrIHdpbGwKdGFrZSB0b2tlbnMuCiogYGFtb3VudGAgLSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSBjbGF3ZWQgYmFjay4KCiMgRXZlbnRzCgpFbWl0cyBhbiBldmVudCB3aXRoIHRvcGljcyBgWyJjbGF3YmFjayIsIGFkbWluOiBBZGRyZXNzLCB0bzogQWRkcmVzc10sCmRhdGEgPSBbYW1vdW50OiBpMTI4XWAAAAAACGNsYXdiYWNrAAAAAgAAAAAAAAAEZnJvbQAAABMAAAAAAAAABmFtb3VudAAAAAAACwAAAAA=","AAAAAAAAAIBSZXR1cm5zIHRoZSBudW1iZXIgb2YgZGVjaW1hbHMgdXNlZCB0byByZXByZXNlbnQgYW1vdW50cyBvZiB0aGlzIHRva2VuLgoKIyBQYW5pY3MKCklmIHRoZSBjb250cmFjdCBoYXMgbm90IHlldCBiZWVuIGluaXRpYWxpemVkLgAAAAhkZWNpbWFscwAAAAAAAAABAAAABA==","AAAAAAAAAPVNaW50cyBgYW1vdW50YCB0byBgdG9gLgoKIyBBcmd1bWVudHMKCiogYHRvYCAtIFRoZSBhZGRyZXNzIHdoaWNoIHdpbGwgcmVjZWl2ZSB0aGUgbWludGVkIHRva2Vucy4KKiBgYW1vdW50YCAtIFRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGJlIG1pbnRlZC4KCiMgRXZlbnRzCgpFbWl0cyBhbiBldmVudCB3aXRoIHRvcGljcyBgWyJtaW50IiwgYWRtaW46IEFkZHJlc3MsIHRvOiBBZGRyZXNzXSwgZGF0YQo9IFthbW91bnQ6IGkxMjhdYAAAAAAAAARtaW50AAAAAgAAAAAAAAACdG8AAAAAABMAAAAAAAAABmFtb3VudAAAAAAACwAAAAA=","AAAAAAAAAFlSZXR1cm5zIHRoZSBuYW1lIGZvciB0aGlzIHRva2VuLgoKIyBQYW5pY3MKCklmIHRoZSBjb250cmFjdCBoYXMgbm90IHlldCBiZWVuIGluaXRpYWxpemVkLgAAAAAAAARuYW1lAAAAAAAAAAEAAAAQ","AAAAAAAAAQxTZXRzIHRoZSBhZG1pbmlzdHJhdG9yIHRvIHRoZSBzcGVjaWZpZWQgYWRkcmVzcyBgbmV3X2FkbWluYC4KCiMgQXJndW1lbnRzCgoqIGBuZXdfYWRtaW5gIC0gVGhlIGFkZHJlc3Mgd2hpY2ggd2lsbCBoZW5jZWZvcnRoIGJlIHRoZSBhZG1pbmlzdHJhdG9yCm9mIHRoaXMgdG9rZW4gY29udHJhY3QuCgojIEV2ZW50cwoKRW1pdHMgYW4gZXZlbnQgd2l0aCB0b3BpY3MgYFsic2V0X2FkbWluIiwgYWRtaW46IEFkZHJlc3NdLCBkYXRhID0KW25ld19hZG1pbjogQWRkcmVzc11gAAAACXNldF9hZG1pbgAAAAAAAAEAAAAAAAAACW5ld19hZG1pbgAAAAAAABMAAAAA","AAAAAAAAAEZSZXR1cm5zIHRoZSBhZG1pbiBvZiB0aGUgY29udHJhY3QuCgojIFBhbmljcwoKSWYgdGhlIGFkbWluIGlzIG5vdCBzZXQuAAAAAAAFYWRtaW4AAAAAAAAAAAAAAQAAABM=","AAAAAAAAAVBTZXRzIHdoZXRoZXIgdGhlIGFjY291bnQgaXMgYXV0aG9yaXplZCB0byB1c2UgaXRzIGJhbGFuY2UuIElmCmBhdXRob3JpemVkYCBpcyB0cnVlLCBgaWRgIHNob3VsZCBiZSBhYmxlIHRvIHVzZSBpdHMgYmFsYW5jZS4KCiMgQXJndW1lbnRzCgoqIGBpZGAgLSBUaGUgYWRkcmVzcyBiZWluZyAoZGUtKWF1dGhvcml6ZWQuCiogYGF1dGhvcml6ZWAgLSBXaGV0aGVyIG9yIG5vdCBgaWRgIGNhbiB1c2UgaXRzIGJhbGFuY2UuCgojIEV2ZW50cwoKRW1pdHMgYW4gZXZlbnQgd2l0aCB0b3BpY3MgYFsic2V0X2F1dGhvcml6ZWQiLCBpZDogQWRkcmVzc10sIGRhdGEgPQpbYXV0aG9yaXplOiBib29sXWAAAAAOc2V0X2F1dGhvcml6ZWQAAAAAAAIAAAAAAAAAAmlkAAAAAAATAAAAAAAAAAlhdXRob3JpemUAAAAAAAABAAAAAA==","AAAAAAAAAFtSZXR1cm5zIHRoZSBzeW1ib2wgZm9yIHRoaXMgdG9rZW4uCgojIFBhbmljcwoKSWYgdGhlIGNvbnRyYWN0IGhhcyBub3QgeWV0IGJlZW4gaW5pdGlhbGl6ZWQuAAAAAAZzeW1ib2wAAAAAAAAAAAABAAAAEA==","AAAAAAAAAWRUcmFuc2ZlciBgYW1vdW50YCBmcm9tIGBmcm9tYCB0byBgdG9gLgoKIyBBcmd1bWVudHMKCiogYGZyb21gIC0gVGhlIGFkZHJlc3MgaG9sZGluZyB0aGUgYmFsYW5jZSBvZiB0b2tlbnMgd2hpY2ggd2lsbCBiZQp3aXRoZHJhd24gZnJvbS4KKiBgdG9gIC0gVGhlIGFkZHJlc3Mgd2hpY2ggd2lsbCByZWNlaXZlIHRoZSB0cmFuc2ZlcnJlZCB0b2tlbnMuCiogYGFtb3VudGAgLSBUaGUgYW1vdW50IG9mIHRva2VucyB0byBiZSB0cmFuc2ZlcnJlZC4KCiMgRXZlbnRzCgpFbWl0cyBhbiBldmVudCB3aXRoIHRvcGljcyBgWyJ0cmFuc2ZlciIsIGZyb206IEFkZHJlc3MsIHRvOiBBZGRyZXNzXSwKZGF0YSA9IFthbW91bnQ6IGkxMjhdYAAAAAh0cmFuc2ZlcgAAAAMAAAAAAAAABGZyb20AAAATAAAAAAAAAAJ0bwAAAAAAEwAAAAAAAAAGYW1vdW50AAAAAAALAAAAAA==","AAAAAAAAAzNUcmFuc2ZlciBgYW1vdW50YCBmcm9tIGBmcm9tYCB0byBgdG9gLCBjb25zdW1pbmcgdGhlIGFsbG93YW5jZSB0aGF0CmBzcGVuZGVyYCBoYXMgb24gYGZyb21gJ3MgYmFsYW5jZS4gQXV0aG9yaXplZCBieSBzcGVuZGVyCihgc3BlbmRlci5yZXF1aXJlX2F1dGgoKWApLgoKVGhlIHNwZW5kZXIgd2lsbCBiZSBhbGxvd2VkIHRvIHRyYW5zZmVyIHRoZSBhbW91bnQgZnJvbSBmcm9tJ3MgYmFsYW5jZQppZiB0aGUgYW1vdW50IGlzIGxlc3MgdGhhbiBvciBlcXVhbCB0byB0aGUgYWxsb3dhbmNlIHRoYXQgdGhlIHNwZW5kZXIKaGFzIG9uIHRoZSBmcm9tJ3MgYmFsYW5jZS4gVGhlIHNwZW5kZXIncyBhbGxvd2FuY2Ugb24gZnJvbSdzIGJhbGFuY2UKd2lsbCBiZSByZWR1Y2VkIGJ5IHRoZSBhbW91bnQuCgojIEFyZ3VtZW50cwoKKiBgc3BlbmRlcmAgLSBUaGUgYWRkcmVzcyBhdXRob3JpemluZyB0aGUgdHJhbnNmZXIsIGFuZCBoYXZpbmcgaXRzCmFsbG93YW5jZSBjb25zdW1lZCBkdXJpbmcgdGhlIHRyYW5zZmVyLgoqIGBmcm9tYCAtIFRoZSBhZGRyZXNzIGhvbGRpbmcgdGhlIGJhbGFuY2Ugb2YgdG9rZW5zIHdoaWNoIHdpbGwgYmUKd2l0aGRyYXduIGZyb20uCiogYHRvYCAtIFRoZSBhZGRyZXNzIHdoaWNoIHdpbGwgcmVjZWl2ZSB0aGUgdHJhbnNmZXJyZWQgdG9rZW5zLgoqIGBhbW91bnRgIC0gVGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gYmUgdHJhbnNmZXJyZWQuCgojIEV2ZW50cwoKRW1pdHMgYW4gZXZlbnQgd2l0aCB0b3BpY3MgYFsidHJhbnNmZXIiLCBmcm9tOiBBZGRyZXNzLCB0bzogQWRkcmVzc10sCmRhdGEgPSBbYW1vdW50OiBpMTI4XWAAAAAADXRyYW5zZmVyX2Zyb20AAAAAAAAEAAAAAAAAAAdzcGVuZGVyAAAAABMAAAAAAAAABGZyb20AAAATAAAAAAAAAAJ0bwAAAAAAEwAAAAAAAAAGYW1vdW50AAAAAAALAAAAAA=="]),r);this.options=r}fromJSON={allowance:this.txFromJSON,authorized:this.txFromJSON,approve:this.txFromJSON,balance:this.txFromJSON,burn:this.txFromJSON,burn_from:this.txFromJSON,clawback:this.txFromJSON,decimals:this.txFromJSON,mint:this.txFromJSON,name:this.txFromJSON,set_admin:this.txFromJSON,admin:this.txFromJSON,set_authorized:this.txFromJSON,symbol:this.txFromJSON,transfer:this.txFromJSON,transfer_from:this.txFromJSON}};var oc=100,cc=180,Pr=class{constructor(i,r){this.nodeRpcUrlsConfig=i;this.params=r}async buildChangeTrustLineXdrTx(i){let a=await new ts.Server(this.nodeRpcUrlsConfig.getNodeRpcUrl("STLR")).loadAccount(i.sender),m=await this.getContract(hn,i.tokenAddress).name();if(Qt(m))throw new O;let u=Ht(m);if(!u)throw new O;let[p,h]=u.split(":");if(p===void 0||h===void 0)throw new O("Invalid token name format. Expected format 'symbol:srbTokenAddress'");let b=new nc(p,h),S=ac.changeTrust({asset:b,limit:i.limit});return new ns(a,{fee:oc.toString(10),networkPassphrase:this.params.sorobanNetworkPassphrase}).addOperation(S).setTimeout(cc).build().toXDR()}async getBalanceLine(i,r){let o=await this.getContract(hn,r).name();if(Qt(o))throw new O;let m=Ht(o);if(!m)throw new O;let[u,p]=m.split(":"),h=this.nodeRpcUrlsConfig.getNodeRpcUrl("STLR");return(await new ts.Server(h).loadAccount(i)).balances.find(x=>(x.asset_type==="credit_alphanum4"||x.asset_type==="credit_alphanum12")&&x.asset_code==u&&x.asset_issuer==p)}async submitTransactionStellar(i){let r=new ts.Server(this.nodeRpcUrlsConfig.getNodeRpcUrl("STLR")),a=ns.fromXDR(i,this.nodeRpcUrlsConfig.getNodeRpcUrl("STLR"));return await r.submitTransaction(a)}async simulateAndCheckRestoreTxRequiredSoroban(i,r){let a=new Tn.Server(this.nodeRpcUrlsConfig.getNodeRpcUrl("SRB")),o=await a.getAccount(r),m=yi.fromXDR(i,this.params.sorobanNetworkPassphrase),u=await a.simulateTransaction(m);if(Tn.Api.isSimulationRestore(u))return new yi(o,{fee:(+rc+ +u.restorePreamble.minResourceFee).toString(),networkPassphrase:this.params.sorobanNetworkPassphrase}).setSorobanData(u.restorePreamble.transactionData.build()).addOperation(ic.restoreFootprint({})).setTimeout(sc).build().toXDR()}async sendTransactionSoroban(i){let r=new Tn.Server(this.nodeRpcUrlsConfig.getNodeRpcUrl("SRB")),a=yi.fromXDR(i,this.params.sorobanNetworkPassphrase);return r.sendTransaction(a)}async confirmTx(i,r=15){let a=new Tn.Server(this.nodeRpcUrlsConfig.getNodeRpcUrl("SRB")),o=await Yi(()=>a.getTransaction(i),u=>u.status===Tn.Api.GetTransactionStatus.NOT_FOUND,r);if(o.length===0)throw new O("No transaction responses found.");let m=o[o.length-1];if(!m)throw new O("Unexpected error: last response is undefined.");return m}getContract(i,r){let a={contractId:r,networkPassphrase:this.params.sorobanNetworkPassphrase,rpcUrl:this.nodeRpcUrlsConfig.getNodeRpcUrl("SRB")};return new i(a)}};var wr=class{constructor(i,r){this.nodeRpcUrlsConfig=i;this.srb=new Pr(i,r),this.sol=new Sr(i,r)}srb;sol};g();y();f();var Ft=(r=>(r.WITH_NATIVE_CURRENCY="native",r.WITH_STABLECOIN="stablecoin",r))(Ft||{}),Vn=(r=>(r.INT="int",r.FLOAT="float",r))(Vn||{});g();y();f();import{Big as hc}from"big.js";import{TronWeb as Tc}from"tronweb";import{Web3 as bc}from"web3";g();y();f();g();y();f();var Ac={abi:[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}]},Cr=Ac;g();y();f();g();y();f();g();y();f();import{Big as rs}from"big.js";var Ue=class{async checkAllowance(i){let r=await this.getAllowance(i);return rs(r).gte(rs(i.amount))}};var uc="0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",mc="0xdac17f958d2ee523a2206206994597c13d831ec7",lc=1e5,bn=class extends Ue{constructor(r,a){super();this.web3=r;this.api=a}chainType="EVM";getAllowance(r){let a=r.token.tokenAddress,o=r.owner,m=r.spender;return this.getAllowanceByTokenAddress(a,o,m)}getAllowanceByTokenAddress(r,a,o){return this.getERC20Contract(r).methods.allowance(a,o).call()}async getTokenBalance(r){return await this.getERC20Contract(r.token.tokenAddress).methods.balanceOf(r.account).call()}async getNativeTokenBalance(r){return(await this.web3.eth.getBalance(r.account)).toString()}async approve(r){if(this.isUsdt(r.tokenAddress)&&await this.getAllowanceByTokenAddress(r.tokenAddress,r.owner,r.spender)!=="0"){let m=await this.buildRawTransactionApprove({...r,amount:"0"});await this.sendRawTransaction(m,r.chainSymbol)}let a=await this.buildRawTransactionApprove(r);return await this.sendRawTransaction(a,r.chainSymbol)}isUsdt(r){return r.toLowerCase()===mc}buildRawTransactionApprove(r){let{tokenAddress:a,spender:o,owner:m,amount:u}=r,h=this.getERC20Contract(a).methods.approve(o,u==null?uc:rr(u));return Promise.resolve({from:m,to:a,value:"0",data:h.encodeABI()})}async sendRawTransaction(r,a){let o=r,m={maxPriorityFeePerGas:void 0,maxFeePerGas:void 0};a==="POL"?o.gas=lc:o.gas=await this.web3.eth.estimateGas(r);let{transactionHash:u}=await this.web3.eth.sendTransaction({...o,...m});return{txId:u.toString()}}getERC20Contract(r){return new this.web3.eth.Contract(Cr.abi,r)}};g();y();f();import{AnchorProvider as dc}from"@project-serum/anchor";import{Connection as pc,PublicKey as Br}from"@solana/web3.js";var Ir=class extends Ue{constructor(r,a){super();this.solanaRpcUrl=r;this.api=a}chainType="SOLANA";approve(r){throw new de}buildRawTransactionApprove(r){throw new de}buildAnchorProvider(r){let a=new pc(this.solanaRpcUrl,"confirmed"),o=new Br(r);return new dc(a,{publicKey:o},{preflightCommitment:"confirmed",commitment:"confirmed"})}getAllowance(r){throw new de}async getTokenBalance(r){let{account:a,token:o}=r;try{let m=await Xe(new Br(a),new Br(o.tokenAddress));return(await $t(m,this.buildAnchorProvider(a))).amount.toString()}catch(m){if(m instanceof Error)return m.message.startsWith("Account does not exist"),"0";throw m}}async getNativeTokenBalance(r){return(await this.buildAnchorProvider(r.account).connection.getBalance(new Br(r.account))).toString()}};g();y();f();import{Horizon as $B,NotFoundError as gc}from"@stellar/stellar-sdk";var Rr=class extends Ue{constructor(r,a,o){super();this.nodeRpcUrlsConfig=r;this.params=a;this.api=o}chainType="SRB";getAllowance(){throw new de}async getTokenBalance(r){if(!r.token.originTokenAddress)throw new O("OriginTokenAddress missing");let[a,o]=r.token.originTokenAddress.split(":"),m=new $B.Server(this.nodeRpcUrlsConfig.getNodeRpcUrl("STLR")),u;try{u=await m.loadAccount(r.account)}catch(b){if(b instanceof gc)return"0";throw b}let h=u.balances.find(b=>(b.asset_type==="credit_alphanum4"||b.asset_type==="credit_alphanum12")&&b.asset_code==a&&b.asset_issuer==o);return h?.balance?z(h.balance,Q.getChainDecimalsByType(Q.getChainProperty(r.token.chainSymbol).chainType)).toFixed():"0"}async getNativeTokenBalance(r){let u=(await new $B.Server(this.nodeRpcUrlsConfig.getNodeRpcUrl("STLR")).loadAccount(r.account)).balances.find(p=>p.asset_type==="native");return u?.balance?z(u.balance,Q.getChainDecimalsByType(Q.getChainProperty(r.chainSymbol).chainType)).toFixed():"0"}approve(){throw new de}buildRawTransactionApprove(){throw new de}};g();y();f();import{SuiClient as fc}from"@mysten/sui/client";var vr=class extends Ue{constructor(r,a){super();this.suiRpcUrl=r;this.api=a;this.suiClient=new fc({url:this.suiRpcUrl})}chainType="SUI";suiClient;approve(r){throw new de}buildRawTransactionApprove(r){throw new de}getAllowance(r){throw new de}async getTokenBalance(r){if(!r.token.originTokenAddress)throw new O("SUI token must contain 'originTokenAddress'");return(await this.suiClient.getBalance({owner:r.account,coinType:r.token.originTokenAddress})).totalBalance}async getNativeTokenBalance(r){let a=await ot(o=>this.suiClient.getCoins({owner:r.account,cursor:o}));return a.length===0?"0":a.reduce((o,m)=>o+BigInt(m.balance),BigInt(0)).toString()}};g();y();f();var yc="0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",Sn=class extends Ue{constructor(r,a){super();this.tronWeb=r;this.api=a}chainType="TRX";async getAllowance(r){let{token:{tokenAddress:a},owner:o}=r;return(await(await this.getContract(a)).methods.allowance(o,r.spender).call()).toString()}async getTokenBalance(r){return(await(await this.getContract(r.token.tokenAddress)).balanceOf(r.account).call()).toString()}async getNativeTokenBalance(r){return(await this.tronWeb.trx.getBalance(r.account)).toString()}async approve(r){let a=await this.buildRawTransactionApprove(r);return await ir(this.tronWeb,a)}async buildRawTransactionApprove(r){let{tokenAddress:a,spender:o,owner:m,amount:u}=r,p=u==null?yc:rr(u),h=[{type:"address",value:o},{type:"uint256",value:p}];return this.buildRawTransaction(a,"approve(address,uint256)",h,"0",m)}getContract(r){return this.tronWeb.contract(Cr.abi,r)}async buildRawTransaction(r,a,o,m,u){let p=await this.tronWeb.transactionBuilder.triggerSmartContract(r,a,{callValue:+m},o,u);if(!p?.result?.result)throw new O("Unknown error: "+JSON.stringify(p,null,2));return p.transaction}};var kr=class{constructor(i,r,a){this.api=i;this.nodeRpcUrlsConfig=r;this.params=a}async getAllowance(i,r){let a=await this.getChainTokenService(i.token.chainSymbol,i.owner,r).getAllowance(i);return Y(a,i.token.decimals).toFixed()}async checkAllowance(i,r){return ee(i.amount),ne("amount",i.amount,i.token.decimals),this.getChainTokenService(i.token.chainSymbol,i.owner,r).checkAllowance(this.prepareCheckAllowanceParams(i))}async approve(i,r){return r.amount&&(ee(r.amount),ne("amount",r.amount,r.token.decimals)),this.getChainTokenService(r.token.chainSymbol,r.owner,i).approve(this.prepareApproveParams(r))}async buildRawTransactionApprove(i,r){return i.amount&&(ee(i.amount),ne("amount",i.amount,i.token.decimals)),this.getChainTokenService(i.token.chainSymbol,i.owner,r).buildRawTransactionApprove(this.prepareApproveParams(i))}async getTokenBalance(i,r){let a=await this.getChainTokenService(i.token.chainSymbol,i.account,r).getTokenBalance(i);return i.token.decimals?Y(a,i.token.decimals).toFixed():a}async getNativeTokenBalance(i,r){let a=await this.getChainTokenService(i.chainSymbol,i.account,r).getNativeTokenBalance(i);return{int:a,float:Y(a,Q.getChainDecimalsByType(Q.getChainProperty(i.chainSymbol).chainType)).toFixed()}}getChainTokenService(i,r,a){switch(Q.getChainProperty(i).chainType){case"EVM":{if(a)return new bn(a,this.api);{let o=this.nodeRpcUrlsConfig.getNodeRpcUrl(i);return new bn(new bc(o),this.api)}}case"TRX":{if(a)return new Sn(a,this.api);{let o=this.nodeRpcUrlsConfig.getNodeRpcUrl(i),m=new Tc({fullHost:o});return m.setAddress(r),new Sn(m,this.api)}}case"SOLANA":{let o=this.nodeRpcUrlsConfig.getNodeRpcUrl(i);return new Ir(o,this.api)}case"SRB":return new Rr(this.nodeRpcUrlsConfig,this.params,this.api);case"SUI":return new vr(this.nodeRpcUrlsConfig.getNodeRpcUrl(i),this.api)}}prepareCheckAllowanceParams(i){return{...i,amount:z(i.amount,i.token.decimals)}}prepareApproveParams(i){return{tokenAddress:i.token.tokenAddress,owner:i.owner,spender:i.spender,chainSymbol:i.token.chainSymbol,amount:i.amount==null?void 0:hc(i.amount).toFixed()}}};var Pn=class{constructor(i){this.nodeRpcUrls=i}getNodeRpcUrl(i){let r=this.nodeRpcUrls[i];if(r!==void 0)return r;throw new kn(i)}},xr=class{api;tokenService;params;bridge;pool;constructor(i,r=In){Q.addChainsProperties(r.additionalChainsProperties);let a=new Fn(r),o=new On(a),m=new Nn(o),u=new Wn(m);this.api=new Dn(u,r),this.tokenService=new kr(this.api,i,r),this.bridge=new ar(this.api,i,r,this.tokenService),this.pool=new br(this.api,i,r,this.tokenService),this.params=r}async chainDetailsMap(i){return this.api.getChainDetailsMap(i)}async tokens(i){return this.api.tokens(i)}async tokensByChain(i,r){let o=(await this.api.getChainDetailsMap(r))[i];return o?o.tokens:[]}async getTransferStatus(i,r){return this.api.getTransferStatus(i,r)}async getGasBalance(i,r){return this.api.getGasBalance(i,r)}async checkAddress(){return new Promise(i=>{i({status:"OK",gasBalance:null})})}async getPendingStatusInfo(i,r,a,o){ee(i);let m;r=="float"?(ne("amount",i,a.decimals),m=z(i,a.decimals).toFixed()):m=i;let u=tt(m,a,await pe(this.api,a)),p=await pe(this.api,o),h=this.getAmountFromVUsdFormatted(u,o,p),b,S=await this.api.getPendingInfo();for(let C in S[o.chainSymbol]){let x=S[o.chainSymbol];if(!x)throw new O("Cannot find pending info for "+o.chainSymbol);b=x[C]}if(b){let C=Wi(b.totalSentAmount,p),x=this.getAmountFromVUsdFormatted(u,o,C),B;return xe(x.int).gt(h.int)?B={min:h,max:x}:B={min:x,max:h},{pendingTxs:b.pendingTxs,pendingAmount:{int:et(b.totalSentAmount,3,o.decimals).toFixed(0),float:Y(b.totalSentAmount,3).toFixed()},estimatedAmount:B}}return{pendingTxs:0,pendingAmount:{int:"0",float:"0"},estimatedAmount:{min:h,max:h}}}async getTokenBalance(i,r){return this.tokenService.getTokenBalance(i,r)}async getNativeTokenBalance(i,r){return this.tokenService.getNativeTokenBalance(i,r)}async calculateFeePercentOnSourceChain(i,r){ee(i),ne("amountFloat",i,r.decimals);let a=z(i,r.decimals);if(a.eq(0))return 0;let o=tt(a,r,await pe(this.api,r)),m=Ne(o,r.decimals);return Er(a,m)}async calculateFeePercentOnDestinationChain(i,r,a){ee(i),ne("amountFloat",i,r.decimals);let o=z(i,r.decimals);if(o.eq(0))return 0;let m=tt(o,r,await pe(this.api,r)),u=on(m,a,await pe(this.api,a)),p=Ne(m,a.decimals);return Er(p,u)}async getAmountToBeReceivedAndGasFeeOptions(i,r,a,o){return ee(i),ne("amountToSendFloat",i,r.decimals),{amountToSendFloat:xe(i).toFixed(),amountToBeReceivedFloat:await this.getAmountToBeReceived(i,r,a,o),gasFeeOptions:await this.getGasFeeOptions(r,a,o)}}async getAmountToSendAndGasFeeOptions(i,r,a,o){return ee(i),ne("amountToBeReceivedFloat",i,a.decimals),{amountToSendFloat:await this.getAmountToSend(i,r,a,o),amountToBeReceivedFloat:xe(i).toFixed(),gasFeeOptions:await this.getGasFeeOptions(r,a,o)}}async getAmountToBeReceived(i,r,a,o){let m=await pe(this.api,r),u=await pe(this.api,a);return this.getAmountToBeReceivedFromPools(i,r,a,m,u,o)}async getAmountToBeReceivedFromChain(i,r,a,o,m,u){let p=await this.pool.getPoolInfoFromChain(r,m),h=await this.pool.getPoolInfoFromChain(a,u);return this.getAmountToBeReceivedFromPools(i,r,a,p,h,o)}getAmountToBeReceivedFromPools(i,r,a,o,m,u){ee(i),ne("amountToSendFloat",i,r.decimals);let p=z(i,r.decimals);if(u&&u==3){if(!r.cctpAddress||!a.cctpAddress||!r.cctpFeeShare)throw new Be("Such route does not support CCTP protocol");let b=p.mul(xe(1).minus(r.cctpFeeShare)).round(0,xe.roundUp),S=et(b,r.decimals,a.decimals).round(0);return Y(S,a.decimals).toFixed()}if(u&&u==4){if(!r.cctpV2Address||!a.cctpV2Address||!r.cctpV2FeeShare)throw new Be("Such route does not support CCTP V2 protocol");let b=p.mul(xe(1).minus(r.cctpV2FeeShare)).round(0,xe.roundUp),S=et(b,r.decimals,a.decimals).round(0);return Y(S,a.decimals).toFixed()}let h=tt(p,r,o);return this.getAmountFromVUsdFormatted(h,a,m).float}async getAmountToSend(i,r,a,o){let m=await pe(this.api,r),u=await pe(this.api,a);return this.getAmountToSendFromPools(i,r,a,m,u,o)}async getAmountToSendFromChain(i,r,a,o,m,u){let p=await this.pool.getPoolInfoFromChain(r,m),h=await this.pool.getPoolInfoFromChain(a,u);return this.getAmountToSendFromPools(i,r,a,p,h,o)}getAmountToSendFromPools(i,r,a,o,m,u){ee(i),ne("amountToBeReceivedFloat",i,a.decimals);let p=z(i,a.decimals);if(u&&u==3){if(!r.cctpAddress||!a.cctpAddress||!r.cctpFeeShare)throw new Be("Such route does not support CCTP protocol");let S=p.div(xe(1).minus(r.cctpFeeShare)).round(0,xe.roundDown),C=et(S,a.decimals,r.decimals).round(0);return Y(C,r.decimals).toFixed()}if(u&&u==4){if(!r.cctpV2Address||!a.cctpV2Address||!r.cctpV2FeeShare)throw new Be("Such route does not support CCTP V2 protocol");let S=p.div(xe(1).minus(r.cctpV2FeeShare)).round(0,xe.roundDown),C=et(S,a.decimals,r.decimals).round(0);return Y(C,r.decimals).toFixed()}let h=Ei(p,a,m),b=Ui(h,r,o);if(xe(b).lte(0))throw new At;return Y(b,r.decimals).toFixed()}async getGasFeeOptions(i,r,a){return Lr(i.allbridgeChainId,i.chainType,r.allbridgeChainId,i.decimals,a,this.api)}getAverageTransferTime(i,r,a){return i.transferTime?.[r.chainSymbol]?.[a]??null}async getPoolInfoByToken(i){return await this.api.getPoolInfoByKey({chainSymbol:i.chainSymbol,poolAddress:i.poolAddress})}async refreshPoolInfo(i){if(i){let a=(i instanceof Array?i:[i]).map(o=>({chainSymbol:o.chainSymbol,poolAddress:o.poolAddress}));return this.api.refreshPoolInfo(a)}return this.api.refreshPoolInfo()}aprInPercents(i){return Vi(i)}async getExtraGasMaxLimits(i,r){return await Xr(i,r,this.api)}async getVUsdFromAmount(i,r,a){ee(i);let o;r=="float"?(ne("amount",i,a.decimals),o=z(i,a.decimals).toFixed()):o=i;let m=tt(o,a,await pe(this.api,a));return{int:m,float:Y(m,3).toFixed()}}async getAmountFromVUsd(i,r){return this.getAmountFromVUsdFormatted(i,r,await pe(this.api,r))}getAmountFromVUsdFormatted(i,r,a){ee(i);let o=on(i,r,a);if(xe(o).lt(0))throw new At;return{int:o,float:Y(o,r.decimals).toFixed()}}async swapAndBridgeFeeCalculation(i,r,a){return za(i,{decimals:r.decimals,feeShare:r.feeShare,poolInfo:await pe(this.api,r)},{decimals:a.decimals,feeShare:a.feeShare,poolInfo:await pe(this.api,a)})}async swapAndBridgeFeeCalculationReverse(i,r,a){let o=qa(i,{decimals:r.decimals,feeShare:r.feeShare,poolInfo:await pe(this.api,r)},{decimals:a.decimals,feeShare:a.feeShare,poolInfo:await pe(this.api,a)}),m=o.swapFromVUsdCalcResult.amountIncludingCommissionInTokenPrecision;if(xe(m).lt(0))throw new At;return o}async getSendAmountDetails(i,r,a,o){ee(i);let m;return r=="float"?(ne("amount",i,a.decimals),m=z(i,a.decimals).toFixed()):m=i,es(m,a,await pe(this.api,a),o,await pe(this.api,o))}};function Sc(s){return"solanaRpcUrl"in s}var is=class{params;bridge;pool;utils;service;constructor(i,r=In){let a;Sc(i)?a=new Pn({SOL:i.solanaRpcUrl,TRX:i.tronRpcUrl}):a=new Pn(i),this.service=new xr(a,r),this.bridge=this.service.bridge,this.pool=this.service.pool,this.utils=new wr(a,r),this.params=r}async chainDetailsMap(i="swap"){return this.service.chainDetailsMap(i)}async tokens(i="swap"){return this.service.tokens(i)}async tokensByChain(i,r="swap"){return this.service.tokensByChain(i,r)}async getTransferStatus(i,r){return this.service.getTransferStatus(i,r)}async getGasBalance(i,r){return this.service.getGasBalance(i,r)}async checkAddress(i,r,a){return await this.service.checkAddress()}async getPendingStatusInfo(i,r,a,o){return this.service.getPendingStatusInfo(i,r,a,o)}async getTokenBalance(i,r){return this.service.getTokenBalance(i,r)}async getNativeTokenBalance(i,r){return this.service.getNativeTokenBalance(i,r)}async calculateFeePercentOnSourceChain(i,r){return this.service.calculateFeePercentOnSourceChain(i,r)}async calculateFeePercentOnDestinationChain(i,r,a){return this.service.calculateFeePercentOnDestinationChain(i,r,a)}async getAmountToBeReceivedAndGasFeeOptions(i,r,a,o){return this.service.getAmountToBeReceivedAndGasFeeOptions(i,r,a,o)}async getAmountToSendAndGasFeeOptions(i,r,a,o){return this.service.getAmountToSendAndGasFeeOptions(i,r,a,o)}async getAmountToBeReceived(i,r,a,o){return this.service.getAmountToBeReceived(i,r,a,o)}async getAmountToBeReceivedFromChain(i,r,a,o,m,u){return this.service.getAmountToBeReceivedFromChain(i,r,a,o,m,u)}getAmountToBeReceivedFromPools(i,r,a,o,m,u){return this.service.getAmountToBeReceivedFromPools(i,r,a,o,m,u)}async getAmountToSend(i,r,a,o){return this.service.getAmountToSend(i,r,a,o)}async getAmountToSendFromChain(i,r,a,o,m,u){return this.service.getAmountToSendFromChain(i,r,a,o,m,u)}getAmountToSendFromPools(i,r,a,o,m,u){return this.service.getAmountToSendFromPools(i,r,a,o,m,u)}async getGasFeeOptions(i,r,a){return this.service.getGasFeeOptions(i,r,a)}getAverageTransferTime(i,r,a){return this.service.getAverageTransferTime(i,r,a)}async getPoolInfoByToken(i){return this.service.getPoolInfoByToken(i)}async refreshPoolInfo(i){return this.service.refreshPoolInfo(i)}aprInPercents(i){return this.service.aprInPercents(i)}async getExtraGasMaxLimits(i,r){return this.service.getExtraGasMaxLimits(i,r)}async getVUsdFromAmount(i,r,a){return this.service.getVUsdFromAmount(i,r,a)}async getAmountFromVUsd(i,r){return this.service.getAmountFromVUsd(i,r)}async swapAndBridgeFeeCalculation(i,r,a){return this.service.swapAndBridgeFeeCalculation(i,r,a)}async swapAndBridgeFeeCalculationReverse(i,r,a){return this.service.swapAndBridgeFeeCalculationReverse(i,r,a)}async getSendAmountDetails(i,r,a,o){return this.service.getSendAmountDetails(i,r,a,o)}};export{Gr as AddressStatus,is as AllbridgeCoreSdk,Vn as AmountFormat,Gt as AmountNotEnoughError,vn as ArgumentInvalidDecimalsError,Be as CCTPDoesNotSupportedError,Ze as ChainSymbol,ie as ChainType,Ss as ErrorCode,Rn as ExtraGasMaxLimitExceededError,Ft as FeePaymentMethod,At as InsufficientPoolLiquidityError,ct as InvalidAmountError,nn as InvalidGasFeePaymentOptionError,Ni as InvalidMessengerOptionError,Vt as InvalidTxError,ye as JupiterError,rt as Messenger,de as MethodNotSupportedError,kn as NodeRpcUrlNotInitializedError,O as SdkError,me as SdkRootError,Yr as SolanaAutoTxFee,an as TimeoutError,xn as TxTooLargeError,rn as VerifyTxError,In as mainnet,$c as nodeRpcUrlsDefault,_c as nodeUrlsDefault};
/*! Bundled license information:

@jspm/core/nodelibs/browser/chunk-DtuTasat.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)
*/
//# sourceMappingURL=index.js.map
