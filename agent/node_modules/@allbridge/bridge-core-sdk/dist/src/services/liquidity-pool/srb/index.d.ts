import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { AllbridgeCoreSdkOptions, ChainType } from "../../../index";
import { LiquidityPoolsParams, LiquidityPoolsParamsWithAmount, PoolInfo, TokenWithChainDetails, UserBalanceInfo } from "../../../models";
import { NodeRpcUrlsConfig } from "../../index";
import { RawTransaction } from "../../models";
import { ChainPoolService } from "../models";
export declare class SrbPoolService extends ChainPoolService {
    readonly nodeRpcUrlsConfig: NodeRpcUrlsConfig;
    readonly params: AllbridgeCoreSdkOptions;
    readonly api: AllbridgeCoreClient;
    chainType: ChainType.SRB;
    private P;
    constructor(nodeRpcUrlsConfig: NodeRpcUrlsConfig, params: AllbridgeCoreSdkOptions, api: AllbridgeCoreClient);
    getUserBalanceInfo(accountAddress: string, token: TokenWithChainDetails): Promise<UserBalanceInfo>;
    getPoolInfoFromChain(token: TokenWithChainDetails): Promise<PoolInfo>;
    buildRawTransactionDeposit(params: LiquidityPoolsParamsWithAmount): Promise<RawTransaction>;
    buildRawTransactionWithdraw(params: LiquidityPoolsParamsWithAmount): Promise<RawTransaction>;
    buildRawTransactionClaimRewards(params: LiquidityPoolsParams): Promise<RawTransaction>;
    private getContract;
}
