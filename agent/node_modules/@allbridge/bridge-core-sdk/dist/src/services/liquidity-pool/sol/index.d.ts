import { ChainType } from "../../../chains/chain.enums";
import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { PoolInfo, TokenWithChainDetails } from "../../../tokens-info";
import { RawTransaction } from "../../models";
import { LiquidityPoolsParams, LiquidityPoolsParamsWithAmount, UserBalanceInfo } from "../models";
import { ChainPoolService } from "../models/pool";
export declare class SolanaPoolService extends ChainPoolService {
    solanaRpcUrl: string;
    api: AllbridgeCoreClient;
    chainType: ChainType.SOLANA;
    private P;
    constructor(solanaRpcUrl: string, api: AllbridgeCoreClient);
    getUserBalanceInfo(accountAddress: string, token: TokenWithChainDetails): Promise<UserBalanceInfo>;
    getPoolInfoFromChain(token: TokenWithChainDetails): Promise<PoolInfo>;
    buildRawTransactionDeposit(params: LiquidityPoolsParamsWithAmount): Promise<RawTransaction>;
    buildRawTransactionWithdraw(params: LiquidityPoolsParamsWithAmount): Promise<RawTransaction>;
    buildRawTransactionClaimRewards(params: LiquidityPoolsParams): Promise<RawTransaction>;
    private prepareDataForTransaction;
    private getBridge;
    private buildAnchorProvider;
    private _getLPTransactionData;
}
