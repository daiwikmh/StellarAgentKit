import { ChainType } from "../../../chains/chain.enums";
import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { PoolInfo, TokenWithChainDetails } from "../../../tokens-info";
import { RawSuiTransaction } from "../../models";
import { ChainPoolService, LiquidityPoolsParams, LiquidityPoolsParamsWithAmount, UserBalanceInfo } from "../models";
export declare class SuiPoolService extends ChainPoolService {
    suiRpcUrl: string;
    api: AllbridgeCoreClient;
    chainType: ChainType.SUI;
    private readonly client;
    constructor(suiRpcUrl: string, api: AllbridgeCoreClient);
    getUserBalanceInfo(accountAddress: string, token: TokenWithChainDetails): Promise<UserBalanceInfo>;
    private fetchDeposits;
    getPoolInfoFromChain(token: TokenWithChainDetails): Promise<PoolInfo>;
    buildRawTransactionDeposit(params: LiquidityPoolsParamsWithAmount): Promise<RawSuiTransaction>;
    private getDepositObject;
    buildRawTransactionWithdraw(params: LiquidityPoolsParamsWithAmount): Promise<RawSuiTransaction>;
    buildRawTransactionClaimRewards(params: LiquidityPoolsParams): Promise<RawSuiTransaction>;
}
