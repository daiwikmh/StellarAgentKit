import { TronWeb } from "tronweb";
import { ChainType } from "../../../chains/chain.enums";
import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { PoolInfo, TokenWithChainDetails } from "../../../tokens-info";
import { RawTransaction } from "../../models";
import { LiquidityPoolsParams, LiquidityPoolsParamsWithAmount, UserBalanceInfo, ChainPoolService } from "../models";
export declare class TronPoolService extends ChainPoolService {
    tronWeb: TronWeb;
    api: AllbridgeCoreClient;
    chainType: ChainType.TRX;
    private P;
    private web3;
    constructor(tronWeb: TronWeb, api: AllbridgeCoreClient, tronJsonRpc: string | undefined);
    getUserBalanceInfo(accountAddress: string, token: TokenWithChainDetails): Promise<UserBalanceInfo>;
    private getUserBalanceInfoByBatch;
    private getUserBalanceInfoPerProperty;
    getPoolInfoFromChain(token: TokenWithChainDetails): Promise<PoolInfo>;
    private getPoolInfoByBatch;
    private getPoolInfoPerProperty;
    buildRawTransactionDeposit(params: LiquidityPoolsParamsWithAmount): Promise<RawTransaction>;
    buildRawTransactionWithdraw(params: LiquidityPoolsParamsWithAmount): Promise<RawTransaction>;
    buildRawTransactionClaimRewards(params: LiquidityPoolsParams): Promise<RawTransaction>;
    private buildRawTransaction;
    private getContract;
}
