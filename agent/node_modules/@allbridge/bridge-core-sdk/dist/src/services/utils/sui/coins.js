"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCoinsWithAmounts = getCoinsWithAmounts;
function getCoinsWithAmounts(amounts, coins, tx) {
    if (coins.length === 0 || !coins[0]) {
        return [];
    }
    const firstCoin = coins[0];
    const requiredAmount = amounts.reduce((total, amount) => total + BigInt(amount), BigInt(0));
    let currentBalance = BigInt(firstCoin.balance);
    const accumulatedCoins = [];
    for (const coin of coins.slice(1)) {
        if (currentBalance > requiredAmount) {
            return splitAndMergeCoins(tx, firstCoin, accumulatedCoins, amounts);
        }
        else {
            currentBalance += BigInt(coin.balance);
            accumulatedCoins.push(coin);
        }
    }
    if (currentBalance >= requiredAmount) {
        return splitAndMergeCoins(tx, firstCoin, accumulatedCoins, amounts);
    }
    else {
        return [];
    }
}
function splitAndMergeCoins(tx, firstCoin, accumulatedCoins, amounts) {
    const pureAmounts = amounts.map((amount) => {
        return tx.pure.u64(amount);
    });
    if (accumulatedCoins.length > 0) {
        tx.mergeCoins(firstCoin.coinObjectId, accumulatedCoins.map((c) => c.coinObjectId));
        return tx.splitCoins(firstCoin.coinObjectId, pureAmounts);
    }
    return tx.splitCoins(firstCoin.coinObjectId, pureAmounts);
}
//# sourceMappingURL=coins.js.map