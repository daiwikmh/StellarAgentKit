"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendRawTransaction = sendRawTransaction;
exports.verifyTx = verifyTx;
const exceptions_1 = require("../../../exceptions");
const index_1 = require("../index");
async function sendRawTransaction(tronWeb, rawTransaction) {
    const signedTx = await tronWeb.trx.sign(rawTransaction);
    if (!signedTx.signature) {
        throw new exceptions_1.InvalidTxError("Transaction was not signed properly");
    }
    const receipt = await tronWeb.trx.sendRawTransaction(signedTx);
    const transactionHash = receipt.transaction.txID;
    await verifyTx(tronWeb, transactionHash);
    return { txId: transactionHash };
}
async function verifyTx(tronWeb, txId, timeout = 10000) {
    const start = Date.now();
    while (true) {
        if (Date.now() - start > timeout) {
            throw new exceptions_1.VerifyTxError("Transaction not found");
        }
        const result = await tronWeb.trx.getUnconfirmedTransactionInfo(txId);
        if (!result?.receipt) {
            await (0, index_1.sleep)(2000);
            continue;
        }
        if (result.receipt.result === "SUCCESS") {
            return result;
        }
        else {
            throw new exceptions_1.VerifyTxError(`Transaction status is ${result.receipt.result}`);
        }
    }
}
//# sourceMappingURL=index.js.map