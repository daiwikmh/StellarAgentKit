{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/services/utils/calculation/index.ts"],"names":[],"mappings":";;AAIA,kDA0BC;AAED,wDAGC;AAnCD,mCAA6B;AAC7B,4DAA2E;AAC3E,oEAAwE;AAExE,SAAgB,mBAAmB,CACjC,MAAc,EACd,MAAc,EACd,MAAc,EACd,YAAoB,EACpB,WAAmB;IAEnB,MAAM,QAAQ,GAAG,IAAA,qCAAuB,EAAC,MAAM,EAAE,4BAAgB,CAAC,CAAC;IACnE,MAAM,WAAW,GAAG,IAAA,YAAG,EAAC,QAAQ,CAAC,CAAC;IAElC,MAAM,IAAI,GAAG,IAAA,YAAG,EAAC,MAAM,CAAC,CAAC;IACzB,MAAM,UAAU,GAAG,IAAA,YAAG,EAAC,YAAY,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAEvD,IAAI,eAAe,CAAC;IACpB,IAAI,cAAc,CAAC;IAEnB,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACnC,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACtC,eAAe,GAAG,IAAA,YAAG,EAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrD,cAAc,GAAG,IAAA,YAAG,EAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;SAAM,CAAC;QACN,eAAe,GAAG,IAAA,YAAG,EAAC,YAAY,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QACxF,cAAc,GAAG,IAAA,YAAG,EAAC,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACvF,CAAC;IACD,MAAM,IAAI,GAAG,IAAA,YAAG,EAAC,IAAA,kBAAI,EAAC,MAAM,EAAE,eAAe,CAAC,OAAO,EAAE,EAAE,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACpF,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;AACpC,CAAC;AAED,SAAgB,sBAAsB,CAAC,QAAgB;IACrD,MAAM,UAAU,GAAG,IAAA,qCAAuB,EAAC,QAAQ,EAAE,4BAAgB,CAAC,CAAC;IACvE,OAAO,IAAA,YAAG,EAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC;AAC3C,CAAC","sourcesContent":["import { Big } from \"big.js\";\nimport { convertFloatAmountToInt, getD } from \"../../../utils/calculation\";\nimport { SYSTEM_PRECISION } from \"../../../utils/calculation/constants\";\n\nexport function depositAmountToVUsd(\n  amount: string,\n  aValue: string,\n  dValue: string,\n  tokenBalance: string,\n  vUsdBalance: string\n): string {\n  const amountSP = convertFloatAmountToInt(amount, SYSTEM_PRECISION);\n  const amountSPBig = Big(amountSP);\n\n  const oldD = Big(dValue);\n  const oldBalance = Big(tokenBalance).plus(vUsdBalance);\n\n  let newTokenBalance;\n  let newVUsdBalance;\n\n  if (oldD.eq(0) || oldBalance.eq(0)) {\n    const halfAmount = amountSPBig.div(2);\n    newTokenBalance = Big(tokenBalance).plus(halfAmount);\n    newVUsdBalance = Big(vUsdBalance).plus(halfAmount);\n  } else {\n    newTokenBalance = Big(tokenBalance).plus(amountSPBig.mul(tokenBalance).div(oldBalance));\n    newVUsdBalance = Big(vUsdBalance).plus(amountSPBig.mul(vUsdBalance).div(oldBalance));\n  }\n  const newD = Big(getD(aValue, newTokenBalance.toFixed(), newVUsdBalance.toFixed()));\n  return newD.minus(oldD).toFixed();\n}\n\nexport function vUsdToWithdrawalAmount(lpAmount: string): string {\n  const lpAmountSP = convertFloatAmountToInt(lpAmount, SYSTEM_PRECISION);\n  return Big(lpAmountSP).round().toFixed();\n}\n"]}