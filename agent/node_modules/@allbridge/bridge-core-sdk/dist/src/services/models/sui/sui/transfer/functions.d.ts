import { GenericArg } from "../../_framework/util";
import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface TransferArgs {
    obj: GenericArg;
    recipient: string | TransactionArgument;
}
export declare function transfer(tx: Transaction, typeArg: string, args: TransferArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function freezeObject(tx: Transaction, typeArg: string, obj: GenericArg): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function freezeObjectImpl(tx: Transaction, typeArg: string, obj: GenericArg): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function publicFreezeObject(tx: Transaction, typeArg: string, obj: GenericArg): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PublicReceiveArgs {
    parent: TransactionObjectInput;
    toReceive: TransactionObjectInput;
}
export declare function publicReceive(tx: Transaction, typeArg: string, args: PublicReceiveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function publicShareObject(tx: Transaction, typeArg: string, obj: GenericArg): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PublicTransferArgs {
    obj: GenericArg;
    recipient: string | TransactionArgument;
}
export declare function publicTransfer(tx: Transaction, typeArg: string, args: PublicTransferArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ReceiveArgs {
    parent: TransactionObjectInput;
    toReceive: TransactionObjectInput;
}
export declare function receive(tx: Transaction, typeArg: string, args: ReceiveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ReceiveImplArgs {
    parent: string | TransactionArgument;
    toReceive: string | TransactionArgument;
    version: bigint | TransactionArgument;
}
export declare function receiveImpl(tx: Transaction, typeArg: string, args: ReceiveImplArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function receivingObjectId(tx: Transaction, typeArg: string, receiving: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function shareObject(tx: Transaction, typeArg: string, obj: GenericArg): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function shareObjectImpl(tx: Transaction, typeArg: string, obj: GenericArg): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface TransferImplArgs {
    obj: GenericArg;
    recipient: string | TransactionArgument;
}
export declare function transferImpl(tx: Transaction, typeArg: string, args: TransferImplArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
