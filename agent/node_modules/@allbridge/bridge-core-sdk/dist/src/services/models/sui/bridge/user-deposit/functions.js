"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.add = add;
exports.destroyEmpty = destroyEmpty;
exports.remove = remove;
exports.new_ = new_;
exports.lpAmount = lpAmount;
exports.rewardDebt = rewardDebt;
exports.updateRewardDebt = updateRewardDebt;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function add(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::user_deposit::add`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.userDeposit), (0, util_1.pure)(tx, args.lpAmount, `u64`), (0, util_1.pure)(tx, args.accRewardPerShareP, `u128`)],
    });
}
function destroyEmpty(tx, typeArg, userDeposit) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::user_deposit::destroy_empty`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, userDeposit)],
    });
}
function remove(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::user_deposit::remove`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.userDeposit), (0, util_1.pure)(tx, args.lpAmount, `u64`), (0, util_1.pure)(tx, args.accRewardPerShareP, `u128`)],
    });
}
function new_(tx, typeArg) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::user_deposit::new`,
        typeArguments: [typeArg],
        arguments: [],
    });
}
function lpAmount(tx, typeArg, userDeposit) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::user_deposit::lp_amount`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, userDeposit)],
    });
}
function rewardDebt(tx, typeArg, userDeposit) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::user_deposit::reward_debt`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, userDeposit)],
    });
}
function updateRewardDebt(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::user_deposit::update_reward_debt`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.userDeposit), (0, util_1.pure)(tx, args.accRewardPerShareP, `u128`)],
    });
}
//# sourceMappingURL=functions.js.map