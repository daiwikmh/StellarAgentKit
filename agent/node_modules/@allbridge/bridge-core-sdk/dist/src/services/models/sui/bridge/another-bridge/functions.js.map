{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/bridge/another-bridge/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function destroyEmpty(tx: Transaction, userDeposit: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::another_bridge::destroy_empty`,\n    arguments: [obj(tx, userDeposit)],\n  });\n}\n\nexport function new_(tx: Transaction, address: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::another_bridge::new`,\n    arguments: [obj(tx, address)],\n  });\n}\n\nexport interface SetGasUsageArgs {\n  anotherBridge: TransactionObjectInput;\n  gasUsage: bigint | TransactionArgument;\n}\n\nexport function setGasUsage(tx: Transaction, args: SetGasUsageArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::another_bridge::set_gas_usage`,\n    arguments: [obj(tx, args.anotherBridge), pure(tx, args.gasUsage, `u64`)],\n  });\n}\n\nexport function gasUsage(tx: Transaction, anotherBridge: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::another_bridge::gas_usage`,\n    arguments: [obj(tx, anotherBridge)],\n  });\n}\n\nexport interface AddTokenArgs {\n  anotherBridge: TransactionObjectInput;\n  address: TransactionObjectInput;\n}\n\nexport function addToken(tx: Transaction, args: AddTokenArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::another_bridge::add_token`,\n    arguments: [obj(tx, args.anotherBridge), obj(tx, args.address)],\n  });\n}\n\nexport function bridgeAddress(tx: Transaction, anotherBridge: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::another_bridge::bridge_address`,\n    arguments: [obj(tx, anotherBridge)],\n  });\n}\n\nexport interface HasTokenArgs {\n  anotherBridge: TransactionObjectInput;\n  address: TransactionObjectInput;\n}\n\nexport function hasToken(tx: Transaction, args: HasTokenArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::another_bridge::has_token`,\n    arguments: [obj(tx, args.anotherBridge), obj(tx, args.address)],\n  });\n}\n\nexport interface RemoveTokenArgs {\n  anotherBridge: TransactionObjectInput;\n  address: TransactionObjectInput;\n}\n\nexport function removeToken(tx: Transaction, args: RemoveTokenArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::another_bridge::remove_token`,\n    arguments: [obj(tx, args.anotherBridge), obj(tx, args.address)],\n  });\n}\n\nexport interface SetAddressArgs {\n  anotherBridge: TransactionObjectInput;\n  address: TransactionObjectInput;\n}\n\nexport function setAddress(tx: Transaction, args: SetAddressArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::another_bridge::set_address`,\n    arguments: [obj(tx, args.anotherBridge), obj(tx, args.address)],\n  });\n}\n"]}