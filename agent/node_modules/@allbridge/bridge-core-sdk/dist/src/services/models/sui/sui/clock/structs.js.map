{"version":3,"file":"structs.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/clock/structs.ts"],"names":[],"mappings":";;;AAqBA,0BAGC;AAxBD,cAAc;AACd,sDAUkC;AAClC,gDAAyF;AACzF,oCAAmC;AACnC,+CAAwC;AACxC,yCAAsC;AAEtC,6CAA4C;AAE5C,0EAA0E;AAE1E,SAAgB,OAAO,CAAC,IAAY;IAClC,IAAI,GAAG,IAAA,sBAAe,EAAC,IAAI,CAAC,CAAC;IAC7B,OAAO,IAAI,KAAK,GAAG,eAAO,gBAAgB,CAAC;AAC7C,CAAC;AASD,MAAa,KAAK;IAChB,aAAa,GAAG,IAAa,CAAC;IAE9B,MAAM,KAAK,SAAS;QAClB,OAAO,GAAG,eAAO,gBAAgB,CAAC;IACpC,CAAC;IACD,MAAM,CAAU,cAAc,GAAG,CAAC,CAAC;IACnC,MAAM,CAAU,UAAU,GAAG,EAAW,CAAC;IAEhC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;IAC5B,aAAa,CAAS;IACtB,SAAS,CAAK;IACd,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;IAE9B,EAAE,CAAe;IACjB,WAAW,CAAiB;IAErC,YAAoB,QAAY,EAAE,MAAmB;QACnD,IAAI,CAAC,aAAa,GAAG,IAAA,qBAAc,EAAC,KAAK,CAAC,SAAS,EAAE,GAAG,QAAQ,CAAW,CAAC;QAC5E,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAE1B,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;IACxC,CAAC;IAED,MAAM,CAAC,OAAO;QACZ,OAAO;YACL,QAAQ,EAAE,KAAK,CAAC,SAAS;YACzB,YAAY,EAAE,IAAA,qBAAc,EAAC,KAAK,CAAC,SAAS,EAAE,GAAG,EAAE,CAAW;YAC9D,QAAQ,EAAE,EAAQ;YAClB,SAAS,EAAE,KAAK,CAAC,UAAU;YAC3B,eAAe,EAAE,EAAE;YACnB,UAAU,EAAE,CAAC,MAA2B,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;YACrE,mBAAmB,EAAE,CAAC,IAAqB,EAAE,EAAE,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC;YAC/E,OAAO,EAAE,CAAC,IAAgB,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;YAClD,GAAG,EAAE,KAAK,CAAC,GAAG;YACd,aAAa,EAAE,CAAC,KAAU,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;YACzD,QAAQ,EAAE,CAAC,IAAyB,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC7D,iBAAiB,EAAE,CAAC,OAAsB,EAAE,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC;YAC/E,iBAAiB,EAAE,CAAC,OAAsB,EAAE,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC;YAC/E,KAAK,EAAE,KAAK,EAAE,MAAiB,EAAE,EAAU,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC;YACvE,GAAG,EAAE,CAAC,MAAmB,EAAE,EAAE;gBAC3B,OAAO,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC/B,CAAC;YACD,IAAI,EAAE,oBAAoB;SAC3B,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,CAAC;QACV,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED,MAAM,CAAC,OAAO;QACZ,OAAO,IAAA,iBAAO,EAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAClC,CAAC;IACD,MAAM,KAAK,CAAC;QACV,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED,MAAM,KAAK,GAAG;QACZ,OAAO,SAAG,CAAC,MAAM,CAAC,OAAO,EAAE;YACzB,EAAE,EAAE,aAAG,CAAC,GAAG;YACX,YAAY,EAAE,SAAG,CAAC,GAAG,EAAE;SACxB,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,MAA2B;QAC3C,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC;YACzB,EAAE,EAAE,IAAA,0BAAgB,EAAC,aAAG,CAAC,OAAO,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC;YAC9C,WAAW,EAAE,IAAA,0BAAgB,EAAC,KAAK,EAAE,MAAM,CAAC,YAAY,CAAC;SAC1D,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,IAAqB;QAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACtC,CAAC;QAED,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC;YACzB,EAAE,EAAE,IAAA,mCAAyB,EAAC,aAAG,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;YAC5D,WAAW,EAAE,IAAA,mCAAyB,EAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;SACxE,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,IAAgB;QAC7B,OAAO,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,WAAW;QACT,OAAO;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SACzC,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,GAAG,IAAI,CAAC,WAAW,EAAE;SACtB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,KAAU;QAC7B,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC;YACzB,EAAE,EAAE,IAAA,6BAAmB,EAAC,aAAG,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC;YAChD,WAAW,EAAE,IAAA,6BAAmB,EAAC,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC;SAC3D,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAyB;QACvC,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,EAAE,CAAC;YACvC,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACvD,CAAC;QAED,OAAO,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,iBAAiB,CAAC,OAAsB;QAC7C,IAAI,OAAO,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;YACtC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,aAAc,OAAO,CAAC,MAAc,CAAC,EAAE,wBAAwB,CAAC,CAAC;QACnF,CAAC;QACD,OAAO,KAAK,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,iBAAiB,CAAC,IAAmB;QAC1C,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACb,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;gBAClE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;YACrD,CAAC;YAED,OAAO,KAAK,CAAC,OAAO,CAAC,IAAA,eAAO,EAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnD,CAAC;QACD,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC;QACD,MAAM,IAAI,KAAK,CACb,+GAA+G,CAChH,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAiB,EAAE,EAAU;QAC9C,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QACvE,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,qCAAqC,EAAE,KAAK,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;QAChF,CAAC;QACD,IAAI,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,KAAK,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YAC5E,MAAM,IAAI,KAAK,CAAC,gBAAgB,EAAE,wBAAwB,CAAC,CAAC;QAC9D,CAAC;QAED,OAAO,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;;AA1JH,sBA2JC","sourcesContent":["// @ts-nocheck\nimport {\n  PhantomReified,\n  Reified,\n  StructClass,\n  ToField,\n  ToTypeStr,\n  decodeFromFields,\n  decodeFromFieldsWithTypes,\n  decodeFromJSONField,\n  phantom,\n} from \"../../_framework/reified\";\nimport { FieldsWithTypes, composeSuiType, compressSuiType } from \"../../_framework/util\";\nimport { PKG_V26 } from \"../index\";\nimport { UID } from \"../object/structs\";\nimport { bcs } from \"@mysten/sui/bcs\";\nimport { SuiClient, SuiObjectData, SuiParsedData } from \"@mysten/sui/client\";\nimport { fromB64 } from \"@mysten/sui/utils\";\n\n/* ============================== Clock =============================== */\n\nexport function isClock(type: string): boolean {\n  type = compressSuiType(type);\n  return type === `${PKG_V26}::clock::Clock`;\n}\n\nexport interface ClockFields {\n  id: ToField<UID>;\n  timestampMs: ToField<\"u64\">;\n}\n\nexport type ClockReified = Reified<Clock, ClockFields>;\n\nexport class Clock implements StructClass {\n  __StructClass = true as const;\n\n  static get $typeName() {\n    return `${PKG_V26}::clock::Clock`;\n  }\n  static readonly $numTypeParams = 0;\n  static readonly $isPhantom = [] as const;\n\n  readonly $typeName = Clock.$typeName;\n  readonly $fullTypeName: string;\n  readonly $typeArgs: [];\n  readonly $isPhantom = Clock.$isPhantom;\n\n  readonly id: ToField<UID>;\n  readonly timestampMs: ToField<\"u64\">;\n\n  private constructor(typeArgs: [], fields: ClockFields) {\n    this.$fullTypeName = composeSuiType(Clock.$typeName, ...typeArgs) as string;\n    this.$typeArgs = typeArgs;\n\n    this.id = fields.id;\n    this.timestampMs = fields.timestampMs;\n  }\n\n  static reified(): ClockReified {\n    return {\n      typeName: Clock.$typeName,\n      fullTypeName: composeSuiType(Clock.$typeName, ...[]) as string,\n      typeArgs: [] as [],\n      isPhantom: Clock.$isPhantom,\n      reifiedTypeArgs: [],\n      fromFields: (fields: Record<string, any>) => Clock.fromFields(fields),\n      fromFieldsWithTypes: (item: FieldsWithTypes) => Clock.fromFieldsWithTypes(item),\n      fromBcs: (data: Uint8Array) => Clock.fromBcs(data),\n      bcs: Clock.bcs,\n      fromJSONField: (field: any) => Clock.fromJSONField(field),\n      fromJSON: (json: Record<string, any>) => Clock.fromJSON(json),\n      fromSuiParsedData: (content: SuiParsedData) => Clock.fromSuiParsedData(content),\n      fromSuiObjectData: (content: SuiObjectData) => Clock.fromSuiObjectData(content),\n      fetch: async (client: SuiClient, id: string) => Clock.fetch(client, id),\n      new: (fields: ClockFields) => {\n        return new Clock([], fields);\n      },\n      kind: \"StructClassReified\",\n    };\n  }\n\n  static get r() {\n    return Clock.reified();\n  }\n\n  static phantom(): PhantomReified<ToTypeStr<Clock>> {\n    return phantom(Clock.reified());\n  }\n  static get p() {\n    return Clock.phantom();\n  }\n\n  static get bcs() {\n    return bcs.struct(\"Clock\", {\n      id: UID.bcs,\n      timestamp_ms: bcs.u64(),\n    });\n  }\n\n  static fromFields(fields: Record<string, any>): Clock {\n    return Clock.reified().new({\n      id: decodeFromFields(UID.reified(), fields.id),\n      timestampMs: decodeFromFields(\"u64\", fields.timestamp_ms),\n    });\n  }\n\n  static fromFieldsWithTypes(item: FieldsWithTypes): Clock {\n    if (!isClock(item.type)) {\n      throw new Error(\"not a Clock type\");\n    }\n\n    return Clock.reified().new({\n      id: decodeFromFieldsWithTypes(UID.reified(), item.fields.id),\n      timestampMs: decodeFromFieldsWithTypes(\"u64\", item.fields.timestamp_ms),\n    });\n  }\n\n  static fromBcs(data: Uint8Array): Clock {\n    return Clock.fromFields(Clock.bcs.parse(data));\n  }\n\n  toJSONField() {\n    return {\n      id: this.id,\n      timestampMs: this.timestampMs.toString(),\n    };\n  }\n\n  toJSON() {\n    return {\n      $typeName: this.$typeName,\n      $typeArgs: this.$typeArgs,\n      ...this.toJSONField(),\n    };\n  }\n\n  static fromJSONField(field: any): Clock {\n    return Clock.reified().new({\n      id: decodeFromJSONField(UID.reified(), field.id),\n      timestampMs: decodeFromJSONField(\"u64\", field.timestampMs),\n    });\n  }\n\n  static fromJSON(json: Record<string, any>): Clock {\n    if (json.$typeName !== Clock.$typeName) {\n      throw new Error(\"not a WithTwoGenerics json object\");\n    }\n\n    return Clock.fromJSONField(json);\n  }\n\n  static fromSuiParsedData(content: SuiParsedData): Clock {\n    if (content.dataType !== \"moveObject\") {\n      throw new Error(\"not an object\");\n    }\n    if (!isClock(content.type)) {\n      throw new Error(`object at ${(content.fields as any).id} is not a Clock object`);\n    }\n    return Clock.fromFieldsWithTypes(content);\n  }\n\n  static fromSuiObjectData(data: SuiObjectData): Clock {\n    if (data.bcs) {\n      if (data.bcs.dataType !== \"moveObject\" || !isClock(data.bcs.type)) {\n        throw new Error(`object at is not a Clock object`);\n      }\n\n      return Clock.fromBcs(fromB64(data.bcs.bcsBytes));\n    }\n    if (data.content) {\n      return Clock.fromSuiParsedData(data.content);\n    }\n    throw new Error(\n      \"Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.\"\n    );\n  }\n\n  static async fetch(client: SuiClient, id: string): Promise<Clock> {\n    const res = await client.getObject({ id, options: { showBcs: true } });\n    if (res.error) {\n      throw new Error(`error fetching Clock object at id ${id}: ${res.error.code}`);\n    }\n    if (res.data?.bcs?.dataType !== \"moveObject\" || !isClock(res.data.bcs.type)) {\n      throw new Error(`object at id ${id} is not a Clock object`);\n    }\n\n    return Clock.fromSuiObjectData(res.data);\n  }\n}\n"]}