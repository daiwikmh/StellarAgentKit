{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/messenger/messenger/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function getId(tx: Transaction, messenger: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::get_id`,\n    arguments: [obj(tx, messenger)],\n  });\n}\n\nexport function getVersion(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::get_version`,\n    arguments: [],\n  });\n}\n\nexport function init(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::init`,\n    arguments: [],\n  });\n}\n\nexport interface MigrateArgs {\n  admin: TransactionObjectInput;\n  messenger: TransactionObjectInput;\n}\n\nexport function migrate(tx: Transaction, args: MigrateArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::migrate`,\n    arguments: [obj(tx, args.admin), obj(tx, args.messenger)],\n  });\n}\n\nexport function gasBalanceValue(tx: Transaction, messenger: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::gas_balance_value`,\n    arguments: [obj(tx, messenger)],\n  });\n}\n\nexport function getGasUsage(tx: Transaction, messenger: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::get_gas_usage`,\n    arguments: [obj(tx, messenger)],\n  });\n}\n\nexport function getOtherChainIds(tx: Transaction, messenger: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::get_other_chain_ids`,\n    arguments: [obj(tx, messenger)],\n  });\n}\n\nexport function getReceivedMessages(tx: Transaction, messenger: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::get_received_messages`,\n    arguments: [obj(tx, messenger)],\n  });\n}\n\nexport function getSentMessages(tx: Transaction, messenger: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::get_sent_messages`,\n    arguments: [obj(tx, messenger)],\n  });\n}\n\nexport interface GetTransactionCostArgs {\n  messenger: TransactionObjectInput;\n  gasOracle: TransactionObjectInput;\n  chainId: number | TransactionArgument;\n}\n\nexport function getTransactionCost(tx: Transaction, args: GetTransactionCostArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::get_transaction_cost`,\n    arguments: [obj(tx, args.messenger), obj(tx, args.gasOracle), pure(tx, args.chainId, `u8`)],\n  });\n}\n\nexport interface ReceiveMessageArgs {\n  messenger: TransactionObjectInput;\n  message: TransactionObjectInput;\n  signaturePrimary: Array<number | TransactionArgument> | TransactionArgument;\n  signatureSecondary: Array<number | TransactionArgument> | TransactionArgument;\n}\n\nexport function receiveMessage(tx: Transaction, args: ReceiveMessageArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::receive_message`,\n    arguments: [\n      obj(tx, args.messenger),\n      obj(tx, args.message),\n      pure(tx, args.signaturePrimary, `vector<u8>`),\n      pure(tx, args.signatureSecondary, `vector<u8>`),\n    ],\n  });\n}\n\nexport interface SendMessageArgs {\n  messenger: TransactionObjectInput;\n  gasOracle: TransactionObjectInput;\n  coin: TransactionObjectInput;\n  message: TransactionObjectInput;\n  sender: TransactionObjectInput;\n}\n\nexport function sendMessage(tx: Transaction, args: SendMessageArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::send_message`,\n    arguments: [\n      obj(tx, args.messenger),\n      obj(tx, args.gasOracle),\n      obj(tx, args.coin),\n      obj(tx, args.message),\n      obj(tx, args.sender),\n    ],\n  });\n}\n\nexport interface SetGasUsageArgs {\n  messenger: TransactionObjectInput;\n  chainId: number | TransactionArgument;\n  gasAmount: bigint | TransactionArgument;\n}\n\nexport function setGasUsage(tx: Transaction, args: SetGasUsageArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::set_gas_usage`,\n    arguments: [obj(tx, args.messenger), pure(tx, args.chainId, `u8`), pure(tx, args.gasAmount, `u64`)],\n  });\n}\n\nexport interface SetOtherChainsArgs {\n  messenger: TransactionObjectInput;\n  otherChainIds: Array<boolean | TransactionArgument> | TransactionArgument;\n}\n\nexport function setOtherChains(tx: Transaction, args: SetOtherChainsArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::set_other_chains`,\n    arguments: [obj(tx, args.messenger), pure(tx, args.otherChainIds, `vector<bool>`)],\n  });\n}\n\nexport interface WithdrawFeeArgs {\n  messenger: TransactionObjectInput;\n  amount: bigint | TransactionArgument;\n}\n\nexport function withdrawFee(tx: Transaction, args: WithdrawFeeArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::withdraw_fee`,\n    arguments: [obj(tx, args.messenger), pure(tx, args.amount, `u64`)],\n  });\n}\n\nexport interface AddSecondaryValidatorArgs {\n  messenger: TransactionObjectInput;\n  secondaryValidator: Array<number | TransactionArgument> | TransactionArgument;\n}\n\nexport function addSecondaryValidator(tx: Transaction, args: AddSecondaryValidatorArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::add_secondary_validator`,\n    arguments: [obj(tx, args.messenger), pure(tx, args.secondaryValidator, `vector<u8>`)],\n  });\n}\n\nexport interface RemoveSecondaryValidatorArgs {\n  messenger: TransactionObjectInput;\n  secondaryValidator: Array<number | TransactionArgument> | TransactionArgument;\n}\n\nexport function removeSecondaryValidator(tx: Transaction, args: RemoveSecondaryValidatorArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::remove_secondary_validator`,\n    arguments: [obj(tx, args.messenger), pure(tx, args.secondaryValidator, `vector<u8>`)],\n  });\n}\n\nexport interface SetPrimaryValidatorArgs {\n  messenger: TransactionObjectInput;\n  primaryValidator: Array<number | TransactionArgument> | TransactionArgument;\n}\n\nexport function setPrimaryValidator(tx: Transaction, args: SetPrimaryValidatorArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::messenger::set_primary_validator`,\n    arguments: [obj(tx, args.messenger), pure(tx, args.primaryValidator, `vector<u8>`)],\n  });\n}\n"]}