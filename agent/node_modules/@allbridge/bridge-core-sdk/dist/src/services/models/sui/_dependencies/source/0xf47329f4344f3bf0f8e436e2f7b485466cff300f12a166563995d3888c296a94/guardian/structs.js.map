{"version":3,"file":"structs.js","sourceRoot":"","sources":["../../../../../../../../../src/services/models/sui/_dependencies/source/0xf47329f4344f3bf0f8e436e2f7b485466cff300f12a166563995d3888c296a94/guardian/structs.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport {\n  PhantomReified,\n  Reified,\n  StructClass,\n  ToField,\n  ToTypeStr,\n  decodeFromFields,\n  decodeFromFieldsWithTypes,\n  decodeFromJSONField,\n  phantom,\n} from \"../../../../_framework/reified\";\nimport { FieldsWithTypes, composeSuiType, compressSuiType } from \"../../../../_framework/util\";\nimport { Bytes20 } from \"../bytes20/structs\";\nimport { PKG_V1 } from \"../index\";\nimport { bcs } from \"@mysten/sui/bcs\";\nimport { SuiClient, SuiObjectData, SuiParsedData } from \"@mysten/sui/client\";\nimport { fromB64 } from \"@mysten/sui/utils\";\n\n/* ============================== Guardian =============================== */\n\nexport function isGuardian(type: string): boolean {\n  type = compressSuiType(type);\n  return type === `${PKG_V1}::guardian::Guardian`;\n}\n\nexport interface GuardianFields {\n  pubkey: ToField<Bytes20>;\n}\n\nexport type GuardianReified = Reified<Guardian, GuardianFields>;\n\nexport class Guardian implements StructClass {\n  __StructClass = true as const;\n\n  static get $typeName() {\n    return `${PKG_V1}::guardian::Guardian`;\n  }\n  static readonly $numTypeParams = 0;\n  static readonly $isPhantom = [] as const;\n\n  readonly $typeName = Guardian.$typeName;\n  readonly $fullTypeName: string;\n  readonly $typeArgs: [];\n  readonly $isPhantom = Guardian.$isPhantom;\n\n  readonly pubkey: ToField<Bytes20>;\n\n  private constructor(typeArgs: [], fields: GuardianFields) {\n    this.$fullTypeName = composeSuiType(Guardian.$typeName, ...typeArgs) as string;\n    this.$typeArgs = typeArgs;\n\n    this.pubkey = fields.pubkey;\n  }\n\n  static reified(): GuardianReified {\n    return {\n      typeName: Guardian.$typeName,\n      fullTypeName: composeSuiType(Guardian.$typeName, ...[]) as string,\n      typeArgs: [] as [],\n      isPhantom: Guardian.$isPhantom,\n      reifiedTypeArgs: [],\n      fromFields: (fields: Record<string, any>) => Guardian.fromFields(fields),\n      fromFieldsWithTypes: (item: FieldsWithTypes) => Guardian.fromFieldsWithTypes(item),\n      fromBcs: (data: Uint8Array) => Guardian.fromBcs(data),\n      bcs: Guardian.bcs,\n      fromJSONField: (field: any) => Guardian.fromJSONField(field),\n      fromJSON: (json: Record<string, any>) => Guardian.fromJSON(json),\n      fromSuiParsedData: (content: SuiParsedData) => Guardian.fromSuiParsedData(content),\n      fromSuiObjectData: (content: SuiObjectData) => Guardian.fromSuiObjectData(content),\n      fetch: async (client: SuiClient, id: string) => Guardian.fetch(client, id),\n      new: (fields: GuardianFields) => {\n        return new Guardian([], fields);\n      },\n      kind: \"StructClassReified\",\n    };\n  }\n\n  static get r() {\n    return Guardian.reified();\n  }\n\n  static phantom(): PhantomReified<ToTypeStr<Guardian>> {\n    return phantom(Guardian.reified());\n  }\n  static get p() {\n    return Guardian.phantom();\n  }\n\n  static get bcs() {\n    return bcs.struct(\"Guardian\", {\n      pubkey: Bytes20.bcs,\n    });\n  }\n\n  static fromFields(fields: Record<string, any>): Guardian {\n    return Guardian.reified().new({\n      pubkey: decodeFromFields(Bytes20.reified(), fields.pubkey),\n    });\n  }\n\n  static fromFieldsWithTypes(item: FieldsWithTypes): Guardian {\n    if (!isGuardian(item.type)) {\n      throw new Error(\"not a Guardian type\");\n    }\n\n    return Guardian.reified().new({\n      pubkey: decodeFromFieldsWithTypes(Bytes20.reified(), item.fields.pubkey),\n    });\n  }\n\n  static fromBcs(data: Uint8Array): Guardian {\n    return Guardian.fromFields(Guardian.bcs.parse(data));\n  }\n\n  toJSONField() {\n    return {\n      pubkey: this.pubkey.toJSONField(),\n    };\n  }\n\n  toJSON() {\n    return {\n      $typeName: this.$typeName,\n      $typeArgs: this.$typeArgs,\n      ...this.toJSONField(),\n    };\n  }\n\n  static fromJSONField(field: any): Guardian {\n    return Guardian.reified().new({\n      pubkey: decodeFromJSONField(Bytes20.reified(), field.pubkey),\n    });\n  }\n\n  static fromJSON(json: Record<string, any>): Guardian {\n    if (json.$typeName !== Guardian.$typeName) {\n      throw new Error(\"not a WithTwoGenerics json object\");\n    }\n\n    return Guardian.fromJSONField(json);\n  }\n\n  static fromSuiParsedData(content: SuiParsedData): Guardian {\n    if (content.dataType !== \"moveObject\") {\n      throw new Error(\"not an object\");\n    }\n    if (!isGuardian(content.type)) {\n      throw new Error(`object at ${(content.fields as any).id} is not a Guardian object`);\n    }\n    return Guardian.fromFieldsWithTypes(content);\n  }\n\n  static fromSuiObjectData(data: SuiObjectData): Guardian {\n    if (data.bcs) {\n      if (data.bcs.dataType !== \"moveObject\" || !isGuardian(data.bcs.type)) {\n        throw new Error(`object at is not a Guardian object`);\n      }\n\n      return Guardian.fromBcs(fromB64(data.bcs.bcsBytes));\n    }\n    if (data.content) {\n      return Guardian.fromSuiParsedData(data.content);\n    }\n    throw new Error(\n      \"Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.\"\n    );\n  }\n\n  static async fetch(client: SuiClient, id: string): Promise<Guardian> {\n    const res = await client.getObject({ id, options: { showBcs: true } });\n    if (res.error) {\n      throw new Error(`error fetching Guardian object at id ${id}: ${res.error.code}`);\n    }\n    if (res.data?.bcs?.dataType !== \"moveObject\" || !isGuardian(res.data.bcs.type)) {\n      throw new Error(`object at id ${id} is not a Guardian object`);\n    }\n\n    return Guardian.fromSuiObjectData(res.data);\n  }\n}\n"]}