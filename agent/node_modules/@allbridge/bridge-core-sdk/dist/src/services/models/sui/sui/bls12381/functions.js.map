{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/bls12381/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { obj, pure, vector } from \"../../_framework/util\";\nimport { Element } from \"../group-ops/structs\";\nimport { G1, G2, Scalar, UncompressedG1 } from \"./structs\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport interface PairingArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function pairing(tx: Transaction, args: PairingArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::pairing`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport interface Bls12381MinPkVerifyArgs {\n  signature: Array<number | TransactionArgument> | TransactionArgument;\n  publicKey: Array<number | TransactionArgument> | TransactionArgument;\n  msg: Array<number | TransactionArgument> | TransactionArgument;\n}\n\nexport function bls12381MinPkVerify(tx: Transaction, args: Bls12381MinPkVerifyArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::bls12381_min_pk_verify`,\n    arguments: [\n      pure(tx, args.signature, `vector<u8>`),\n      pure(tx, args.publicKey, `vector<u8>`),\n      pure(tx, args.msg, `vector<u8>`),\n    ],\n  });\n}\n\nexport interface Bls12381MinSigVerifyArgs {\n  signature: Array<number | TransactionArgument> | TransactionArgument;\n  publicKey: Array<number | TransactionArgument> | TransactionArgument;\n  msg: Array<number | TransactionArgument> | TransactionArgument;\n}\n\nexport function bls12381MinSigVerify(tx: Transaction, args: Bls12381MinSigVerifyArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::bls12381_min_sig_verify`,\n    arguments: [\n      pure(tx, args.signature, `vector<u8>`),\n      pure(tx, args.publicKey, `vector<u8>`),\n      pure(tx, args.msg, `vector<u8>`),\n    ],\n  });\n}\n\nexport interface G1AddArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function g1Add(tx: Transaction, args: G1AddArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_add`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport interface G1DivArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function g1Div(tx: Transaction, args: G1DivArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_div`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport function g1FromBytes(tx: Transaction, bytes: Array<number | TransactionArgument> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_from_bytes`,\n    arguments: [pure(tx, bytes, `vector<u8>`)],\n  });\n}\n\nexport function g1Generator(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_generator`,\n    arguments: [],\n  });\n}\n\nexport function g1Identity(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_identity`,\n    arguments: [],\n  });\n}\n\nexport interface G1MulArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function g1Mul(tx: Transaction, args: G1MulArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_mul`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport interface G1MultiScalarMultiplicationArgs {\n  scalars: Array<TransactionObjectInput> | TransactionArgument;\n  elements: Array<TransactionObjectInput> | TransactionArgument;\n}\n\nexport function g1MultiScalarMultiplication(tx: Transaction, args: G1MultiScalarMultiplicationArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_multi_scalar_multiplication`,\n    arguments: [\n      vector(tx, `${Element.$typeName}<${Scalar.$typeName}>`, args.scalars),\n      vector(tx, `${Element.$typeName}<${G1.$typeName}>`, args.elements),\n    ],\n  });\n}\n\nexport function g1Neg(tx: Transaction, e: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_neg`,\n    arguments: [obj(tx, e)],\n  });\n}\n\nexport interface G1SubArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function g1Sub(tx: Transaction, args: G1SubArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_sub`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport function g1ToUncompressedG1(tx: Transaction, e: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g1_to_uncompressed_g1`,\n    arguments: [obj(tx, e)],\n  });\n}\n\nexport interface G2AddArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function g2Add(tx: Transaction, args: G2AddArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g2_add`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport interface G2DivArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function g2Div(tx: Transaction, args: G2DivArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g2_div`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport function g2FromBytes(tx: Transaction, bytes: Array<number | TransactionArgument> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g2_from_bytes`,\n    arguments: [pure(tx, bytes, `vector<u8>`)],\n  });\n}\n\nexport function g2Generator(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g2_generator`,\n    arguments: [],\n  });\n}\n\nexport function g2Identity(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g2_identity`,\n    arguments: [],\n  });\n}\n\nexport interface G2MulArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function g2Mul(tx: Transaction, args: G2MulArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g2_mul`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport interface G2MultiScalarMultiplicationArgs {\n  scalars: Array<TransactionObjectInput> | TransactionArgument;\n  elements: Array<TransactionObjectInput> | TransactionArgument;\n}\n\nexport function g2MultiScalarMultiplication(tx: Transaction, args: G2MultiScalarMultiplicationArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g2_multi_scalar_multiplication`,\n    arguments: [\n      vector(tx, `${Element.$typeName}<${Scalar.$typeName}>`, args.scalars),\n      vector(tx, `${Element.$typeName}<${G2.$typeName}>`, args.elements),\n    ],\n  });\n}\n\nexport function g2Neg(tx: Transaction, e: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g2_neg`,\n    arguments: [obj(tx, e)],\n  });\n}\n\nexport interface G2SubArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function g2Sub(tx: Transaction, args: G2SubArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::g2_sub`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport interface GtAddArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function gtAdd(tx: Transaction, args: GtAddArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::gt_add`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport interface GtDivArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function gtDiv(tx: Transaction, args: GtDivArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::gt_div`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport function gtGenerator(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::gt_generator`,\n    arguments: [],\n  });\n}\n\nexport function gtIdentity(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::gt_identity`,\n    arguments: [],\n  });\n}\n\nexport interface GtMulArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function gtMul(tx: Transaction, args: GtMulArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::gt_mul`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport function gtNeg(tx: Transaction, e: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::gt_neg`,\n    arguments: [obj(tx, e)],\n  });\n}\n\nexport interface GtSubArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function gtSub(tx: Transaction, args: GtSubArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::gt_sub`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport function hashToG1(tx: Transaction, m: Array<number | TransactionArgument> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::hash_to_g1`,\n    arguments: [pure(tx, m, `vector<u8>`)],\n  });\n}\n\nexport function hashToG2(tx: Transaction, m: Array<number | TransactionArgument> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::hash_to_g2`,\n    arguments: [pure(tx, m, `vector<u8>`)],\n  });\n}\n\nexport interface ScalarAddArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function scalarAdd(tx: Transaction, args: ScalarAddArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_add`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport interface ScalarDivArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function scalarDiv(tx: Transaction, args: ScalarDivArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_div`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport function scalarFromBytes(tx: Transaction, bytes: Array<number | TransactionArgument> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_from_bytes`,\n    arguments: [pure(tx, bytes, `vector<u8>`)],\n  });\n}\n\nexport function scalarFromU64(tx: Transaction, x: bigint | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_from_u64`,\n    arguments: [pure(tx, x, `u64`)],\n  });\n}\n\nexport function scalarInv(tx: Transaction, e: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_inv`,\n    arguments: [obj(tx, e)],\n  });\n}\n\nexport interface ScalarMulArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function scalarMul(tx: Transaction, args: ScalarMulArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_mul`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport function scalarNeg(tx: Transaction, e: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_neg`,\n    arguments: [obj(tx, e)],\n  });\n}\n\nexport function scalarOne(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_one`,\n    arguments: [],\n  });\n}\n\nexport interface ScalarSubArgs {\n  e1: TransactionObjectInput;\n  e2: TransactionObjectInput;\n}\n\nexport function scalarSub(tx: Transaction, args: ScalarSubArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_sub`,\n    arguments: [obj(tx, args.e1), obj(tx, args.e2)],\n  });\n}\n\nexport function scalarZero(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::scalar_zero`,\n    arguments: [],\n  });\n}\n\nexport function uncompressedG1Sum(tx: Transaction, terms: Array<TransactionObjectInput> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::uncompressed_g1_sum`,\n    arguments: [vector(tx, `${Element.$typeName}<${UncompressedG1.$typeName}>`, terms)],\n  });\n}\n\nexport function uncompressedG1ToG1(tx: Transaction, e: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::bls12381::uncompressed_g1_to_g1`,\n    arguments: [obj(tx, e)],\n  });\n}\n"]}