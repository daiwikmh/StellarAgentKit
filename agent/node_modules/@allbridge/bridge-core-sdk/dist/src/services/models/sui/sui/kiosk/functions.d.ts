import { GenericArg } from "../../_framework/util";
import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface BorrowArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function borrow(tx: Transaction, typeArg: string, args: BorrowArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface BorrowMutArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function borrowMut(tx: Transaction, typeArg: string, args: BorrowMutArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function default_(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function new_(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function uid(tx: Transaction, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface TakeArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function take(tx: Transaction, typeArg: string, args: TakeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function owner(tx: Transaction, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ListArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    id: string | TransactionArgument;
    price: bigint | TransactionArgument;
}
export declare function list(tx: Transaction, typeArg: string, args: ListArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface WithdrawArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    amount: bigint | TransactionArgument | TransactionArgument | null;
}
export declare function withdraw(tx: Transaction, args: WithdrawArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface UidMutAsOwnerArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
}
export declare function uidMutAsOwner(tx: Transaction, args: UidMutAsOwnerArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface BorrowValArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function borrowVal(tx: Transaction, typeArg: string, args: BorrowValArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface CloseAndWithdrawArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
}
export declare function closeAndWithdraw(tx: Transaction, args: CloseAndWithdrawArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DelistArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function delist(tx: Transaction, typeArg: string, args: DelistArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface HasAccessArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
}
export declare function hasAccess(tx: Transaction, args: HasAccessArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface HasItemArgs {
    self: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function hasItem(tx: Transaction, args: HasItemArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface HasItemWithTypeArgs {
    self: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function hasItemWithType(tx: Transaction, typeArg: string, args: HasItemWithTypeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface IsListedArgs {
    self: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function isListed(tx: Transaction, args: IsListedArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface IsListedExclusivelyArgs {
    self: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function isListedExclusively(tx: Transaction, args: IsListedExclusivelyArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface IsLockedArgs {
    self: TransactionObjectInput;
    id: string | TransactionArgument;
}
export declare function isLocked(tx: Transaction, args: IsLockedArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function itemCount(tx: Transaction, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function kioskOwnerCapFor(tx: Transaction, cap: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ListWithPurchaseCapArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    id: string | TransactionArgument;
    minPrice: bigint | TransactionArgument;
}
export declare function listWithPurchaseCap(tx: Transaction, typeArg: string, args: ListWithPurchaseCapArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface LockArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    policy: TransactionObjectInput;
    item: GenericArg;
}
export declare function lock(tx: Transaction, typeArg: string, args: LockArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface LockInternalArgs {
    self: TransactionObjectInput;
    item: GenericArg;
}
export declare function lockInternal(tx: Transaction, typeArg: string, args: LockInternalArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PlaceArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    item: GenericArg;
}
export declare function place(tx: Transaction, typeArg: string, args: PlaceArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PlaceAndListArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    item: GenericArg;
    price: bigint | TransactionArgument;
}
export declare function placeAndList(tx: Transaction, typeArg: string, args: PlaceAndListArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PlaceInternalArgs {
    self: TransactionObjectInput;
    item: GenericArg;
}
export declare function placeInternal(tx: Transaction, typeArg: string, args: PlaceInternalArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function profitsAmount(tx: Transaction, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ProfitsMutArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
}
export declare function profitsMut(tx: Transaction, args: ProfitsMutArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PurchaseArgs {
    self: TransactionObjectInput;
    id: string | TransactionArgument;
    payment: TransactionObjectInput;
}
export declare function purchase(tx: Transaction, typeArg: string, args: PurchaseArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function purchaseCapItem(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function purchaseCapKiosk(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function purchaseCapMinPrice(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PurchaseWithCapArgs {
    self: TransactionObjectInput;
    purchaseCap: TransactionObjectInput;
    payment: TransactionObjectInput;
}
export declare function purchaseWithCap(tx: Transaction, typeArg: string, args: PurchaseWithCapArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ReturnPurchaseCapArgs {
    self: TransactionObjectInput;
    purchaseCap: TransactionObjectInput;
}
export declare function returnPurchaseCap(tx: Transaction, typeArg: string, args: ReturnPurchaseCapArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ReturnValArgs {
    self: TransactionObjectInput;
    item: GenericArg;
    borrow: TransactionObjectInput;
}
export declare function returnVal(tx: Transaction, typeArg: string, args: ReturnValArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetAllowExtensionsArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    allowExtensions: boolean | TransactionArgument;
}
export declare function setAllowExtensions(tx: Transaction, args: SetAllowExtensionsArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetOwnerArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
}
export declare function setOwner(tx: Transaction, args: SetOwnerArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetOwnerCustomArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    owner: string | TransactionArgument;
}
export declare function setOwnerCustom(tx: Transaction, args: SetOwnerCustomArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function uidMut(tx: Transaction, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function uidMutInternal(tx: Transaction, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
