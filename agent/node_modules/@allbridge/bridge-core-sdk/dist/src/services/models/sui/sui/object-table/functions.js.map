{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/object-table/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { GenericArg, generic, obj } from \"../../_framework/util\";\nimport { Transaction, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport interface AddArgs {\n  table: TransactionObjectInput;\n  k: GenericArg;\n  v: GenericArg;\n}\n\nexport function add(tx: Transaction, typeArgs: [string, string], args: AddArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::add`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.table), generic(tx, `${typeArgs[0]}`, args.k), generic(tx, `${typeArgs[1]}`, args.v)],\n  });\n}\n\nexport interface BorrowArgs {\n  table: TransactionObjectInput;\n  k: GenericArg;\n}\n\nexport function borrow(tx: Transaction, typeArgs: [string, string], args: BorrowArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::borrow`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.table), generic(tx, `${typeArgs[0]}`, args.k)],\n  });\n}\n\nexport interface BorrowMutArgs {\n  table: TransactionObjectInput;\n  k: GenericArg;\n}\n\nexport function borrowMut(tx: Transaction, typeArgs: [string, string], args: BorrowMutArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::borrow_mut`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.table), generic(tx, `${typeArgs[0]}`, args.k)],\n  });\n}\n\nexport interface ContainsArgs {\n  table: TransactionObjectInput;\n  k: GenericArg;\n}\n\nexport function contains(tx: Transaction, typeArgs: [string, string], args: ContainsArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::contains`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.table), generic(tx, `${typeArgs[0]}`, args.k)],\n  });\n}\n\nexport function destroyEmpty(tx: Transaction, typeArgs: [string, string], table: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::destroy_empty`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, table)],\n  });\n}\n\nexport function isEmpty(tx: Transaction, typeArgs: [string, string], table: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::is_empty`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, table)],\n  });\n}\n\nexport function length(tx: Transaction, typeArgs: [string, string], table: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::length`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, table)],\n  });\n}\n\nexport interface RemoveArgs {\n  table: TransactionObjectInput;\n  k: GenericArg;\n}\n\nexport function remove(tx: Transaction, typeArgs: [string, string], args: RemoveArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::remove`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.table), generic(tx, `${typeArgs[0]}`, args.k)],\n  });\n}\n\nexport function new_(tx: Transaction, typeArgs: [string, string]) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::new`,\n    typeArguments: typeArgs,\n    arguments: [],\n  });\n}\n\nexport interface ValueIdArgs {\n  table: TransactionObjectInput;\n  k: GenericArg;\n}\n\nexport function valueId(tx: Transaction, typeArgs: [string, string], args: ValueIdArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::object_table::value_id`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.table), generic(tx, `${typeArgs[0]}`, args.k)],\n  });\n}\n"]}