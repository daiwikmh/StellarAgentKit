import { GenericArg } from "../../_framework/util";
import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface AddArgs {
    ext: GenericArg;
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
    permissions: bigint | TransactionArgument;
}
export declare function add(tx: Transaction, typeArg: string, args: AddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface RemoveArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
}
export declare function remove(tx: Transaction, typeArg: string, args: RemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface LockArgs {
    ext: GenericArg;
    self: TransactionObjectInput;
    item: GenericArg;
    policy: TransactionObjectInput;
}
export declare function lock(tx: Transaction, typeArgs: [string, string], args: LockArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PlaceArgs {
    ext: GenericArg;
    self: TransactionObjectInput;
    item: GenericArg;
    policy: TransactionObjectInput;
}
export declare function place(tx: Transaction, typeArgs: [string, string], args: PlaceArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function canLock(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function canPlace(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DisableArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
}
export declare function disable(tx: Transaction, typeArg: string, args: DisableArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface EnableArgs {
    self: TransactionObjectInput;
    cap: TransactionObjectInput;
}
export declare function enable(tx: Transaction, typeArg: string, args: EnableArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function extension(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function extensionMut(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function isEnabled(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function isInstalled(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface StorageArgs {
    ext: GenericArg;
    self: TransactionObjectInput;
}
export declare function storage(tx: Transaction, typeArg: string, args: StorageArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface StorageMutArgs {
    ext: GenericArg;
    self: TransactionObjectInput;
}
export declare function storageMut(tx: Transaction, typeArg: string, args: StorageMutArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
