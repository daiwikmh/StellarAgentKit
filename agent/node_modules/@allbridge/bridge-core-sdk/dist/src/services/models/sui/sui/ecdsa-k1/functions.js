"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.decompressPubkey = decompressPubkey;
exports.secp256k1Ecrecover = secp256k1Ecrecover;
exports.secp256k1Verify = secp256k1Verify;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function decompressPubkey(tx, pubkey) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::ecdsa_k1::decompress_pubkey`,
        arguments: [(0, util_1.pure)(tx, pubkey, `vector<u8>`)],
    });
}
function secp256k1Ecrecover(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::ecdsa_k1::secp256k1_ecrecover`,
        arguments: [(0, util_1.pure)(tx, args.signature, `vector<u8>`), (0, util_1.pure)(tx, args.msg, `vector<u8>`), (0, util_1.pure)(tx, args.hash, `u8`)],
    });
}
function secp256k1Verify(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::ecdsa_k1::secp256k1_verify`,
        arguments: [
            (0, util_1.pure)(tx, args.signature, `vector<u8>`),
            (0, util_1.pure)(tx, args.publicKey, `vector<u8>`),
            (0, util_1.pure)(tx, args.msg, `vector<u8>`),
            (0, util_1.pure)(tx, args.hash, `u8`),
        ],
    });
}
//# sourceMappingURL=functions.js.map