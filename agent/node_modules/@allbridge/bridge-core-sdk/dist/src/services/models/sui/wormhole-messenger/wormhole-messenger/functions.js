"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getId = getId;
exports.getVersion = getVersion;
exports.init = init;
exports.migrate = migrate;
exports.gasBalanceValue = gasBalanceValue;
exports.getGasUsage = getGasUsage;
exports.getOtherChainIds = getOtherChainIds;
exports.getOtherWormholeMessengers = getOtherWormholeMessengers;
exports.getReceivedMessages = getReceivedMessages;
exports.getSentMessages = getSentMessages;
exports.getTransactionCost = getTransactionCost;
exports.initEmitter = initEmitter;
exports.receiveMessage = receiveMessage;
exports.receiveMessageInner = receiveMessageInner;
exports.registerWormholeMessenger = registerWormholeMessenger;
exports.sendMessage = sendMessage;
exports.setGasUsage = setGasUsage;
exports.setOtherChains = setOtherChains;
exports.unregisterWormholeMessenger = unregisterWormholeMessenger;
exports.withdrawFee = withdrawFee;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function getId(tx, messenger) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::get_id`,
        arguments: [(0, util_1.obj)(tx, messenger)],
    });
}
function getVersion(tx) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::get_version`,
        arguments: [],
    });
}
function init(tx) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::init`,
        arguments: [],
    });
}
function migrate(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::migrate`,
        arguments: [(0, util_1.obj)(tx, args.adminCap), (0, util_1.obj)(tx, args.wormholeMessenger)],
    });
}
function gasBalanceValue(tx, messenger) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::gas_balance_value`,
        arguments: [(0, util_1.obj)(tx, messenger)],
    });
}
function getGasUsage(tx, messenger) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::get_gas_usage`,
        arguments: [(0, util_1.obj)(tx, messenger)],
    });
}
function getOtherChainIds(tx, messenger) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::get_other_chain_ids`,
        arguments: [(0, util_1.obj)(tx, messenger)],
    });
}
function getOtherWormholeMessengers(tx, messenger) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::get_other_wormhole_messengers`,
        arguments: [(0, util_1.obj)(tx, messenger)],
    });
}
function getReceivedMessages(tx, messenger) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::get_received_messages`,
        arguments: [(0, util_1.obj)(tx, messenger)],
    });
}
function getSentMessages(tx, messenger) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::get_sent_messages`,
        arguments: [(0, util_1.obj)(tx, messenger)],
    });
}
function getTransactionCost(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::get_transaction_cost`,
        arguments: [
            (0, util_1.obj)(tx, args.messenger),
            (0, util_1.obj)(tx, args.wormholeState),
            (0, util_1.obj)(tx, args.gasOracle),
            (0, util_1.pure)(tx, args.chainId, `u8`),
        ],
    });
}
function initEmitter(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::init_emitter`,
        arguments: [(0, util_1.obj)(tx, args.whMessenger), (0, util_1.obj)(tx, args.wormholeState)],
    });
}
function receiveMessage(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::receive_message`,
        arguments: [
            (0, util_1.obj)(tx, args.whMessenger),
            (0, util_1.pure)(tx, args.encodedMsg, `vector<u8>`),
            (0, util_1.obj)(tx, args.wormholeState),
            (0, util_1.obj)(tx, args.theClock),
        ],
    });
}
function receiveMessageInner(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::receive_message_inner`,
        arguments: [
            (0, util_1.obj)(tx, args.whMessenger),
            (0, util_1.pure)(tx, args.sequence, `u64`),
            (0, util_1.pure)(tx, args.emitterChainId, `u16`),
            (0, util_1.obj)(tx, args.emitterAddress),
            (0, util_1.obj)(tx, args.payload),
        ],
    });
}
function registerWormholeMessenger(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::register_wormhole_messenger`,
        arguments: [(0, util_1.obj)(tx, args.whMessenger), (0, util_1.pure)(tx, args.chainId, `u16`), (0, util_1.obj)(tx, args.whAddress)],
    });
}
function sendMessage(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::send_message`,
        arguments: [
            (0, util_1.obj)(tx, args.whMessenger),
            (0, util_1.obj)(tx, args.wormholeState),
            (0, util_1.obj)(tx, args.gasOracle),
            (0, util_1.obj)(tx, args.payload),
            (0, util_1.obj)(tx, args.sender),
            (0, util_1.obj)(tx, args.theClock),
            (0, util_1.obj)(tx, args.coin),
        ],
    });
}
function setGasUsage(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::set_gas_usage`,
        arguments: [(0, util_1.obj)(tx, args.whMessenger), (0, util_1.pure)(tx, args.chainId, `u8`), (0, util_1.pure)(tx, args.gasAmount, `u64`)],
    });
}
function setOtherChains(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::set_other_chains`,
        arguments: [(0, util_1.obj)(tx, args.whMessenger), (0, util_1.pure)(tx, args.otherChainIds, `vector<bool>`)],
    });
}
function unregisterWormholeMessenger(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::unregister_wormhole_messenger`,
        arguments: [(0, util_1.obj)(tx, args.whMessenger), (0, util_1.pure)(tx, args.chainId, `u16`)],
    });
}
function withdrawFee(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::wormhole_messenger::withdraw_fee`,
        arguments: [(0, util_1.obj)(tx, args.whMessenger), (0, util_1.pure)(tx, args.amount, `u64`)],
    });
}
//# sourceMappingURL=functions.js.map