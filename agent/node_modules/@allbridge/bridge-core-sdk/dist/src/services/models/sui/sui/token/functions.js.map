{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/token/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { Option } from \"../../_dependencies/source/0x1/option/structs\";\nimport { String } from \"../../_dependencies/source/0x1/string/structs\";\nimport { GenericArg, generic, obj, option, pure } from \"../../_framework/util\";\nimport { Balance } from \"../balance/structs\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function value(tx: Transaction, typeArg: string, t: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::value`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, t)],\n  });\n}\n\nexport interface AllowArgs {\n  self: TransactionObjectInput;\n  cap: TransactionObjectInput;\n  action: string | TransactionArgument;\n}\n\nexport function allow(tx: Transaction, typeArg: string, args: AllowArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::allow`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), obj(tx, args.cap), pure(tx, args.action, `${String.$typeName}`)],\n  });\n}\n\nexport function sender(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::sender`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function amount(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::amount`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function recipient(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::recipient`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface TransferArgs {\n  t: TransactionObjectInput;\n  recipient: string | TransactionArgument;\n}\n\nexport function transfer(tx: Transaction, typeArg: string, args: TransferArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::transfer`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.t), pure(tx, args.recipient, `address`)],\n  });\n}\n\nexport function key(tx: Transaction, typeArg: string) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::key`,\n    typeArguments: [typeArg],\n    arguments: [],\n  });\n}\n\nexport function destroyZero(tx: Transaction, typeArg: string, token: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::destroy_zero`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, token)],\n  });\n}\n\nexport interface JoinArgs {\n  token: TransactionObjectInput;\n  another: TransactionObjectInput;\n}\n\nexport function join(tx: Transaction, typeArg: string, args: JoinArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::join`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.token), obj(tx, args.another)],\n  });\n}\n\nexport interface SplitArgs {\n  token: TransactionObjectInput;\n  amount: bigint | TransactionArgument;\n}\n\nexport function split(tx: Transaction, typeArg: string, args: SplitArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::split`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.token), pure(tx, args.amount, `u64`)],\n  });\n}\n\nexport function zero(tx: Transaction, typeArg: string) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::zero`,\n    typeArguments: [typeArg],\n    arguments: [],\n  });\n}\n\nexport interface BurnArgs {\n  cap: TransactionObjectInput;\n  token: TransactionObjectInput;\n}\n\nexport function burn(tx: Transaction, typeArg: string, args: BurnArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::burn`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.cap), obj(tx, args.token)],\n  });\n}\n\nexport interface MintArgs {\n  cap: TransactionObjectInput;\n  amount: bigint | TransactionArgument;\n}\n\nexport function mint(tx: Transaction, typeArg: string, args: MintArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::mint`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.cap), pure(tx, args.amount, `u64`)],\n  });\n}\n\nexport interface ConfirmRequestArgs {\n  policy: TransactionObjectInput;\n  request: TransactionObjectInput;\n}\n\nexport function confirmRequest(tx: Transaction, typeArg: string, args: ConfirmRequestArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::confirm_request`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.policy), obj(tx, args.request)],\n  });\n}\n\nexport interface NewRequestArgs {\n  name: string | TransactionArgument;\n  amount: bigint | TransactionArgument;\n  recipient: string | TransactionArgument | TransactionArgument | null;\n  spentBalance: TransactionObjectInput | TransactionArgument | null;\n}\n\nexport function newRequest(tx: Transaction, typeArg: string, args: NewRequestArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::new_request`,\n    typeArguments: [typeArg],\n    arguments: [\n      pure(tx, args.name, `${String.$typeName}`),\n      pure(tx, args.amount, `u64`),\n      pure(tx, args.recipient, `${Option.$typeName}<address>`),\n      option(tx, `${Balance.$typeName}<${typeArg}>`, args.spentBalance),\n    ],\n  });\n}\n\nexport interface RulesArgs {\n  self: TransactionObjectInput;\n  action: string | TransactionArgument;\n}\n\nexport function rules(tx: Transaction, typeArg: string, args: RulesArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::rules`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), pure(tx, args.action, `${String.$typeName}`)],\n  });\n}\n\nexport function keep(tx: Transaction, typeArg: string, token: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::keep`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, token)],\n  });\n}\n\nexport function action(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::action`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface AddApprovalArgs {\n  t: GenericArg;\n  request: TransactionObjectInput;\n}\n\nexport function addApproval(tx: Transaction, typeArgs: [string, string], args: AddApprovalArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::add_approval`,\n    typeArguments: typeArgs,\n    arguments: [generic(tx, `${typeArgs[1]}`, args.t), obj(tx, args.request)],\n  });\n}\n\nexport interface AddRuleConfigArgs {\n  rule: GenericArg;\n  self: TransactionObjectInput;\n  cap: TransactionObjectInput;\n  config: GenericArg;\n}\n\nexport function addRuleConfig(tx: Transaction, typeArgs: [string, string, string], args: AddRuleConfigArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::add_rule_config`,\n    typeArguments: typeArgs,\n    arguments: [\n      generic(tx, `${typeArgs[1]}`, args.rule),\n      obj(tx, args.self),\n      obj(tx, args.cap),\n      generic(tx, `${typeArgs[2]}`, args.config),\n    ],\n  });\n}\n\nexport interface AddRuleForActionArgs {\n  self: TransactionObjectInput;\n  cap: TransactionObjectInput;\n  action: string | TransactionArgument;\n}\n\nexport function addRuleForAction(tx: Transaction, typeArgs: [string, string], args: AddRuleForActionArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::add_rule_for_action`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.self), obj(tx, args.cap), pure(tx, args.action, `${String.$typeName}`)],\n  });\n}\n\nexport function approvals(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::approvals`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface ConfirmRequestMutArgs {\n  policy: TransactionObjectInput;\n  request: TransactionObjectInput;\n}\n\nexport function confirmRequestMut(tx: Transaction, typeArg: string, args: ConfirmRequestMutArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::confirm_request_mut`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.policy), obj(tx, args.request)],\n  });\n}\n\nexport interface ConfirmWithPolicyCapArgs {\n  policyCap: TransactionObjectInput;\n  request: TransactionObjectInput;\n}\n\nexport function confirmWithPolicyCap(tx: Transaction, typeArg: string, args: ConfirmWithPolicyCapArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::confirm_with_policy_cap`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.policyCap), obj(tx, args.request)],\n  });\n}\n\nexport interface ConfirmWithTreasuryCapArgs {\n  treasuryCap: TransactionObjectInput;\n  request: TransactionObjectInput;\n}\n\nexport function confirmWithTreasuryCap(tx: Transaction, typeArg: string, args: ConfirmWithTreasuryCapArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::confirm_with_treasury_cap`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.treasuryCap), obj(tx, args.request)],\n  });\n}\n\nexport interface DisallowArgs {\n  self: TransactionObjectInput;\n  cap: TransactionObjectInput;\n  action: string | TransactionArgument;\n}\n\nexport function disallow(tx: Transaction, typeArg: string, args: DisallowArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::disallow`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), obj(tx, args.cap), pure(tx, args.action, `${String.$typeName}`)],\n  });\n}\n\nexport interface FlushArgs {\n  self: TransactionObjectInput;\n  cap: TransactionObjectInput;\n}\n\nexport function flush(tx: Transaction, typeArg: string, args: FlushArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::flush`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), obj(tx, args.cap)],\n  });\n}\n\nexport function fromCoin(tx: Transaction, typeArg: string, coin: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::from_coin`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, coin)],\n  });\n}\n\nexport function fromCoinAction(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::from_coin_action`,\n    arguments: [],\n  });\n}\n\nexport function hasRuleConfig(tx: Transaction, typeArgs: [string, string], self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::has_rule_config`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function hasRuleConfigWithType(\n  tx: Transaction,\n  typeArgs: [string, string, string],\n  self: TransactionObjectInput\n) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::has_rule_config_with_type`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface IsAllowedArgs {\n  self: TransactionObjectInput;\n  action: string | TransactionArgument;\n}\n\nexport function isAllowed(tx: Transaction, typeArg: string, args: IsAllowedArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::is_allowed`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), pure(tx, args.action, `${String.$typeName}`)],\n  });\n}\n\nexport function newPolicy(tx: Transaction, typeArg: string, treasuryCap: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::new_policy`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, treasuryCap)],\n  });\n}\n\nexport function spentBalance(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::spent_balance`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface RemoveRuleConfigArgs {\n  self: TransactionObjectInput;\n  cap: TransactionObjectInput;\n}\n\nexport function removeRuleConfig(tx: Transaction, typeArgs: [string, string, string], args: RemoveRuleConfigArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::remove_rule_config`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.self), obj(tx, args.cap)],\n  });\n}\n\nexport interface RemoveRuleForActionArgs {\n  self: TransactionObjectInput;\n  cap: TransactionObjectInput;\n  action: string | TransactionArgument;\n}\n\nexport function removeRuleForAction(tx: Transaction, typeArgs: [string, string], args: RemoveRuleForActionArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::remove_rule_for_action`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.self), obj(tx, args.cap), pure(tx, args.action, `${String.$typeName}`)],\n  });\n}\n\nexport interface RuleConfigArgs {\n  rule: GenericArg;\n  self: TransactionObjectInput;\n}\n\nexport function ruleConfig(tx: Transaction, typeArgs: [string, string, string], args: RuleConfigArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::rule_config`,\n    typeArguments: typeArgs,\n    arguments: [generic(tx, `${typeArgs[1]}`, args.rule), obj(tx, args.self)],\n  });\n}\n\nexport interface RuleConfigMutArgs {\n  rule: GenericArg;\n  self: TransactionObjectInput;\n  cap: TransactionObjectInput;\n}\n\nexport function ruleConfigMut(tx: Transaction, typeArgs: [string, string, string], args: RuleConfigMutArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::rule_config_mut`,\n    typeArguments: typeArgs,\n    arguments: [generic(tx, `${typeArgs[1]}`, args.rule), obj(tx, args.self), obj(tx, args.cap)],\n  });\n}\n\nexport function sharePolicy(tx: Transaction, typeArg: string, policy: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::share_policy`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, policy)],\n  });\n}\n\nexport function spend(tx: Transaction, typeArg: string, t: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::spend`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, t)],\n  });\n}\n\nexport function spendAction(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::spend_action`,\n    arguments: [],\n  });\n}\n\nexport function spent(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::spent`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function toCoin(tx: Transaction, typeArg: string, t: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::to_coin`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, t)],\n  });\n}\n\nexport function toCoinAction(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::to_coin_action`,\n    arguments: [],\n  });\n}\n\nexport function transferAction(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::token::transfer_action`,\n    arguments: [],\n  });\n}\n"]}