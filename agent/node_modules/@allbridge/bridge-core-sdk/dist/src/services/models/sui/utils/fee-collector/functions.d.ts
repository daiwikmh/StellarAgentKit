import { GenericArg } from "../../_framework/util";
import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export declare function new_(tx: Transaction, typeArg: string): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function key(tx: Transaction, typeArg: string): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function balance(tx: Transaction, typeArgs: [string, string], feeCollector: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface WithdrawArgs {
    cap: GenericArg;
    feeCollector: TransactionObjectInput;
    amount: bigint | TransactionArgument;
}
export declare function withdraw(tx: Transaction, typeArgs: [string, string], args: WithdrawArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface AddFeeArgs {
    feeCollector: TransactionObjectInput;
    coin: TransactionObjectInput;
}
export declare function addFee(tx: Transaction, typeArgs: [string, string], args: AddFeeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
