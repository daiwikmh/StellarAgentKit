import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export declare function delete_(tx: Transaction, verifiedIssuer: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function owner(tx: Transaction, verifiedIssuer: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function issuer(tx: Transaction, verifiedIssuer: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface CheckZkloginIssuerArgs {
    address: string | TransactionArgument;
    addressSeed: bigint | TransactionArgument;
    issuer: string | TransactionArgument;
}
export declare function checkZkloginIssuer(tx: Transaction, args: CheckZkloginIssuerArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface CheckZkloginIssuerInternalArgs {
    address: string | TransactionArgument;
    addressSeed: bigint | TransactionArgument;
    issuer: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function checkZkloginIssuerInternal(tx: Transaction, args: CheckZkloginIssuerInternalArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface VerifyZkloginIssuerArgs {
    addressSeed: bigint | TransactionArgument;
    issuer: string | TransactionArgument;
}
export declare function verifyZkloginIssuer(tx: Transaction, args: VerifyZkloginIssuerArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
