import { GenericArg } from "../../_framework/util";
import { Transaction, TransactionObjectInput } from "@mysten/sui/transactions";
export interface AddArgs {
    set: TransactionObjectInput;
    key: GenericArg;
}
export declare function add(tx: Transaction, typeArg: string, args: AddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ContainsArgs {
    set: TransactionObjectInput;
    key: GenericArg;
}
export declare function contains(tx: Transaction, typeArg: string, args: ContainsArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function destroyEmpty(tx: Transaction, typeArg: string, set: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface RemoveArgs {
    set: TransactionObjectInput;
    key: GenericArg;
}
export declare function remove(tx: Transaction, typeArg: string, args: RemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function new_(tx: Transaction, typeArg: string): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
