import { PhantomReified, Reified, StructClass, ToField, ToTypeStr } from "../../../../_framework/reified";
import { FieldsWithTypes } from "../../../../_framework/util";
import { SuiClient, SuiObjectData, SuiParsedData } from "@mysten/sui/client";
export declare function isUQ32_32(type: string): boolean;
export interface UQ32_32Fields {
    pos0: ToField<"u64">;
}
export type UQ32_32Reified = Reified<UQ32_32, UQ32_32Fields>;
export declare class UQ32_32 implements StructClass {
    __StructClass: true;
    static get $typeName(): string;
    static readonly $numTypeParams = 0;
    static readonly $isPhantom: readonly [];
    readonly $typeName: string;
    readonly $fullTypeName: string;
    readonly $typeArgs: [];
    readonly $isPhantom: readonly [];
    readonly pos0: ToField<"u64">;
    private constructor();
    static reified(): UQ32_32Reified;
    static get r(): import("../../../../_framework/reified").StructClassReified<UQ32_32, UQ32_32Fields>;
    static phantom(): PhantomReified<ToTypeStr<UQ32_32>>;
    static get p(): PhantomReified<string>;
    static get bcs(): import("@mysten/sui/dist/cjs/bcs").BcsType<{
        pos0: string;
    }, {
        pos0: string | number | bigint;
    }>;
    static fromFields(fields: Record<string, any>): UQ32_32;
    static fromFieldsWithTypes(item: FieldsWithTypes): UQ32_32;
    static fromBcs(data: Uint8Array): UQ32_32;
    toJSONField(): {
        pos0: string;
    };
    toJSON(): {
        pos0: string;
        $typeName: string;
        $typeArgs: [];
    };
    static fromJSONField(field: any): UQ32_32;
    static fromJSON(json: Record<string, any>): UQ32_32;
    static fromSuiParsedData(content: SuiParsedData): UQ32_32;
    static fromSuiObjectData(data: SuiObjectData): UQ32_32;
    static fetch(client: SuiClient, id: string): Promise<UQ32_32>;
}
