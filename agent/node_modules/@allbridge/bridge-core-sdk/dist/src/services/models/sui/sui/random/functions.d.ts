import { GenericArg } from "../../_framework/util";
import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export declare function create(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function loadInner(tx: Transaction, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function loadInnerMut(tx: Transaction, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function deriveNextBlock(tx: Transaction, g: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function fillBuffer(tx: Transaction, g: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function generateBool(tx: Transaction, g: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GenerateBytesArgs {
    g: TransactionObjectInput;
    numOfBytes: number | TransactionArgument;
}
export declare function generateBytes(tx: Transaction, args: GenerateBytesArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function generateU128(tx: Transaction, g: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GenerateU128InRangeArgs {
    g: TransactionObjectInput;
    min: bigint | TransactionArgument;
    max: bigint | TransactionArgument;
}
export declare function generateU128InRange(tx: Transaction, args: GenerateU128InRangeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function generateU16(tx: Transaction, g: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GenerateU16InRangeArgs {
    g: TransactionObjectInput;
    min: number | TransactionArgument;
    max: number | TransactionArgument;
}
export declare function generateU16InRange(tx: Transaction, args: GenerateU16InRangeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function generateU256(tx: Transaction, g: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function generateU32(tx: Transaction, g: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GenerateU32InRangeArgs {
    g: TransactionObjectInput;
    min: number | TransactionArgument;
    max: number | TransactionArgument;
}
export declare function generateU32InRange(tx: Transaction, args: GenerateU32InRangeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function generateU64(tx: Transaction, g: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GenerateU64InRangeArgs {
    g: TransactionObjectInput;
    min: bigint | TransactionArgument;
    max: bigint | TransactionArgument;
}
export declare function generateU64InRange(tx: Transaction, args: GenerateU64InRangeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function generateU8(tx: Transaction, g: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GenerateU8InRangeArgs {
    g: TransactionObjectInput;
    min: number | TransactionArgument;
    max: number | TransactionArgument;
}
export declare function generateU8InRange(tx: Transaction, args: GenerateU8InRangeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function newGenerator(tx: Transaction, r: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ShuffleArgs {
    g: TransactionObjectInput;
    v: Array<GenericArg> | TransactionArgument;
}
export declare function shuffle(tx: Transaction, typeArg: string, args: ShuffleArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface U128InRangeArgs {
    g: TransactionObjectInput;
    min: bigint | TransactionArgument;
    max: bigint | TransactionArgument;
    numOfBytes: number | TransactionArgument;
}
export declare function u128InRange(tx: Transaction, args: U128InRangeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface U256FromBytesArgs {
    g: TransactionObjectInput;
    numOfBytes: number | TransactionArgument;
}
export declare function u256FromBytes(tx: Transaction, args: U256FromBytesArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface UpdateRandomnessStateArgs {
    self: TransactionObjectInput;
    newRound: bigint | TransactionArgument;
    newBytes: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function updateRandomnessState(tx: Transaction, args: UpdateRandomnessStateArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
