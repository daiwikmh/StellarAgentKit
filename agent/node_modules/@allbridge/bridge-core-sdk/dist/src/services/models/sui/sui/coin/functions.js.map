{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/coin/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { String as String1 } from \"../../_dependencies/source/0x1/ascii/structs\";\nimport { String } from \"../../_dependencies/source/0x1/string/structs\";\nimport { GenericArg, generic, obj, option, pure } from \"../../_framework/util\";\nimport { Url } from \"../url/structs\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function value(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::value`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface TakeArgs {\n  balance: TransactionObjectInput;\n  value: bigint | TransactionArgument;\n}\n\nexport function take(tx: Transaction, typeArg: string, args: TakeArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::take`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.balance), pure(tx, args.value, `u64`)],\n  });\n}\n\nexport function balance(tx: Transaction, typeArg: string, coin: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::balance`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, coin)],\n  });\n}\n\nexport function destroyZero(tx: Transaction, typeArg: string, c: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::destroy_zero`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, c)],\n  });\n}\n\nexport interface JoinArgs {\n  self: TransactionObjectInput;\n  c: TransactionObjectInput;\n}\n\nexport function join(tx: Transaction, typeArg: string, args: JoinArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::join`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), obj(tx, args.c)],\n  });\n}\n\nexport interface SplitArgs {\n  self: TransactionObjectInput;\n  splitAmount: bigint | TransactionArgument;\n}\n\nexport function split(tx: Transaction, typeArg: string, args: SplitArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::split`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), pure(tx, args.splitAmount, `u64`)],\n  });\n}\n\nexport function supply(tx: Transaction, typeArg: string, treasury: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::supply`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, treasury)],\n  });\n}\n\nexport function zero(tx: Transaction, typeArg: string) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::zero`,\n    typeArguments: [typeArg],\n    arguments: [],\n  });\n}\n\nexport function balanceMut(tx: Transaction, typeArg: string, coin: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::balance_mut`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, coin)],\n  });\n}\n\nexport interface BurnArgs {\n  cap: TransactionObjectInput;\n  c: TransactionObjectInput;\n}\n\nexport function burn(tx: Transaction, typeArg: string, args: BurnArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::burn`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.cap), obj(tx, args.c)],\n  });\n}\n\nexport interface CreateCurrencyArgs {\n  witness: GenericArg;\n  decimals: number | TransactionArgument;\n  symbol: Array<number | TransactionArgument> | TransactionArgument;\n  name: Array<number | TransactionArgument> | TransactionArgument;\n  description: Array<number | TransactionArgument> | TransactionArgument;\n  iconUrl: TransactionObjectInput | TransactionArgument | null;\n}\n\nexport function createCurrency(tx: Transaction, typeArg: string, args: CreateCurrencyArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::create_currency`,\n    typeArguments: [typeArg],\n    arguments: [\n      generic(tx, `${typeArg}`, args.witness),\n      pure(tx, args.decimals, `u8`),\n      pure(tx, args.symbol, `vector<u8>`),\n      pure(tx, args.name, `vector<u8>`),\n      pure(tx, args.description, `vector<u8>`),\n      option(tx, `${Url.$typeName}`, args.iconUrl),\n    ],\n  });\n}\n\nexport interface CreateRegulatedCurrencyArgs {\n  witness: GenericArg;\n  decimals: number | TransactionArgument;\n  symbol: Array<number | TransactionArgument> | TransactionArgument;\n  name: Array<number | TransactionArgument> | TransactionArgument;\n  description: Array<number | TransactionArgument> | TransactionArgument;\n  iconUrl: TransactionObjectInput | TransactionArgument | null;\n}\n\nexport function createRegulatedCurrency(tx: Transaction, typeArg: string, args: CreateRegulatedCurrencyArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::create_regulated_currency`,\n    typeArguments: [typeArg],\n    arguments: [\n      generic(tx, `${typeArg}`, args.witness),\n      pure(tx, args.decimals, `u8`),\n      pure(tx, args.symbol, `vector<u8>`),\n      pure(tx, args.name, `vector<u8>`),\n      pure(tx, args.description, `vector<u8>`),\n      option(tx, `${Url.$typeName}`, args.iconUrl),\n    ],\n  });\n}\n\nexport interface CreateRegulatedCurrencyV2Args {\n  witness: GenericArg;\n  decimals: number | TransactionArgument;\n  symbol: Array<number | TransactionArgument> | TransactionArgument;\n  name: Array<number | TransactionArgument> | TransactionArgument;\n  description: Array<number | TransactionArgument> | TransactionArgument;\n  iconUrl: TransactionObjectInput | TransactionArgument | null;\n  allowGlobalPause: boolean | TransactionArgument;\n}\n\nexport function createRegulatedCurrencyV2(tx: Transaction, typeArg: string, args: CreateRegulatedCurrencyV2Args) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::create_regulated_currency_v2`,\n    typeArguments: [typeArg],\n    arguments: [\n      generic(tx, `${typeArg}`, args.witness),\n      pure(tx, args.decimals, `u8`),\n      pure(tx, args.symbol, `vector<u8>`),\n      pure(tx, args.name, `vector<u8>`),\n      pure(tx, args.description, `vector<u8>`),\n      option(tx, `${Url.$typeName}`, args.iconUrl),\n      pure(tx, args.allowGlobalPause, `bool`),\n    ],\n  });\n}\n\nexport interface DenyListAddArgs {\n  denyList: TransactionObjectInput;\n  denyCap: TransactionObjectInput;\n  addr: string | TransactionArgument;\n}\n\nexport function denyListAdd(tx: Transaction, typeArg: string, args: DenyListAddArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_add`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), obj(tx, args.denyCap), pure(tx, args.addr, `address`)],\n  });\n}\n\nexport interface DenyListContainsArgs {\n  denyList: TransactionObjectInput;\n  addr: string | TransactionArgument;\n}\n\nexport function denyListContains(tx: Transaction, typeArg: string, args: DenyListContainsArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_contains`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), pure(tx, args.addr, `address`)],\n  });\n}\n\nexport interface DenyListRemoveArgs {\n  denyList: TransactionObjectInput;\n  denyCap: TransactionObjectInput;\n  addr: string | TransactionArgument;\n}\n\nexport function denyListRemove(tx: Transaction, typeArg: string, args: DenyListRemoveArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_remove`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), obj(tx, args.denyCap), pure(tx, args.addr, `address`)],\n  });\n}\n\nexport interface DenyListV2AddArgs {\n  denyList: TransactionObjectInput;\n  denyCap: TransactionObjectInput;\n  addr: string | TransactionArgument;\n}\n\nexport function denyListV2Add(tx: Transaction, typeArg: string, args: DenyListV2AddArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_v2_add`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), obj(tx, args.denyCap), pure(tx, args.addr, `address`)],\n  });\n}\n\nexport interface DenyListV2ContainsCurrentEpochArgs {\n  denyList: TransactionObjectInput;\n  addr: string | TransactionArgument;\n}\n\nexport function denyListV2ContainsCurrentEpoch(\n  tx: Transaction,\n  typeArg: string,\n  args: DenyListV2ContainsCurrentEpochArgs\n) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_v2_contains_current_epoch`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), pure(tx, args.addr, `address`)],\n  });\n}\n\nexport interface DenyListV2ContainsNextEpochArgs {\n  denyList: TransactionObjectInput;\n  addr: string | TransactionArgument;\n}\n\nexport function denyListV2ContainsNextEpoch(tx: Transaction, typeArg: string, args: DenyListV2ContainsNextEpochArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_v2_contains_next_epoch`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), pure(tx, args.addr, `address`)],\n  });\n}\n\nexport interface DenyListV2DisableGlobalPauseArgs {\n  denyList: TransactionObjectInput;\n  denyCap: TransactionObjectInput;\n}\n\nexport function denyListV2DisableGlobalPause(tx: Transaction, typeArg: string, args: DenyListV2DisableGlobalPauseArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_v2_disable_global_pause`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), obj(tx, args.denyCap)],\n  });\n}\n\nexport interface DenyListV2EnableGlobalPauseArgs {\n  denyList: TransactionObjectInput;\n  denyCap: TransactionObjectInput;\n}\n\nexport function denyListV2EnableGlobalPause(tx: Transaction, typeArg: string, args: DenyListV2EnableGlobalPauseArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_v2_enable_global_pause`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), obj(tx, args.denyCap)],\n  });\n}\n\nexport function denyListV2IsGlobalPauseEnabledCurrentEpoch(\n  tx: Transaction,\n  typeArg: string,\n  denyList: TransactionObjectInput\n) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_v2_is_global_pause_enabled_current_epoch`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, denyList)],\n  });\n}\n\nexport function denyListV2IsGlobalPauseEnabledNextEpoch(\n  tx: Transaction,\n  typeArg: string,\n  denyList: TransactionObjectInput\n) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_v2_is_global_pause_enabled_next_epoch`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, denyList)],\n  });\n}\n\nexport interface DenyListV2RemoveArgs {\n  denyList: TransactionObjectInput;\n  denyCap: TransactionObjectInput;\n  addr: string | TransactionArgument;\n}\n\nexport function denyListV2Remove(tx: Transaction, typeArg: string, args: DenyListV2RemoveArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::deny_list_v2_remove`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), obj(tx, args.denyCap), pure(tx, args.addr, `address`)],\n  });\n}\n\nexport interface DivideIntoNArgs {\n  self: TransactionObjectInput;\n  n: bigint | TransactionArgument;\n}\n\nexport function divideIntoN(tx: Transaction, typeArg: string, args: DivideIntoNArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::divide_into_n`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), pure(tx, args.n, `u64`)],\n  });\n}\n\nexport function fromBalance(tx: Transaction, typeArg: string, balance: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::from_balance`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, balance)],\n  });\n}\n\nexport function getDecimals(tx: Transaction, typeArg: string, metadata: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::get_decimals`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, metadata)],\n  });\n}\n\nexport function getDescription(tx: Transaction, typeArg: string, metadata: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::get_description`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, metadata)],\n  });\n}\n\nexport function getIconUrl(tx: Transaction, typeArg: string, metadata: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::get_icon_url`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, metadata)],\n  });\n}\n\nexport function getName(tx: Transaction, typeArg: string, metadata: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::get_name`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, metadata)],\n  });\n}\n\nexport function getSymbol(tx: Transaction, typeArg: string, metadata: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::get_symbol`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, metadata)],\n  });\n}\n\nexport function intoBalance(tx: Transaction, typeArg: string, coin: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::into_balance`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, coin)],\n  });\n}\n\nexport interface MigrateRegulatedCurrencyToV2Args {\n  denyList: TransactionObjectInput;\n  cap: TransactionObjectInput;\n  allowGlobalPause: boolean | TransactionArgument;\n}\n\nexport function migrateRegulatedCurrencyToV2(tx: Transaction, typeArg: string, args: MigrateRegulatedCurrencyToV2Args) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::migrate_regulated_currency_to_v2`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.denyList), obj(tx, args.cap), pure(tx, args.allowGlobalPause, `bool`)],\n  });\n}\n\nexport interface MintArgs {\n  cap: TransactionObjectInput;\n  value: bigint | TransactionArgument;\n}\n\nexport function mint(tx: Transaction, typeArg: string, args: MintArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::mint`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.cap), pure(tx, args.value, `u64`)],\n  });\n}\n\nexport interface MintAndTransferArgs {\n  c: TransactionObjectInput;\n  amount: bigint | TransactionArgument;\n  recipient: string | TransactionArgument;\n}\n\nexport function mintAndTransfer(tx: Transaction, typeArg: string, args: MintAndTransferArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::mint_and_transfer`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.c), pure(tx, args.amount, `u64`), pure(tx, args.recipient, `address`)],\n  });\n}\n\nexport interface MintBalanceArgs {\n  cap: TransactionObjectInput;\n  value: bigint | TransactionArgument;\n}\n\nexport function mintBalance(tx: Transaction, typeArg: string, args: MintBalanceArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::mint_balance`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.cap), pure(tx, args.value, `u64`)],\n  });\n}\n\nexport interface PutArgs {\n  balance: TransactionObjectInput;\n  coin: TransactionObjectInput;\n}\n\nexport function put(tx: Transaction, typeArg: string, args: PutArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::put`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.balance), obj(tx, args.coin)],\n  });\n}\n\nexport function supplyImmut(tx: Transaction, typeArg: string, treasury: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::supply_immut`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, treasury)],\n  });\n}\n\nexport function supplyMut(tx: Transaction, typeArg: string, treasury: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::supply_mut`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, treasury)],\n  });\n}\n\nexport function totalSupply(tx: Transaction, typeArg: string, cap: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::total_supply`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, cap)],\n  });\n}\n\nexport function treasuryIntoSupply(tx: Transaction, typeArg: string, treasury: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::treasury_into_supply`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, treasury)],\n  });\n}\n\nexport interface UpdateDescriptionArgs {\n  treasury: TransactionObjectInput;\n  metadata: TransactionObjectInput;\n  description: string | TransactionArgument;\n}\n\nexport function updateDescription(tx: Transaction, typeArg: string, args: UpdateDescriptionArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::update_description`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.treasury), obj(tx, args.metadata), pure(tx, args.description, `${String.$typeName}`)],\n  });\n}\n\nexport interface UpdateIconUrlArgs {\n  treasury: TransactionObjectInput;\n  metadata: TransactionObjectInput;\n  url: string | TransactionArgument;\n}\n\nexport function updateIconUrl(tx: Transaction, typeArg: string, args: UpdateIconUrlArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::update_icon_url`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.treasury), obj(tx, args.metadata), pure(tx, args.url, `${String1.$typeName}`)],\n  });\n}\n\nexport interface UpdateNameArgs {\n  treasury: TransactionObjectInput;\n  metadata: TransactionObjectInput;\n  name: string | TransactionArgument;\n}\n\nexport function updateName(tx: Transaction, typeArg: string, args: UpdateNameArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::update_name`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.treasury), obj(tx, args.metadata), pure(tx, args.name, `${String.$typeName}`)],\n  });\n}\n\nexport interface UpdateSymbolArgs {\n  treasury: TransactionObjectInput;\n  metadata: TransactionObjectInput;\n  symbol: string | TransactionArgument;\n}\n\nexport function updateSymbol(tx: Transaction, typeArg: string, args: UpdateSymbolArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::coin::update_symbol`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.treasury), obj(tx, args.metadata), pure(tx, args.symbol, `${String1.$typeName}`)],\n  });\n}\n"]}