"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.add = add;
exports.contains = contains;
exports.destroyEmpty = destroyEmpty;
exports.remove = remove;
exports.new_ = new_;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function add(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::set::add`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.set), (0, util_1.generic)(tx, `${typeArg}`, args.key)],
    });
}
function contains(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::set::contains`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.set), (0, util_1.generic)(tx, `${typeArg}`, args.key)],
    });
}
function destroyEmpty(tx, typeArg, set) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::set::destroy_empty`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, set)],
    });
}
function remove(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::set::remove`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.set), (0, util_1.generic)(tx, `${typeArg}`, args.key)],
    });
}
function new_(tx, typeArg) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::set::new`,
        typeArguments: [typeArg],
        arguments: [],
    });
}
//# sourceMappingURL=functions.js.map