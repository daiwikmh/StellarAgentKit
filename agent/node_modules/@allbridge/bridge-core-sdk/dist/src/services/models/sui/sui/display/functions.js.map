{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/display/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { String } from \"../../_dependencies/source/0x1/string/structs\";\nimport { obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport interface AddArgs {\n  self: TransactionObjectInput;\n  name: string | TransactionArgument;\n  value: string | TransactionArgument;\n}\n\nexport function add(tx: Transaction, typeArg: string, args: AddArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::add`,\n    typeArguments: [typeArg],\n    arguments: [\n      obj(tx, args.self),\n      pure(tx, args.name, `${String.$typeName}`),\n      pure(tx, args.value, `${String.$typeName}`),\n    ],\n  });\n}\n\nexport interface RemoveArgs {\n  self: TransactionObjectInput;\n  name: string | TransactionArgument;\n}\n\nexport function remove(tx: Transaction, typeArg: string, args: RemoveArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::remove`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), pure(tx, args.name, `${String.$typeName}`)],\n  });\n}\n\nexport function new_(tx: Transaction, typeArg: string, pub: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::new`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, pub)],\n  });\n}\n\nexport function version(tx: Transaction, typeArg: string, d: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::version`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, d)],\n  });\n}\n\nexport interface AddInternalArgs {\n  display: TransactionObjectInput;\n  name: string | TransactionArgument;\n  value: string | TransactionArgument;\n}\n\nexport function addInternal(tx: Transaction, typeArg: string, args: AddInternalArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::add_internal`,\n    typeArguments: [typeArg],\n    arguments: [\n      obj(tx, args.display),\n      pure(tx, args.name, `${String.$typeName}`),\n      pure(tx, args.value, `${String.$typeName}`),\n    ],\n  });\n}\n\nexport interface AddMultipleArgs {\n  self: TransactionObjectInput;\n  fields: Array<string | TransactionArgument> | TransactionArgument;\n  values: Array<string | TransactionArgument> | TransactionArgument;\n}\n\nexport function addMultiple(tx: Transaction, typeArg: string, args: AddMultipleArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::add_multiple`,\n    typeArguments: [typeArg],\n    arguments: [\n      obj(tx, args.self),\n      pure(tx, args.fields, `vector<${String.$typeName}>`),\n      pure(tx, args.values, `vector<${String.$typeName}>`),\n    ],\n  });\n}\n\nexport function fields(tx: Transaction, typeArg: string, d: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::fields`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, d)],\n  });\n}\n\nexport function createAndKeep(tx: Transaction, typeArg: string, pub: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::create_and_keep`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, pub)],\n  });\n}\n\nexport function createInternal(tx: Transaction, typeArg: string) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::create_internal`,\n    typeArguments: [typeArg],\n    arguments: [],\n  });\n}\n\nexport interface EditArgs {\n  self: TransactionObjectInput;\n  name: string | TransactionArgument;\n  value: string | TransactionArgument;\n}\n\nexport function edit(tx: Transaction, typeArg: string, args: EditArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::edit`,\n    typeArguments: [typeArg],\n    arguments: [\n      obj(tx, args.self),\n      pure(tx, args.name, `${String.$typeName}`),\n      pure(tx, args.value, `${String.$typeName}`),\n    ],\n  });\n}\n\nexport function isAuthorized(tx: Transaction, typeArg: string, pub: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::is_authorized`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, pub)],\n  });\n}\n\nexport interface NewWithFieldsArgs {\n  pub: TransactionObjectInput;\n  fields: Array<string | TransactionArgument> | TransactionArgument;\n  values: Array<string | TransactionArgument> | TransactionArgument;\n}\n\nexport function newWithFields(tx: Transaction, typeArg: string, args: NewWithFieldsArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::new_with_fields`,\n    typeArguments: [typeArg],\n    arguments: [\n      obj(tx, args.pub),\n      pure(tx, args.fields, `vector<${String.$typeName}>`),\n      pure(tx, args.values, `vector<${String.$typeName}>`),\n    ],\n  });\n}\n\nexport function updateVersion(tx: Transaction, typeArg: string, display: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::display::update_version`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, display)],\n  });\n}\n"]}