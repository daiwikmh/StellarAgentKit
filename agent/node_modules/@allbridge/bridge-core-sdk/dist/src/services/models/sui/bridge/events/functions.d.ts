import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface DepositEventArgs {
    amount: bigint | TransactionArgument;
    lpAmount: bigint | TransactionArgument;
}
export declare function depositEvent(tx: Transaction, typeArg: string, args: DepositEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ReceiveFeeEventArgs {
    userPaySui: bigint | TransactionArgument;
    userPayStable: bigint | TransactionArgument;
    totalPaySui: bigint | TransactionArgument;
    bridgeFeeSui: bigint | TransactionArgument;
    messengerFeeSui: bigint | TransactionArgument;
    totalFeeSui: bigint | TransactionArgument;
}
export declare function receiveFeeEvent(tx: Transaction, args: ReceiveFeeEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function rewardsClaimedEvent(tx: Transaction, typeArg: string, amount: bigint | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SwappedEventArgs {
    sentAmount: bigint | TransactionArgument;
    receivedAmount: bigint | TransactionArgument;
    sender: string | TransactionArgument;
}
export declare function swappedEvent(tx: Transaction, typeArgs: [string, string], args: SwappedEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SwappedFromVusdEventArgs {
    amount: bigint | TransactionArgument;
    vusdAmount: bigint | TransactionArgument;
    fee: bigint | TransactionArgument;
}
export declare function swappedFromVusdEvent(tx: Transaction, typeArg: string, args: SwappedFromVusdEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SwappedToVusdEventArgs {
    amount: bigint | TransactionArgument;
    vusdAmount: bigint | TransactionArgument;
    fee: bigint | TransactionArgument;
}
export declare function swappedToVusdEvent(tx: Transaction, typeArg: string, args: SwappedToVusdEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface TokensReceivedEventArgs {
    amount: bigint | TransactionArgument;
    extraGasAmount: bigint | TransactionArgument;
    recipient: string | TransactionArgument;
    nonce: bigint | TransactionArgument;
    messenger: TransactionObjectInput;
    message: TransactionObjectInput;
}
export declare function tokensReceivedEvent(tx: Transaction, typeArg: string, args: TokensReceivedEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface TokensSentEventArgs {
    vusdAmount: bigint | TransactionArgument;
    sender: string | TransactionArgument;
    recipient: TransactionObjectInput;
    destinationChainId: number | TransactionArgument;
    receiveToken: TransactionObjectInput;
    nonce: bigint | TransactionArgument;
    messenger: TransactionObjectInput;
}
export declare function tokensSentEvent(tx: Transaction, typeArg: string, args: TokensSentEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface WithdrawEventArgs {
    amount: bigint | TransactionArgument;
    lpAmount: bigint | TransactionArgument;
}
export declare function withdrawEvent(tx: Transaction, typeArg: string, args: WithdrawEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
