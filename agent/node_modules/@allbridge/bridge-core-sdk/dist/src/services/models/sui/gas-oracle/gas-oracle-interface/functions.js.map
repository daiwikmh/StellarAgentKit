{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/gas-oracle/gas-oracle-interface/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport interface CrossRateArgs {\n  oracle: TransactionObjectInput;\n  otherChainId: number | TransactionArgument;\n}\n\nexport function crossRate(tx: Transaction, args: CrossRateArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::cross_rate`,\n    arguments: [obj(tx, args.oracle), pure(tx, args.otherChainId, `u8`)],\n  });\n}\n\nexport interface GasPriceArgs {\n  gasOracle: TransactionObjectInput;\n  chainId: number | TransactionArgument;\n}\n\nexport function gasPrice(tx: Transaction, args: GasPriceArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::gas_price`,\n    arguments: [obj(tx, args.gasOracle), pure(tx, args.chainId, `u8`)],\n  });\n}\n\nexport interface GetChainDataArgs {\n  oracle: TransactionObjectInput;\n  chainId: number | TransactionArgument;\n}\n\nexport function getChainData(tx: Transaction, args: GetChainDataArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::get_chain_data`,\n    arguments: [obj(tx, args.oracle), pure(tx, args.chainId, `u8`)],\n  });\n}\n\nexport interface GetTransactionGasCostInNativeTokenArgs {\n  oracle: TransactionObjectInput;\n  otherChainId: number | TransactionArgument;\n  gasAmount: bigint | TransactionArgument;\n}\n\nexport function getTransactionGasCostInNativeToken(tx: Transaction, args: GetTransactionGasCostInNativeTokenArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::get_transaction_gas_cost_in_native_token`,\n    arguments: [obj(tx, args.oracle), pure(tx, args.otherChainId, `u8`), pure(tx, args.gasAmount, `u64`)],\n  });\n}\n\nexport interface GetTransactionGasCostInStableArgs {\n  oracle: TransactionObjectInput;\n  otherChainId: number | TransactionArgument;\n  gasAmount: bigint | TransactionArgument;\n  stableTokenDecimals: number | TransactionArgument;\n}\n\nexport function getTransactionGasCostInStable(tx: Transaction, args: GetTransactionGasCostInStableArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::get_transaction_gas_cost_in_stable`,\n    arguments: [\n      obj(tx, args.oracle),\n      pure(tx, args.otherChainId, `u8`),\n      pure(tx, args.gasAmount, `u64`),\n      pure(tx, args.stableTokenDecimals, `u8`),\n    ],\n  });\n}\n\nexport interface MigrateArgs {\n  adminCap: TransactionObjectInput;\n  gasOracle: TransactionObjectInput;\n}\n\nexport function migrate(tx: Transaction, args: MigrateArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::migrate`,\n    arguments: [obj(tx, args.adminCap), obj(tx, args.gasOracle)],\n  });\n}\n\nexport interface PriceArgs {\n  gasOracle: TransactionObjectInput;\n  chainId: number | TransactionArgument;\n}\n\nexport function price(tx: Transaction, args: PriceArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::price`,\n    arguments: [obj(tx, args.gasOracle), pure(tx, args.chainId, `u8`)],\n  });\n}\n\nexport interface SetChainDataArgs {\n  adminCap: TransactionObjectInput;\n  oracle: TransactionObjectInput;\n  chainId: number | TransactionArgument;\n  gasPrice: bigint | TransactionArgument;\n  price: bigint | TransactionArgument;\n}\n\nexport function setChainData(tx: Transaction, args: SetChainDataArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::set_chain_data`,\n    arguments: [\n      obj(tx, args.adminCap),\n      obj(tx, args.oracle),\n      pure(tx, args.chainId, `u8`),\n      pure(tx, args.gasPrice, `u128`),\n      pure(tx, args.price, `u128`),\n    ],\n  });\n}\n\nexport interface SetGasPriceArgs {\n  adminCap: TransactionObjectInput;\n  oracle: TransactionObjectInput;\n  chainId: number | TransactionArgument;\n  gasPrice: bigint | TransactionArgument;\n}\n\nexport function setGasPrice(tx: Transaction, args: SetGasPriceArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::set_gas_price`,\n    arguments: [\n      obj(tx, args.adminCap),\n      obj(tx, args.oracle),\n      pure(tx, args.chainId, `u8`),\n      pure(tx, args.gasPrice, `u128`),\n    ],\n  });\n}\n\nexport interface SetPriceArgs {\n  adminCap: TransactionObjectInput;\n  oracle: TransactionObjectInput;\n  chainId: number | TransactionArgument;\n  price: bigint | TransactionArgument;\n}\n\nexport function setPrice(tx: Transaction, args: SetPriceArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::set_price`,\n    arguments: [\n      obj(tx, args.adminCap),\n      obj(tx, args.oracle),\n      pure(tx, args.chainId, `u8`),\n      pure(tx, args.price, `u128`),\n    ],\n  });\n}\n\nexport interface StableToSuiAmountArgs {\n  gasOracle: TransactionObjectInput;\n  amount: bigint | TransactionArgument;\n  stableTokenDecimals: number | TransactionArgument;\n}\n\nexport function stableToSuiAmount(tx: Transaction, args: StableToSuiAmountArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::stable_to_sui_amount`,\n    arguments: [obj(tx, args.gasOracle), pure(tx, args.amount, `u64`), pure(tx, args.stableTokenDecimals, `u8`)],\n  });\n}\n\nexport function chainDataGasPrice(tx: Transaction, chainData: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::chain_data_gas_price`,\n    arguments: [obj(tx, chainData)],\n  });\n}\n\nexport function chainDataPrice(tx: Transaction, chainData: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::gas_oracle_interface::chain_data_price`,\n    arguments: [obj(tx, chainData)],\n  });\n}\n"]}