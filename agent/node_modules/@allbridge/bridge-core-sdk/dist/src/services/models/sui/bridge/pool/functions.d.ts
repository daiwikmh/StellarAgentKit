import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface NewArgs {
    coinMetadata: TransactionObjectInput;
    a: bigint | TransactionArgument;
    feeShareBp: bigint | TransactionArgument;
}
export declare function new_(tx: Transaction, typeArg: string, args: NewArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function balance(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function decimals(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DepositArgs {
    pool: TransactionObjectInput;
    userDeposit: TransactionObjectInput;
    coin: TransactionObjectInput;
}
export declare function deposit(tx: Transaction, typeArg: string, args: DepositArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface WithdrawArgs {
    pool: TransactionObjectInput;
    userDeposit: TransactionObjectInput;
    amountLp: bigint | TransactionArgument;
}
export declare function withdraw(tx: Transaction, typeArg: string, args: WithdrawArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function state(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function init(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function rewards(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function claimAdminFee(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ClaimRewardArgs {
    pool: TransactionObjectInput;
    userDeposit: TransactionObjectInput;
}
export declare function claimReward(tx: Transaction, typeArg: string, args: ClaimRewardArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetAdminFeeShareBpArgs {
    pool: TransactionObjectInput;
    adminFeeShareBp: bigint | TransactionArgument;
}
export declare function setAdminFeeShareBp(tx: Transaction, typeArg: string, args: SetAdminFeeShareBpArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetBalanceRatioMinBpArgs {
    pool: TransactionObjectInput;
    balanceRatioMinBp: bigint | TransactionArgument;
}
export declare function setBalanceRatioMinBp(tx: Transaction, typeArg: string, args: SetBalanceRatioMinBpArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface AdjustTotalLpAmountArgs {
    pool: TransactionObjectInput;
    userDeposit: TransactionObjectInput;
}
export declare function adjustTotalLpAmount(tx: Transaction, typeArg: string, args: AdjustTotalLpAmountArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function canDeposit(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function canWithdraw(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function feeShare(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface FromSystemPrecisionArgs {
    pool: TransactionObjectInput;
    amount: bigint | TransactionArgument;
}
export declare function fromSystemPrecision(tx: Transaction, typeArg: string, args: FromSystemPrecisionArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetFeeArgs {
    pool: TransactionObjectInput;
    coin: TransactionObjectInput;
    zeroFee: boolean | TransactionArgument;
}
export declare function getFee(tx: Transaction, typeArg: string, args: GetFeeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetFeeShareArgs {
    pool: TransactionObjectInput;
    feeShareBp: bigint | TransactionArgument;
}
export declare function setFeeShare(tx: Transaction, typeArg: string, args: SetFeeShareArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function startDeposit(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function startWithdraw(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function stopDeposit(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function stopWithdraw(tx: Transaction, typeArg: string, pool: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SwapFromVusdArgs {
    pool: TransactionObjectInput;
    vusdAmount: bigint | TransactionArgument;
    receiveAmountMin: bigint | TransactionArgument;
    zeroFee: boolean | TransactionArgument;
}
export declare function swapFromVusd(tx: Transaction, typeArg: string, args: SwapFromVusdArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SwapToVusdArgs {
    pool: TransactionObjectInput;
    coin: TransactionObjectInput;
    zeroFee: boolean | TransactionArgument;
}
export declare function swapToVusd(tx: Transaction, typeArg: string, args: SwapToVusdArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ToSystemPrecisionArgs {
    pool: TransactionObjectInput;
    amount: bigint | TransactionArgument;
}
export declare function toSystemPrecision(tx: Transaction, typeArg: string, args: ToSystemPrecisionArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
