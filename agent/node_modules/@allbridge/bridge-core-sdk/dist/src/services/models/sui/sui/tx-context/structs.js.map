{"version":3,"file":"structs.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/tx-context/structs.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport * as reified from \"../../_framework/reified\";\nimport {\n  PhantomReified,\n  Reified,\n  StructClass,\n  ToField,\n  ToTypeStr,\n  decodeFromFields,\n  decodeFromFieldsWithTypes,\n  decodeFromJSONField,\n  fieldToJSON,\n  phantom,\n} from \"../../_framework/reified\";\nimport { FieldsWithTypes, composeSuiType, compressSuiType } from \"../../_framework/util\";\nimport { Vector } from \"../../_framework/vector\";\nimport { PKG_V26 } from \"../index\";\nimport { bcs } from \"@mysten/sui/bcs\";\nimport { SuiClient, SuiObjectData, SuiParsedData } from \"@mysten/sui/client\";\nimport { fromB64, fromHEX, toHEX } from \"@mysten/sui/utils\";\n\n/* ============================== TxContext =============================== */\n\nexport function isTxContext(type: string): boolean {\n  type = compressSuiType(type);\n  return type === `${PKG_V26}::tx_context::TxContext`;\n}\n\nexport interface TxContextFields {\n  sender: ToField<\"address\">;\n  txHash: ToField<Vector<\"u8\">>;\n  epoch: ToField<\"u64\">;\n  epochTimestampMs: ToField<\"u64\">;\n  idsCreated: ToField<\"u64\">;\n}\n\nexport type TxContextReified = Reified<TxContext, TxContextFields>;\n\nexport class TxContext implements StructClass {\n  __StructClass = true as const;\n\n  static get $typeName() {\n    return `${PKG_V26}::tx_context::TxContext`;\n  }\n  static readonly $numTypeParams = 0;\n  static readonly $isPhantom = [] as const;\n\n  readonly $typeName = TxContext.$typeName;\n  readonly $fullTypeName: string;\n  readonly $typeArgs: [];\n  readonly $isPhantom = TxContext.$isPhantom;\n\n  readonly sender: ToField<\"address\">;\n  readonly txHash: ToField<Vector<\"u8\">>;\n  readonly epoch: ToField<\"u64\">;\n  readonly epochTimestampMs: ToField<\"u64\">;\n  readonly idsCreated: ToField<\"u64\">;\n\n  private constructor(typeArgs: [], fields: TxContextFields) {\n    this.$fullTypeName = composeSuiType(TxContext.$typeName, ...typeArgs) as string;\n    this.$typeArgs = typeArgs;\n\n    this.sender = fields.sender;\n    this.txHash = fields.txHash;\n    this.epoch = fields.epoch;\n    this.epochTimestampMs = fields.epochTimestampMs;\n    this.idsCreated = fields.idsCreated;\n  }\n\n  static reified(): TxContextReified {\n    return {\n      typeName: TxContext.$typeName,\n      fullTypeName: composeSuiType(TxContext.$typeName, ...[]) as string,\n      typeArgs: [] as [],\n      isPhantom: TxContext.$isPhantom,\n      reifiedTypeArgs: [],\n      fromFields: (fields: Record<string, any>) => TxContext.fromFields(fields),\n      fromFieldsWithTypes: (item: FieldsWithTypes) => TxContext.fromFieldsWithTypes(item),\n      fromBcs: (data: Uint8Array) => TxContext.fromBcs(data),\n      bcs: TxContext.bcs,\n      fromJSONField: (field: any) => TxContext.fromJSONField(field),\n      fromJSON: (json: Record<string, any>) => TxContext.fromJSON(json),\n      fromSuiParsedData: (content: SuiParsedData) => TxContext.fromSuiParsedData(content),\n      fromSuiObjectData: (content: SuiObjectData) => TxContext.fromSuiObjectData(content),\n      fetch: async (client: SuiClient, id: string) => TxContext.fetch(client, id),\n      new: (fields: TxContextFields) => {\n        return new TxContext([], fields);\n      },\n      kind: \"StructClassReified\",\n    };\n  }\n\n  static get r() {\n    return TxContext.reified();\n  }\n\n  static phantom(): PhantomReified<ToTypeStr<TxContext>> {\n    return phantom(TxContext.reified());\n  }\n  static get p() {\n    return TxContext.phantom();\n  }\n\n  static get bcs() {\n    return bcs.struct(\"TxContext\", {\n      sender: bcs.bytes(32).transform({\n        input: (val: string) => fromHEX(val),\n        output: (val: Uint8Array) => toHEX(val),\n      }),\n      tx_hash: bcs.vector(bcs.u8()),\n      epoch: bcs.u64(),\n      epoch_timestamp_ms: bcs.u64(),\n      ids_created: bcs.u64(),\n    });\n  }\n\n  static fromFields(fields: Record<string, any>): TxContext {\n    return TxContext.reified().new({\n      sender: decodeFromFields(\"address\", fields.sender),\n      txHash: decodeFromFields(reified.vector(\"u8\"), fields.tx_hash),\n      epoch: decodeFromFields(\"u64\", fields.epoch),\n      epochTimestampMs: decodeFromFields(\"u64\", fields.epoch_timestamp_ms),\n      idsCreated: decodeFromFields(\"u64\", fields.ids_created),\n    });\n  }\n\n  static fromFieldsWithTypes(item: FieldsWithTypes): TxContext {\n    if (!isTxContext(item.type)) {\n      throw new Error(\"not a TxContext type\");\n    }\n\n    return TxContext.reified().new({\n      sender: decodeFromFieldsWithTypes(\"address\", item.fields.sender),\n      txHash: decodeFromFieldsWithTypes(reified.vector(\"u8\"), item.fields.tx_hash),\n      epoch: decodeFromFieldsWithTypes(\"u64\", item.fields.epoch),\n      epochTimestampMs: decodeFromFieldsWithTypes(\"u64\", item.fields.epoch_timestamp_ms),\n      idsCreated: decodeFromFieldsWithTypes(\"u64\", item.fields.ids_created),\n    });\n  }\n\n  static fromBcs(data: Uint8Array): TxContext {\n    return TxContext.fromFields(TxContext.bcs.parse(data));\n  }\n\n  toJSONField() {\n    return {\n      sender: this.sender,\n      txHash: fieldToJSON<Vector<\"u8\">>(`vector<u8>`, this.txHash),\n      epoch: this.epoch.toString(),\n      epochTimestampMs: this.epochTimestampMs.toString(),\n      idsCreated: this.idsCreated.toString(),\n    };\n  }\n\n  toJSON() {\n    return {\n      $typeName: this.$typeName,\n      $typeArgs: this.$typeArgs,\n      ...this.toJSONField(),\n    };\n  }\n\n  static fromJSONField(field: any): TxContext {\n    return TxContext.reified().new({\n      sender: decodeFromJSONField(\"address\", field.sender),\n      txHash: decodeFromJSONField(reified.vector(\"u8\"), field.txHash),\n      epoch: decodeFromJSONField(\"u64\", field.epoch),\n      epochTimestampMs: decodeFromJSONField(\"u64\", field.epochTimestampMs),\n      idsCreated: decodeFromJSONField(\"u64\", field.idsCreated),\n    });\n  }\n\n  static fromJSON(json: Record<string, any>): TxContext {\n    if (json.$typeName !== TxContext.$typeName) {\n      throw new Error(\"not a WithTwoGenerics json object\");\n    }\n\n    return TxContext.fromJSONField(json);\n  }\n\n  static fromSuiParsedData(content: SuiParsedData): TxContext {\n    if (content.dataType !== \"moveObject\") {\n      throw new Error(\"not an object\");\n    }\n    if (!isTxContext(content.type)) {\n      throw new Error(`object at ${(content.fields as any).id} is not a TxContext object`);\n    }\n    return TxContext.fromFieldsWithTypes(content);\n  }\n\n  static fromSuiObjectData(data: SuiObjectData): TxContext {\n    if (data.bcs) {\n      if (data.bcs.dataType !== \"moveObject\" || !isTxContext(data.bcs.type)) {\n        throw new Error(`object at is not a TxContext object`);\n      }\n\n      return TxContext.fromBcs(fromB64(data.bcs.bcsBytes));\n    }\n    if (data.content) {\n      return TxContext.fromSuiParsedData(data.content);\n    }\n    throw new Error(\n      \"Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.\"\n    );\n  }\n\n  static async fetch(client: SuiClient, id: string): Promise<TxContext> {\n    const res = await client.getObject({ id, options: { showBcs: true } });\n    if (res.error) {\n      throw new Error(`error fetching TxContext object at id ${id}: ${res.error.code}`);\n    }\n    if (res.data?.bcs?.dataType !== \"moveObject\" || !isTxContext(res.data.bcs.type)) {\n      throw new Error(`object at id ${id} is not a TxContext object`);\n    }\n\n    return TxContext.fromSuiObjectData(res.data);\n  }\n}\n"]}