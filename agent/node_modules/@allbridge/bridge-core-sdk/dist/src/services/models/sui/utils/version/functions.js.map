{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/utils/version/functions.ts"],"names":[],"mappings":";;AAUA,sCAMC;AAQD,kCAMC;AAQD,wCAMC;AA5CD,cAAc;AACd,0BAAkC;AAClC,gDAAuE;AAQvE,SAAgB,aAAa,CAAC,EAAe,EAAE,OAAe,EAAE,IAAuB;IACrF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,2BAA2B;QAClD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAC7D,CAAC,CAAC;AACL,CAAC;AAQD,SAAgB,WAAW,CAAC,EAAe,EAAE,OAAe,EAAE,IAAqB;IACjF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,yBAAyB;QAChD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAClG,CAAC,CAAC;AACL,CAAC;AAQD,SAAgB,cAAc,CAAC,EAAe,EAAE,OAAe,EAAE,IAAwB;IACvF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,4BAA4B;QACnD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KACrG,CAAC,CAAC;AACL,CAAC","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { GenericArg, generic, obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport interface AssertVersionArgs {\n  id: TransactionObjectInput;\n  version: bigint | TransactionArgument;\n}\n\nexport function assertVersion(tx: Transaction, typeArg: string, args: AssertVersionArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::version::assert_version`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.id), pure(tx, args.version, `u64`)],\n  });\n}\n\nexport interface InitVersionArgs {\n  cap: GenericArg;\n  id: TransactionObjectInput;\n  version: bigint | TransactionArgument;\n}\n\nexport function initVersion(tx: Transaction, typeArg: string, args: InitVersionArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::version::init_version`,\n    typeArguments: [typeArg],\n    arguments: [generic(tx, `${typeArg}`, args.cap), obj(tx, args.id), pure(tx, args.version, `u64`)],\n  });\n}\n\nexport interface MigrateVersionArgs {\n  cap: GenericArg;\n  id: TransactionObjectInput;\n  newVersion: bigint | TransactionArgument;\n}\n\nexport function migrateVersion(tx: Transaction, typeArg: string, args: MigrateVersionArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::version::migrate_version`,\n    typeArguments: [typeArg],\n    arguments: [generic(tx, `${typeArg}`, args.cap), obj(tx, args.id), pure(tx, args.newVersion, `u64`)],\n  });\n}\n"]}