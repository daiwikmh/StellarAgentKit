{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/pay/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { obj, pure, vector } from \"../../_framework/util\";\nimport { Coin } from \"../coin/structs\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport interface JoinArgs {\n  self: TransactionObjectInput;\n  coin: TransactionObjectInput;\n}\n\nexport function join(tx: Transaction, typeArg: string, args: JoinArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::pay::join`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), obj(tx, args.coin)],\n  });\n}\n\nexport interface SplitArgs {\n  coin: TransactionObjectInput;\n  splitAmount: bigint | TransactionArgument;\n}\n\nexport function split(tx: Transaction, typeArg: string, args: SplitArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::pay::split`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.coin), pure(tx, args.splitAmount, `u64`)],\n  });\n}\n\nexport interface DivideAndKeepArgs {\n  self: TransactionObjectInput;\n  n: bigint | TransactionArgument;\n}\n\nexport function divideAndKeep(tx: Transaction, typeArg: string, args: DivideAndKeepArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::pay::divide_and_keep`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), pure(tx, args.n, `u64`)],\n  });\n}\n\nexport interface JoinVecArgs {\n  self: TransactionObjectInput;\n  coins: Array<TransactionObjectInput> | TransactionArgument;\n}\n\nexport function joinVec(tx: Transaction, typeArg: string, args: JoinVecArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::pay::join_vec`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), vector(tx, `${Coin.$typeName}<${typeArg}>`, args.coins)],\n  });\n}\n\nexport interface JoinVecAndTransferArgs {\n  coins: Array<TransactionObjectInput> | TransactionArgument;\n  receiver: string | TransactionArgument;\n}\n\nexport function joinVecAndTransfer(tx: Transaction, typeArg: string, args: JoinVecAndTransferArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::pay::join_vec_and_transfer`,\n    typeArguments: [typeArg],\n    arguments: [vector(tx, `${Coin.$typeName}<${typeArg}>`, args.coins), pure(tx, args.receiver, `address`)],\n  });\n}\n\nexport function keep(tx: Transaction, typeArg: string, c: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::pay::keep`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, c)],\n  });\n}\n\nexport interface SplitAndTransferArgs {\n  c: TransactionObjectInput;\n  amount: bigint | TransactionArgument;\n  recipient: string | TransactionArgument;\n}\n\nexport function splitAndTransfer(tx: Transaction, typeArg: string, args: SplitAndTransferArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::pay::split_and_transfer`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.c), pure(tx, args.amount, `u64`), pure(tx, args.recipient, `address`)],\n  });\n}\n\nexport interface SplitVecArgs {\n  self: TransactionObjectInput;\n  splitAmounts: Array<bigint | TransactionArgument> | TransactionArgument;\n}\n\nexport function splitVec(tx: Transaction, typeArg: string, args: SplitVecArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::pay::split_vec`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.self), pure(tx, args.splitAmounts, `vector<u64>`)],\n  });\n}\n"]}