"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.delete_ = delete_;
exports.owner = owner;
exports.issuer = issuer;
exports.checkZkloginIssuer = checkZkloginIssuer;
exports.checkZkloginIssuerInternal = checkZkloginIssuerInternal;
exports.verifyZkloginIssuer = verifyZkloginIssuer;
// @ts-nocheck
const __1 = require("..");
const structs_1 = require("../../_dependencies/source/0x1/string/structs");
const util_1 = require("../../_framework/util");
function delete_(tx, verifiedIssuer) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::zklogin_verified_issuer::delete`,
        arguments: [(0, util_1.obj)(tx, verifiedIssuer)],
    });
}
function owner(tx, verifiedIssuer) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::zklogin_verified_issuer::owner`,
        arguments: [(0, util_1.obj)(tx, verifiedIssuer)],
    });
}
function issuer(tx, verifiedIssuer) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::zklogin_verified_issuer::issuer`,
        arguments: [(0, util_1.obj)(tx, verifiedIssuer)],
    });
}
function checkZkloginIssuer(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::zklogin_verified_issuer::check_zklogin_issuer`,
        arguments: [
            (0, util_1.pure)(tx, args.address, `address`),
            (0, util_1.pure)(tx, args.addressSeed, `u256`),
            (0, util_1.pure)(tx, args.issuer, `${structs_1.String.$typeName}`),
        ],
    });
}
function checkZkloginIssuerInternal(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::zklogin_verified_issuer::check_zklogin_issuer_internal`,
        arguments: [
            (0, util_1.pure)(tx, args.address, `address`),
            (0, util_1.pure)(tx, args.addressSeed, `u256`),
            (0, util_1.pure)(tx, args.issuer, `vector<u8>`),
        ],
    });
}
function verifyZkloginIssuer(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::zklogin_verified_issuer::verify_zklogin_issuer`,
        arguments: [(0, util_1.pure)(tx, args.addressSeed, `u256`), (0, util_1.pure)(tx, args.issuer, `${structs_1.String.$typeName}`)],
    });
}
//# sourceMappingURL=functions.js.map