{"version":3,"file":"structs.js","sourceRoot":"","sources":["../../../../../../../../../src/services/models/sui/_dependencies/source/0x31cc14d80c175ae39777c0238f20594c6d4869cfab199f40b69f3319956b8beb/handle-receive-message/structs.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport {\n  PhantomReified,\n  Reified,\n  StructClass,\n  ToField,\n  ToTypeStr,\n  decodeFromFields,\n  decodeFromFieldsWithTypes,\n  decodeFromJSONField,\n  phantom,\n} from \"../../../../_framework/reified\";\nimport { FieldsWithTypes, composeSuiType, compressSuiType } from \"../../../../_framework/util\";\nimport { StampReceiptTicket } from \"../../0x4931e06dce648b3931f890035bd196920770e913e43e45990b383f6486fdd0a5/receive-message/structs\";\nimport { BurnMessage } from \"../burn-message/structs\";\nimport { PKG_V1 } from \"../index\";\nimport { MessageTransmitterAuthenticator } from \"../message-transmitter-authenticator/structs\";\nimport { bcs } from \"@mysten/sui/bcs\";\nimport { SuiClient, SuiObjectData, SuiParsedData } from \"@mysten/sui/client\";\nimport { fromB64 } from \"@mysten/sui/utils\";\n\n/* ============================== StampReceiptTicketWithBurnMessage =============================== */\n\nexport function isStampReceiptTicketWithBurnMessage(type: string): boolean {\n  type = compressSuiType(type);\n  return type === `${PKG_V1}::handle_receive_message::StampReceiptTicketWithBurnMessage`;\n}\n\nexport interface StampReceiptTicketWithBurnMessageFields {\n  stampReceiptTicket: ToField<StampReceiptTicket<MessageTransmitterAuthenticator>>;\n  burnMessage: ToField<BurnMessage>;\n}\n\nexport type StampReceiptTicketWithBurnMessageReified = Reified<\n  StampReceiptTicketWithBurnMessage,\n  StampReceiptTicketWithBurnMessageFields\n>;\n\nexport class StampReceiptTicketWithBurnMessage implements StructClass {\n  __StructClass = true as const;\n\n  static get $typeName() {\n    return `${PKG_V1}::handle_receive_message::StampReceiptTicketWithBurnMessage`;\n  }\n  static readonly $numTypeParams = 0;\n  static readonly $isPhantom = [] as const;\n\n  readonly $typeName = StampReceiptTicketWithBurnMessage.$typeName;\n  readonly $fullTypeName: string;\n  readonly $typeArgs: [];\n  readonly $isPhantom = StampReceiptTicketWithBurnMessage.$isPhantom;\n\n  readonly stampReceiptTicket: ToField<StampReceiptTicket<MessageTransmitterAuthenticator>>;\n  readonly burnMessage: ToField<BurnMessage>;\n\n  private constructor(typeArgs: [], fields: StampReceiptTicketWithBurnMessageFields) {\n    this.$fullTypeName = composeSuiType(StampReceiptTicketWithBurnMessage.$typeName, ...typeArgs) as string;\n    this.$typeArgs = typeArgs;\n\n    this.stampReceiptTicket = fields.stampReceiptTicket;\n    this.burnMessage = fields.burnMessage;\n  }\n\n  static reified(): StampReceiptTicketWithBurnMessageReified {\n    return {\n      typeName: StampReceiptTicketWithBurnMessage.$typeName,\n      fullTypeName: composeSuiType(StampReceiptTicketWithBurnMessage.$typeName, ...[]) as string,\n      typeArgs: [] as [],\n      isPhantom: StampReceiptTicketWithBurnMessage.$isPhantom,\n      reifiedTypeArgs: [],\n      fromFields: (fields: Record<string, any>) => StampReceiptTicketWithBurnMessage.fromFields(fields),\n      fromFieldsWithTypes: (item: FieldsWithTypes) => StampReceiptTicketWithBurnMessage.fromFieldsWithTypes(item),\n      fromBcs: (data: Uint8Array) => StampReceiptTicketWithBurnMessage.fromBcs(data),\n      bcs: StampReceiptTicketWithBurnMessage.bcs,\n      fromJSONField: (field: any) => StampReceiptTicketWithBurnMessage.fromJSONField(field),\n      fromJSON: (json: Record<string, any>) => StampReceiptTicketWithBurnMessage.fromJSON(json),\n      fromSuiParsedData: (content: SuiParsedData) => StampReceiptTicketWithBurnMessage.fromSuiParsedData(content),\n      fromSuiObjectData: (content: SuiObjectData) => StampReceiptTicketWithBurnMessage.fromSuiObjectData(content),\n      fetch: async (client: SuiClient, id: string) => StampReceiptTicketWithBurnMessage.fetch(client, id),\n      new: (fields: StampReceiptTicketWithBurnMessageFields) => {\n        return new StampReceiptTicketWithBurnMessage([], fields);\n      },\n      kind: \"StructClassReified\",\n    };\n  }\n\n  static get r() {\n    return StampReceiptTicketWithBurnMessage.reified();\n  }\n\n  static phantom(): PhantomReified<ToTypeStr<StampReceiptTicketWithBurnMessage>> {\n    return phantom(StampReceiptTicketWithBurnMessage.reified());\n  }\n  static get p() {\n    return StampReceiptTicketWithBurnMessage.phantom();\n  }\n\n  static get bcs() {\n    return bcs.struct(\"StampReceiptTicketWithBurnMessage\", {\n      stamp_receipt_ticket: StampReceiptTicket.bcs(MessageTransmitterAuthenticator.bcs),\n      burn_message: BurnMessage.bcs,\n    });\n  }\n\n  static fromFields(fields: Record<string, any>): StampReceiptTicketWithBurnMessage {\n    return StampReceiptTicketWithBurnMessage.reified().new({\n      stampReceiptTicket: decodeFromFields(\n        StampReceiptTicket.reified(MessageTransmitterAuthenticator.reified()),\n        fields.stamp_receipt_ticket\n      ),\n      burnMessage: decodeFromFields(BurnMessage.reified(), fields.burn_message),\n    });\n  }\n\n  static fromFieldsWithTypes(item: FieldsWithTypes): StampReceiptTicketWithBurnMessage {\n    if (!isStampReceiptTicketWithBurnMessage(item.type)) {\n      throw new Error(\"not a StampReceiptTicketWithBurnMessage type\");\n    }\n\n    return StampReceiptTicketWithBurnMessage.reified().new({\n      stampReceiptTicket: decodeFromFieldsWithTypes(\n        StampReceiptTicket.reified(MessageTransmitterAuthenticator.reified()),\n        item.fields.stamp_receipt_ticket\n      ),\n      burnMessage: decodeFromFieldsWithTypes(BurnMessage.reified(), item.fields.burn_message),\n    });\n  }\n\n  static fromBcs(data: Uint8Array): StampReceiptTicketWithBurnMessage {\n    return StampReceiptTicketWithBurnMessage.fromFields(StampReceiptTicketWithBurnMessage.bcs.parse(data));\n  }\n\n  toJSONField() {\n    return {\n      stampReceiptTicket: this.stampReceiptTicket.toJSONField(),\n      burnMessage: this.burnMessage.toJSONField(),\n    };\n  }\n\n  toJSON() {\n    return {\n      $typeName: this.$typeName,\n      $typeArgs: this.$typeArgs,\n      ...this.toJSONField(),\n    };\n  }\n\n  static fromJSONField(field: any): StampReceiptTicketWithBurnMessage {\n    return StampReceiptTicketWithBurnMessage.reified().new({\n      stampReceiptTicket: decodeFromJSONField(\n        StampReceiptTicket.reified(MessageTransmitterAuthenticator.reified()),\n        field.stampReceiptTicket\n      ),\n      burnMessage: decodeFromJSONField(BurnMessage.reified(), field.burnMessage),\n    });\n  }\n\n  static fromJSON(json: Record<string, any>): StampReceiptTicketWithBurnMessage {\n    if (json.$typeName !== StampReceiptTicketWithBurnMessage.$typeName) {\n      throw new Error(\"not a WithTwoGenerics json object\");\n    }\n\n    return StampReceiptTicketWithBurnMessage.fromJSONField(json);\n  }\n\n  static fromSuiParsedData(content: SuiParsedData): StampReceiptTicketWithBurnMessage {\n    if (content.dataType !== \"moveObject\") {\n      throw new Error(\"not an object\");\n    }\n    if (!isStampReceiptTicketWithBurnMessage(content.type)) {\n      throw new Error(`object at ${(content.fields as any).id} is not a StampReceiptTicketWithBurnMessage object`);\n    }\n    return StampReceiptTicketWithBurnMessage.fromFieldsWithTypes(content);\n  }\n\n  static fromSuiObjectData(data: SuiObjectData): StampReceiptTicketWithBurnMessage {\n    if (data.bcs) {\n      if (data.bcs.dataType !== \"moveObject\" || !isStampReceiptTicketWithBurnMessage(data.bcs.type)) {\n        throw new Error(`object at is not a StampReceiptTicketWithBurnMessage object`);\n      }\n\n      return StampReceiptTicketWithBurnMessage.fromBcs(fromB64(data.bcs.bcsBytes));\n    }\n    if (data.content) {\n      return StampReceiptTicketWithBurnMessage.fromSuiParsedData(data.content);\n    }\n    throw new Error(\n      \"Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.\"\n    );\n  }\n\n  static async fetch(client: SuiClient, id: string): Promise<StampReceiptTicketWithBurnMessage> {\n    const res = await client.getObject({ id, options: { showBcs: true } });\n    if (res.error) {\n      throw new Error(`error fetching StampReceiptTicketWithBurnMessage object at id ${id}: ${res.error.code}`);\n    }\n    if (res.data?.bcs?.dataType !== \"moveObject\" || !isStampReceiptTicketWithBurnMessage(res.data.bcs.type)) {\n      throw new Error(`object at id ${id} is not a StampReceiptTicketWithBurnMessage object`);\n    }\n\n    return StampReceiptTicketWithBurnMessage.fromSuiObjectData(res.data);\n  }\n}\n"]}