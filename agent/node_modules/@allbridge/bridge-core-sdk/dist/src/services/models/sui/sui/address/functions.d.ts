import { Transaction, TransactionArgument } from "@mysten/sui/transactions";
export declare function length(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function toBytes(tx: Transaction, a: string | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function fromAsciiBytes(tx: Transaction, bytes: Array<number | TransactionArgument> | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function fromBytes(tx: Transaction, bytes: Array<number | TransactionArgument> | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function fromU256(tx: Transaction, n: bigint | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function hexCharValue(tx: Transaction, c: number | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function max(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function toAsciiString(tx: Transaction, a: string | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function toString(tx: Transaction, a: string | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function toU256(tx: Transaction, a: string | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
