import { Transaction, TransactionArgument } from "@mysten/sui/transactions";
export interface MaxArgs {
    x: bigint | TransactionArgument;
    y: bigint | TransactionArgument;
}
export declare function max(tx: Transaction, args: MaxArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DiffArgs {
    x: bigint | TransactionArgument;
    y: bigint | TransactionArgument;
}
export declare function diff(tx: Transaction, args: DiffArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DivideAndRoundUpArgs {
    x: bigint | TransactionArgument;
    y: bigint | TransactionArgument;
}
export declare function divideAndRoundUp(tx: Transaction, args: DivideAndRoundUpArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface MinArgs {
    x: bigint | TransactionArgument;
    y: bigint | TransactionArgument;
}
export declare function min(tx: Transaction, args: MinArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PowArgs {
    base: bigint | TransactionArgument;
    exponent: number | TransactionArgument;
}
export declare function pow(tx: Transaction, args: PowArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function sqrt(tx: Transaction, x: bigint | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function sqrtU128(tx: Transaction, x: bigint | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
