import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface AddPerTypeConfigArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function addPerTypeConfig(tx: Transaction, args: AddPerTypeConfigArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface BorrowPerTypeConfigArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function borrowPerTypeConfig(tx: Transaction, args: BorrowPerTypeConfigArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface BorrowPerTypeConfigMutArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function borrowPerTypeConfigMut(tx: Transaction, args: BorrowPerTypeConfigMutArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function create(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface MigrateV1ToV2Args {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function migrateV1ToV2(tx: Transaction, args: MigrateV1ToV2Args): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PerTypeExistsArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function perTypeExists(tx: Transaction, args: PerTypeExistsArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function perTypeList(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V1AddArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    type: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v1Add(tx: Transaction, args: V1AddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V1ContainsArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    type: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v1Contains(tx: Transaction, args: V1ContainsArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V1PerTypeListAddArgs {
    list: TransactionObjectInput;
    type: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v1PerTypeListAdd(tx: Transaction, args: V1PerTypeListAddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V1PerTypeListContainsArgs {
    list: TransactionObjectInput;
    type: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v1PerTypeListContains(tx: Transaction, args: V1PerTypeListContainsArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V1PerTypeListRemoveArgs {
    list: TransactionObjectInput;
    type: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v1PerTypeListRemove(tx: Transaction, args: V1PerTypeListRemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V1RemoveArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    type: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v1Remove(tx: Transaction, args: V1RemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V2AddArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v2Add(tx: Transaction, args: V2AddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V2ContainsCurrentEpochArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v2ContainsCurrentEpoch(tx: Transaction, args: V2ContainsCurrentEpochArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V2ContainsNextEpochArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v2ContainsNextEpoch(tx: Transaction, args: V2ContainsNextEpochArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V2DisableGlobalPauseArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function v2DisableGlobalPause(tx: Transaction, args: V2DisableGlobalPauseArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V2EnableGlobalPauseArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function v2EnableGlobalPause(tx: Transaction, args: V2EnableGlobalPauseArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V2IsGlobalPauseEnabledCurrentEpochArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function v2IsGlobalPauseEnabledCurrentEpoch(tx: Transaction, args: V2IsGlobalPauseEnabledCurrentEpochArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V2IsGlobalPauseEnabledNextEpochArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function v2IsGlobalPauseEnabledNextEpoch(tx: Transaction, args: V2IsGlobalPauseEnabledNextEpochArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface V2RemoveArgs {
    denyList: TransactionObjectInput;
    perTypeIndex: bigint | TransactionArgument;
    perTypeKey: Array<number | TransactionArgument> | TransactionArgument;
    addr: string | TransactionArgument;
}
export declare function v2Remove(tx: Transaction, args: V2RemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
