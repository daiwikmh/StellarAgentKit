"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toBytes = toBytes;
exports.new_ = new_;
exports.intoRemainderBytes = intoRemainderBytes;
exports.peelAddress = peelAddress;
exports.peelBool = peelBool;
exports.peelOptionAddress = peelOptionAddress;
exports.peelOptionBool = peelOptionBool;
exports.peelOptionU128 = peelOptionU128;
exports.peelOptionU16 = peelOptionU16;
exports.peelOptionU256 = peelOptionU256;
exports.peelOptionU32 = peelOptionU32;
exports.peelOptionU64 = peelOptionU64;
exports.peelOptionU8 = peelOptionU8;
exports.peelU128 = peelU128;
exports.peelU16 = peelU16;
exports.peelU256 = peelU256;
exports.peelU32 = peelU32;
exports.peelU64 = peelU64;
exports.peelU8 = peelU8;
exports.peelVecAddress = peelVecAddress;
exports.peelVecBool = peelVecBool;
exports.peelVecLength = peelVecLength;
exports.peelVecU128 = peelVecU128;
exports.peelVecU16 = peelVecU16;
exports.peelVecU256 = peelVecU256;
exports.peelVecU32 = peelVecU32;
exports.peelVecU64 = peelVecU64;
exports.peelVecU8 = peelVecU8;
exports.peelVecVecU8 = peelVecVecU8;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function toBytes(tx, typeArg, value) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::to_bytes`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.generic)(tx, `${typeArg}`, value)],
    });
}
function new_(tx, bytes) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::new`,
        arguments: [(0, util_1.pure)(tx, bytes, `vector<u8>`)],
    });
}
function intoRemainderBytes(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::into_remainder_bytes`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelAddress(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_address`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelBool(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_bool`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelOptionAddress(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_option_address`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelOptionBool(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_option_bool`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelOptionU128(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_option_u128`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelOptionU16(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_option_u16`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelOptionU256(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_option_u256`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelOptionU32(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_option_u32`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelOptionU64(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_option_u64`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelOptionU8(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_option_u8`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelU128(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_u128`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelU16(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_u16`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelU256(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_u256`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelU32(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_u32`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelU64(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_u64`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelU8(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_u8`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecAddress(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_address`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecBool(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_bool`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecLength(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_length`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecU128(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_u128`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecU16(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_u16`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecU256(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_u256`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecU32(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_u32`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecU64(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_u64`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecU8(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_u8`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
function peelVecVecU8(tx, bcs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::bcs::peel_vec_vec_u8`,
        arguments: [(0, util_1.obj)(tx, bcs)],
    });
}
//# sourceMappingURL=functions.js.map