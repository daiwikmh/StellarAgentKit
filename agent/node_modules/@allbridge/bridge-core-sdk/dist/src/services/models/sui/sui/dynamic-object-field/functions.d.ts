import { GenericArg } from "../../_framework/util";
import { Transaction, TransactionObjectInput } from "@mysten/sui/transactions";
export interface AddArgs {
    object: TransactionObjectInput;
    name: GenericArg;
    value: GenericArg;
}
export declare function add(tx: Transaction, typeArgs: [string, string], args: AddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface IdArgs {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function id(tx: Transaction, typeArg: string, args: IdArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface BorrowArgs {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function borrow(tx: Transaction, typeArgs: [string, string], args: BorrowArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface BorrowMutArgs {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function borrowMut(tx: Transaction, typeArgs: [string, string], args: BorrowMutArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface RemoveArgs {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function remove(tx: Transaction, typeArgs: [string, string], args: RemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface Exists_Args {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function exists_(tx: Transaction, typeArg: string, args: Exists_Args): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ExistsWithTypeArgs {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function existsWithType(tx: Transaction, typeArgs: [string, string], args: ExistsWithTypeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface InternalAddArgs {
    object: TransactionObjectInput;
    name: GenericArg;
    value: GenericArg;
}
export declare function internalAdd(tx: Transaction, typeArgs: [string, string], args: InternalAddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface InternalBorrowArgs {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function internalBorrow(tx: Transaction, typeArgs: [string, string], args: InternalBorrowArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface InternalBorrowMutArgs {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function internalBorrowMut(tx: Transaction, typeArgs: [string, string], args: InternalBorrowMutArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface InternalExistsWithTypeArgs {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function internalExistsWithType(tx: Transaction, typeArgs: [string, string], args: InternalExistsWithTypeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface InternalRemoveArgs {
    object: TransactionObjectInput;
    name: GenericArg;
}
export declare function internalRemove(tx: Transaction, typeArgs: [string, string], args: InternalRemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
