"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.add = add;
exports.id = id;
exports.borrow = borrow;
exports.borrowMut = borrowMut;
exports.remove = remove;
exports.exists_ = exists_;
exports.existsWithType = existsWithType;
exports.internalAdd = internalAdd;
exports.internalBorrow = internalBorrow;
exports.internalBorrowMut = internalBorrowMut;
exports.internalExistsWithType = internalExistsWithType;
exports.internalRemove = internalRemove;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function add(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::add`,
        typeArguments: typeArgs,
        arguments: [
            (0, util_1.obj)(tx, args.object),
            (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name),
            (0, util_1.generic)(tx, `${typeArgs[1]}`, args.value),
        ],
    });
}
function id(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::id`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArg}`, args.name)],
    });
}
function borrow(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::borrow`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name)],
    });
}
function borrowMut(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::borrow_mut`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name)],
    });
}
function remove(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::remove`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name)],
    });
}
function exists_(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::exists_`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArg}`, args.name)],
    });
}
function existsWithType(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::exists_with_type`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name)],
    });
}
function internalAdd(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::internal_add`,
        typeArguments: typeArgs,
        arguments: [
            (0, util_1.obj)(tx, args.object),
            (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name),
            (0, util_1.generic)(tx, `${typeArgs[1]}`, args.value),
        ],
    });
}
function internalBorrow(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::internal_borrow`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name)],
    });
}
function internalBorrowMut(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::internal_borrow_mut`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name)],
    });
}
function internalExistsWithType(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::internal_exists_with_type`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name)],
    });
}
function internalRemove(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::dynamic_object_field::internal_remove`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.object), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.name)],
    });
}
//# sourceMappingURL=functions.js.map