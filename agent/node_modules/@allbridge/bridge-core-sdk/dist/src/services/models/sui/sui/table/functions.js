"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.add = add;
exports.borrow = borrow;
exports.borrowMut = borrowMut;
exports.contains = contains;
exports.destroyEmpty = destroyEmpty;
exports.isEmpty = isEmpty;
exports.length = length;
exports.remove = remove;
exports.new_ = new_;
exports.drop = drop;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function add(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::add`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.table), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.k), (0, util_1.generic)(tx, `${typeArgs[1]}`, args.v)],
    });
}
function borrow(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::borrow`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.table), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.k)],
    });
}
function borrowMut(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::borrow_mut`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.table), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.k)],
    });
}
function contains(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::contains`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.table), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.k)],
    });
}
function destroyEmpty(tx, typeArgs, table) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::destroy_empty`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, table)],
    });
}
function isEmpty(tx, typeArgs, table) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::is_empty`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, table)],
    });
}
function length(tx, typeArgs, table) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::length`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, table)],
    });
}
function remove(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::remove`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.table), (0, util_1.generic)(tx, `${typeArgs[0]}`, args.k)],
    });
}
function new_(tx, typeArgs) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::new`,
        typeArguments: typeArgs,
        arguments: [],
    });
}
function drop(tx, typeArgs, table) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::table::drop`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, table)],
    });
}
//# sourceMappingURL=functions.js.map