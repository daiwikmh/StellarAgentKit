{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/authenticator-state/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { String } from \"../../_dependencies/source/0x1/string/structs\";\nimport { obj, pure, vector } from \"../../_framework/util\";\nimport { ActiveJwk } from \"./structs\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function create(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::create`,\n    arguments: [],\n  });\n}\n\nexport interface ActiveJwkEqualArgs {\n  a: TransactionObjectInput;\n  b: TransactionObjectInput;\n}\n\nexport function activeJwkEqual(tx: Transaction, args: ActiveJwkEqualArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::active_jwk_equal`,\n    arguments: [obj(tx, args.a), obj(tx, args.b)],\n  });\n}\n\nexport function checkSorted(tx: Transaction, newActiveJwks: Array<TransactionObjectInput> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::check_sorted`,\n    arguments: [vector(tx, `${ActiveJwk.$typeName}`, newActiveJwks)],\n  });\n}\n\nexport function deduplicate(tx: Transaction, jwks: Array<TransactionObjectInput> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::deduplicate`,\n    arguments: [vector(tx, `${ActiveJwk.$typeName}`, jwks)],\n  });\n}\n\nexport interface ExpireJwksArgs {\n  self: TransactionObjectInput;\n  minEpoch: bigint | TransactionArgument;\n}\n\nexport function expireJwks(tx: Transaction, args: ExpireJwksArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::expire_jwks`,\n    arguments: [obj(tx, args.self), pure(tx, args.minEpoch, `u64`)],\n  });\n}\n\nexport function getActiveJwks(tx: Transaction, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::get_active_jwks`,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface JwkEqualArgs {\n  a: TransactionObjectInput;\n  b: TransactionObjectInput;\n}\n\nexport function jwkEqual(tx: Transaction, args: JwkEqualArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::jwk_equal`,\n    arguments: [obj(tx, args.a), obj(tx, args.b)],\n  });\n}\n\nexport interface JwkIdEqualArgs {\n  a: TransactionObjectInput;\n  b: TransactionObjectInput;\n}\n\nexport function jwkIdEqual(tx: Transaction, args: JwkIdEqualArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::jwk_id_equal`,\n    arguments: [obj(tx, args.a), obj(tx, args.b)],\n  });\n}\n\nexport interface JwkLtArgs {\n  a: TransactionObjectInput;\n  b: TransactionObjectInput;\n}\n\nexport function jwkLt(tx: Transaction, args: JwkLtArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::jwk_lt`,\n    arguments: [obj(tx, args.a), obj(tx, args.b)],\n  });\n}\n\nexport function loadInner(tx: Transaction, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::load_inner`,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function loadInnerMut(tx: Transaction, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::load_inner_mut`,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface StringBytesLtArgs {\n  a: string | TransactionArgument;\n  b: string | TransactionArgument;\n}\n\nexport function stringBytesLt(tx: Transaction, args: StringBytesLtArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::string_bytes_lt`,\n    arguments: [pure(tx, args.a, `${String.$typeName}`), pure(tx, args.b, `${String.$typeName}`)],\n  });\n}\n\nexport interface UpdateAuthenticatorStateArgs {\n  self: TransactionObjectInput;\n  newActiveJwks: Array<TransactionObjectInput> | TransactionArgument;\n}\n\nexport function updateAuthenticatorState(tx: Transaction, args: UpdateAuthenticatorStateArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::authenticator_state::update_authenticator_state`,\n    arguments: [obj(tx, args.self), vector(tx, `${ActiveJwk.$typeName}`, args.newActiveJwks)],\n  });\n}\n"]}