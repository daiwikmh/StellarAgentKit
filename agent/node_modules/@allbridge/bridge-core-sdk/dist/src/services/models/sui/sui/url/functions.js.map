{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/url/functions.ts"],"names":[],"mappings":";;AAMA,4BAKC;AAED,8BAKC;AAED,gDAKC;AAOD,wBAKC;AArCD,cAAc;AACd,0BAAkC;AAClC,0EAAsE;AACtE,gDAAkD;AAGlD,SAAgB,QAAQ,CAAC,EAAe,EAAE,IAA4B;IACpE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,kBAAkB;QACzC,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,SAAS,CAAC,EAAe,EAAE,GAAiC;IAC1E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,mBAAmB;QAC1C,SAAS,EAAE,CAAC,IAAA,WAAI,EAAC,EAAE,EAAE,GAAG,EAAE,GAAG,gBAAM,CAAC,SAAS,EAAE,CAAC,CAAC;KAClD,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,kBAAkB,CAAC,EAAe,EAAE,KAAgE;IAClH,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,8BAA8B;QACrD,SAAS,EAAE,CAAC,IAAA,WAAI,EAAC,EAAE,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;KAC3C,CAAC,CAAC;AACL,CAAC;AAOD,SAAgB,MAAM,CAAC,EAAe,EAAE,IAAgB;IACtD,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,eAAe;QACtC,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,gBAAM,CAAC,SAAS,EAAE,CAAC,CAAC;KAC3E,CAAC,CAAC;AACL,CAAC","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { String } from \"../../_dependencies/source/0x1/ascii/structs\";\nimport { obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function innerUrl(tx: Transaction, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::url::inner_url`,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function newUnsafe(tx: Transaction, url: string | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::url::new_unsafe`,\n    arguments: [pure(tx, url, `${String.$typeName}`)],\n  });\n}\n\nexport function newUnsafeFromBytes(tx: Transaction, bytes: Array<number | TransactionArgument> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::url::new_unsafe_from_bytes`,\n    arguments: [pure(tx, bytes, `vector<u8>`)],\n  });\n}\n\nexport interface UpdateArgs {\n  self: TransactionObjectInput;\n  url: string | TransactionArgument;\n}\n\nexport function update(tx: Transaction, args: UpdateArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::url::update`,\n    arguments: [obj(tx, args.self), pure(tx, args.url, `${String.$typeName}`)],\n  });\n}\n"]}