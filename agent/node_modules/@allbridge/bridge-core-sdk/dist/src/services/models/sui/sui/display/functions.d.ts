import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface AddArgs {
    self: TransactionObjectInput;
    name: string | TransactionArgument;
    value: string | TransactionArgument;
}
export declare function add(tx: Transaction, typeArg: string, args: AddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface RemoveArgs {
    self: TransactionObjectInput;
    name: string | TransactionArgument;
}
export declare function remove(tx: Transaction, typeArg: string, args: RemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function new_(tx: Transaction, typeArg: string, pub: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function version(tx: Transaction, typeArg: string, d: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface AddInternalArgs {
    display: TransactionObjectInput;
    name: string | TransactionArgument;
    value: string | TransactionArgument;
}
export declare function addInternal(tx: Transaction, typeArg: string, args: AddInternalArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface AddMultipleArgs {
    self: TransactionObjectInput;
    fields: Array<string | TransactionArgument> | TransactionArgument;
    values: Array<string | TransactionArgument> | TransactionArgument;
}
export declare function addMultiple(tx: Transaction, typeArg: string, args: AddMultipleArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function fields(tx: Transaction, typeArg: string, d: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function createAndKeep(tx: Transaction, typeArg: string, pub: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function createInternal(tx: Transaction, typeArg: string): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface EditArgs {
    self: TransactionObjectInput;
    name: string | TransactionArgument;
    value: string | TransactionArgument;
}
export declare function edit(tx: Transaction, typeArg: string, args: EditArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function isAuthorized(tx: Transaction, typeArg: string, pub: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface NewWithFieldsArgs {
    pub: TransactionObjectInput;
    fields: Array<string | TransactionArgument> | TransactionArgument;
    values: Array<string | TransactionArgument> | TransactionArgument;
}
export declare function newWithFields(tx: Transaction, typeArg: string, args: NewWithFieldsArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function updateVersion(tx: Transaction, typeArg: string, display: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
