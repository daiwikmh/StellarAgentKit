{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/utils/fee-collector/functions.ts"],"names":[],"mappings":";;AAKA,oBAMC;AAED,kBAMC;AAED,0BAMC;AAQD,4BAMC;AAOD,wBAMC;AAtDD,cAAc;AACd,0BAAkC;AAClC,gDAAuE;AAGvE,SAAgB,IAAI,CAAC,EAAe,EAAE,OAAe;IACnD,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,sBAAsB;QAC7C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,EAAE;KACd,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,GAAG,CAAC,EAAe,EAAE,OAAe;IAClD,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,sBAAsB;QAC7C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,EAAE;KACd,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,OAAO,CAAC,EAAe,EAAE,QAA0B,EAAE,YAAoC;IACvG,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,0BAA0B;QACjD,aAAa,EAAE,QAAQ;QACvB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,YAAY,CAAC,CAAC;KACnC,CAAC,CAAC;AACL,CAAC;AAQD,SAAgB,QAAQ,CAAC,EAAe,EAAE,QAA0B,EAAE,IAAkB;IACtF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,2BAA2B;QAClD,aAAa,EAAE,QAAQ;QACvB,SAAS,EAAE,CAAC,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KAC/G,CAAC,CAAC;AACL,CAAC;AAOD,SAAgB,MAAM,CAAC,EAAe,EAAE,QAA0B,EAAE,IAAgB;IAClF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,0BAA0B;QACjD,aAAa,EAAE,QAAQ;QACvB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5D,CAAC,CAAC;AACL,CAAC","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { GenericArg, generic, obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function new_(tx: Transaction, typeArg: string) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::fee_collector::new`,\n    typeArguments: [typeArg],\n    arguments: [],\n  });\n}\n\nexport function key(tx: Transaction, typeArg: string) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::fee_collector::key`,\n    typeArguments: [typeArg],\n    arguments: [],\n  });\n}\n\nexport function balance(tx: Transaction, typeArgs: [string, string], feeCollector: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::fee_collector::balance`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, feeCollector)],\n  });\n}\n\nexport interface WithdrawArgs {\n  cap: GenericArg;\n  feeCollector: TransactionObjectInput;\n  amount: bigint | TransactionArgument;\n}\n\nexport function withdraw(tx: Transaction, typeArgs: [string, string], args: WithdrawArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::fee_collector::withdraw`,\n    typeArguments: typeArgs,\n    arguments: [generic(tx, `${typeArgs[1]}`, args.cap), obj(tx, args.feeCollector), pure(tx, args.amount, `u64`)],\n  });\n}\n\nexport interface AddFeeArgs {\n  feeCollector: TransactionObjectInput;\n  coin: TransactionObjectInput;\n}\n\nexport function addFee(tx: Transaction, typeArgs: [string, string], args: AddFeeArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::fee_collector::add_fee`,\n    typeArguments: typeArgs,\n    arguments: [obj(tx, args.feeCollector), obj(tx, args.coin)],\n  });\n}\n"]}