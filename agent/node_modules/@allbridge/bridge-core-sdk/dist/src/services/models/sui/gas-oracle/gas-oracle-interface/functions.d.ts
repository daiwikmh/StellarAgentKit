import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface CrossRateArgs {
    oracle: TransactionObjectInput;
    otherChainId: number | TransactionArgument;
}
export declare function crossRate(tx: Transaction, args: CrossRateArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GasPriceArgs {
    gasOracle: TransactionObjectInput;
    chainId: number | TransactionArgument;
}
export declare function gasPrice(tx: Transaction, args: GasPriceArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetChainDataArgs {
    oracle: TransactionObjectInput;
    chainId: number | TransactionArgument;
}
export declare function getChainData(tx: Transaction, args: GetChainDataArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetTransactionGasCostInNativeTokenArgs {
    oracle: TransactionObjectInput;
    otherChainId: number | TransactionArgument;
    gasAmount: bigint | TransactionArgument;
}
export declare function getTransactionGasCostInNativeToken(tx: Transaction, args: GetTransactionGasCostInNativeTokenArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetTransactionGasCostInStableArgs {
    oracle: TransactionObjectInput;
    otherChainId: number | TransactionArgument;
    gasAmount: bigint | TransactionArgument;
    stableTokenDecimals: number | TransactionArgument;
}
export declare function getTransactionGasCostInStable(tx: Transaction, args: GetTransactionGasCostInStableArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface MigrateArgs {
    adminCap: TransactionObjectInput;
    gasOracle: TransactionObjectInput;
}
export declare function migrate(tx: Transaction, args: MigrateArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PriceArgs {
    gasOracle: TransactionObjectInput;
    chainId: number | TransactionArgument;
}
export declare function price(tx: Transaction, args: PriceArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetChainDataArgs {
    adminCap: TransactionObjectInput;
    oracle: TransactionObjectInput;
    chainId: number | TransactionArgument;
    gasPrice: bigint | TransactionArgument;
    price: bigint | TransactionArgument;
}
export declare function setChainData(tx: Transaction, args: SetChainDataArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetGasPriceArgs {
    adminCap: TransactionObjectInput;
    oracle: TransactionObjectInput;
    chainId: number | TransactionArgument;
    gasPrice: bigint | TransactionArgument;
}
export declare function setGasPrice(tx: Transaction, args: SetGasPriceArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetPriceArgs {
    adminCap: TransactionObjectInput;
    oracle: TransactionObjectInput;
    chainId: number | TransactionArgument;
    price: bigint | TransactionArgument;
}
export declare function setPrice(tx: Transaction, args: SetPriceArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface StableToSuiAmountArgs {
    gasOracle: TransactionObjectInput;
    amount: bigint | TransactionArgument;
    stableTokenDecimals: number | TransactionArgument;
}
export declare function stableToSuiAmount(tx: Transaction, args: StableToSuiAmountArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function chainDataGasPrice(tx: Transaction, chainData: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function chainDataPrice(tx: Transaction, chainData: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
