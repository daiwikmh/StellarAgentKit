{"version":3,"file":"structs.js","sourceRoot":"","sources":["../../../../../../../../../src/services/models/sui/_dependencies/source/0xf47329f4344f3bf0f8e436e2f7b485466cff300f12a166563995d3888c296a94/guardian-set/structs.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport * as reified from \"../../../../_framework/reified\";\nimport {\n  PhantomReified,\n  Reified,\n  StructClass,\n  ToField,\n  ToTypeStr,\n  decodeFromFields,\n  decodeFromFieldsWithTypes,\n  decodeFromJSONField,\n  fieldToJSON,\n  phantom,\n} from \"../../../../_framework/reified\";\nimport { FieldsWithTypes, composeSuiType, compressSuiType } from \"../../../../_framework/util\";\nimport { Vector } from \"../../../../_framework/vector\";\nimport { Guardian } from \"../guardian/structs\";\nimport { PKG_V1 } from \"../index\";\nimport { bcs } from \"@mysten/sui/bcs\";\nimport { SuiClient, SuiObjectData, SuiParsedData } from \"@mysten/sui/client\";\nimport { fromB64 } from \"@mysten/sui/utils\";\n\n/* ============================== GuardianSet =============================== */\n\nexport function isGuardianSet(type: string): boolean {\n  type = compressSuiType(type);\n  return type === `${PKG_V1}::guardian_set::GuardianSet`;\n}\n\nexport interface GuardianSetFields {\n  index: ToField<\"u32\">;\n  guardians: ToField<Vector<Guardian>>;\n  expirationTimestampMs: ToField<\"u64\">;\n}\n\nexport type GuardianSetReified = Reified<GuardianSet, GuardianSetFields>;\n\nexport class GuardianSet implements StructClass {\n  __StructClass = true as const;\n\n  static get $typeName() {\n    return `${PKG_V1}::guardian_set::GuardianSet`;\n  }\n  static readonly $numTypeParams = 0;\n  static readonly $isPhantom = [] as const;\n\n  readonly $typeName = GuardianSet.$typeName;\n  readonly $fullTypeName: string;\n  readonly $typeArgs: [];\n  readonly $isPhantom = GuardianSet.$isPhantom;\n\n  readonly index: ToField<\"u32\">;\n  readonly guardians: ToField<Vector<Guardian>>;\n  readonly expirationTimestampMs: ToField<\"u64\">;\n\n  private constructor(typeArgs: [], fields: GuardianSetFields) {\n    this.$fullTypeName = composeSuiType(GuardianSet.$typeName, ...typeArgs) as string;\n    this.$typeArgs = typeArgs;\n\n    this.index = fields.index;\n    this.guardians = fields.guardians;\n    this.expirationTimestampMs = fields.expirationTimestampMs;\n  }\n\n  static reified(): GuardianSetReified {\n    return {\n      typeName: GuardianSet.$typeName,\n      fullTypeName: composeSuiType(GuardianSet.$typeName, ...[]) as string,\n      typeArgs: [] as [],\n      isPhantom: GuardianSet.$isPhantom,\n      reifiedTypeArgs: [],\n      fromFields: (fields: Record<string, any>) => GuardianSet.fromFields(fields),\n      fromFieldsWithTypes: (item: FieldsWithTypes) => GuardianSet.fromFieldsWithTypes(item),\n      fromBcs: (data: Uint8Array) => GuardianSet.fromBcs(data),\n      bcs: GuardianSet.bcs,\n      fromJSONField: (field: any) => GuardianSet.fromJSONField(field),\n      fromJSON: (json: Record<string, any>) => GuardianSet.fromJSON(json),\n      fromSuiParsedData: (content: SuiParsedData) => GuardianSet.fromSuiParsedData(content),\n      fromSuiObjectData: (content: SuiObjectData) => GuardianSet.fromSuiObjectData(content),\n      fetch: async (client: SuiClient, id: string) => GuardianSet.fetch(client, id),\n      new: (fields: GuardianSetFields) => {\n        return new GuardianSet([], fields);\n      },\n      kind: \"StructClassReified\",\n    };\n  }\n\n  static get r() {\n    return GuardianSet.reified();\n  }\n\n  static phantom(): PhantomReified<ToTypeStr<GuardianSet>> {\n    return phantom(GuardianSet.reified());\n  }\n  static get p() {\n    return GuardianSet.phantom();\n  }\n\n  static get bcs() {\n    return bcs.struct(\"GuardianSet\", {\n      index: bcs.u32(),\n      guardians: bcs.vector(Guardian.bcs),\n      expiration_timestamp_ms: bcs.u64(),\n    });\n  }\n\n  static fromFields(fields: Record<string, any>): GuardianSet {\n    return GuardianSet.reified().new({\n      index: decodeFromFields(\"u32\", fields.index),\n      guardians: decodeFromFields(reified.vector(Guardian.reified()), fields.guardians),\n      expirationTimestampMs: decodeFromFields(\"u64\", fields.expiration_timestamp_ms),\n    });\n  }\n\n  static fromFieldsWithTypes(item: FieldsWithTypes): GuardianSet {\n    if (!isGuardianSet(item.type)) {\n      throw new Error(\"not a GuardianSet type\");\n    }\n\n    return GuardianSet.reified().new({\n      index: decodeFromFieldsWithTypes(\"u32\", item.fields.index),\n      guardians: decodeFromFieldsWithTypes(reified.vector(Guardian.reified()), item.fields.guardians),\n      expirationTimestampMs: decodeFromFieldsWithTypes(\"u64\", item.fields.expiration_timestamp_ms),\n    });\n  }\n\n  static fromBcs(data: Uint8Array): GuardianSet {\n    return GuardianSet.fromFields(GuardianSet.bcs.parse(data));\n  }\n\n  toJSONField() {\n    return {\n      index: this.index,\n      guardians: fieldToJSON<Vector<Guardian>>(`vector<${Guardian.$typeName}>`, this.guardians),\n      expirationTimestampMs: this.expirationTimestampMs.toString(),\n    };\n  }\n\n  toJSON() {\n    return {\n      $typeName: this.$typeName,\n      $typeArgs: this.$typeArgs,\n      ...this.toJSONField(),\n    };\n  }\n\n  static fromJSONField(field: any): GuardianSet {\n    return GuardianSet.reified().new({\n      index: decodeFromJSONField(\"u32\", field.index),\n      guardians: decodeFromJSONField(reified.vector(Guardian.reified()), field.guardians),\n      expirationTimestampMs: decodeFromJSONField(\"u64\", field.expirationTimestampMs),\n    });\n  }\n\n  static fromJSON(json: Record<string, any>): GuardianSet {\n    if (json.$typeName !== GuardianSet.$typeName) {\n      throw new Error(\"not a WithTwoGenerics json object\");\n    }\n\n    return GuardianSet.fromJSONField(json);\n  }\n\n  static fromSuiParsedData(content: SuiParsedData): GuardianSet {\n    if (content.dataType !== \"moveObject\") {\n      throw new Error(\"not an object\");\n    }\n    if (!isGuardianSet(content.type)) {\n      throw new Error(`object at ${(content.fields as any).id} is not a GuardianSet object`);\n    }\n    return GuardianSet.fromFieldsWithTypes(content);\n  }\n\n  static fromSuiObjectData(data: SuiObjectData): GuardianSet {\n    if (data.bcs) {\n      if (data.bcs.dataType !== \"moveObject\" || !isGuardianSet(data.bcs.type)) {\n        throw new Error(`object at is not a GuardianSet object`);\n      }\n\n      return GuardianSet.fromBcs(fromB64(data.bcs.bcsBytes));\n    }\n    if (data.content) {\n      return GuardianSet.fromSuiParsedData(data.content);\n    }\n    throw new Error(\n      \"Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.\"\n    );\n  }\n\n  static async fetch(client: SuiClient, id: string): Promise<GuardianSet> {\n    const res = await client.getObject({ id, options: { showBcs: true } });\n    if (res.error) {\n      throw new Error(`error fetching GuardianSet object at id ${id}: ${res.error.code}`);\n    }\n    if (res.data?.bcs?.dataType !== \"moveObject\" || !isGuardianSet(res.data.bcs.type)) {\n      throw new Error(`object at id ${id} is not a GuardianSet object`);\n    }\n\n    return GuardianSet.fromSuiObjectData(res.data);\n  }\n}\n"]}