"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerClasses = registerClasses;
// @ts-nocheck
const anotherBridge = __importStar(require("./another-bridge/structs"));
const bridge = __importStar(require("./bridge/structs"));
const events = __importStar(require("./events/structs"));
const poolRewards = __importStar(require("./pool-rewards/structs"));
const poolState = __importStar(require("./pool-state/structs"));
const pool = __importStar(require("./pool/structs"));
const userDeposit = __importStar(require("./user-deposit/structs"));
function registerClasses(loader) {
    loader.register(anotherBridge.AnotherBridge);
    loader.register(userDeposit.UserDeposit);
    loader.register(poolRewards.PoolRewards);
    loader.register(poolState.PoolState);
    loader.register(events.DepositEvent);
    loader.register(events.ReceiveFeeEvent);
    loader.register(events.RewardsClaimedEvent);
    loader.register(events.SwappedEvent);
    loader.register(events.SwappedFromVUsdEvent);
    loader.register(events.SwappedToVUsdEvent);
    loader.register(events.TokensReceivedEvent);
    loader.register(events.TokensSentEvent);
    loader.register(events.WithdrawEvent);
    loader.register(pool.AdminCap);
    loader.register(pool.Pool);
    loader.register(pool.StopCap);
    loader.register(bridge.AdminCap);
    loader.register(bridge.Bridge);
    loader.register(bridge.FeeCollectorCap);
    loader.register(bridge.StopSwapCap);
}
//# sourceMappingURL=init.js.map