{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/bridge/user-deposit/functions.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport interface AddArgs {\n  userDeposit: TransactionObjectInput;\n  lpAmount: bigint | TransactionArgument;\n  accRewardPerShareP: bigint | TransactionArgument;\n}\n\nexport function add(tx: Transaction, typeArg: string, args: AddArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::user_deposit::add`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.userDeposit), pure(tx, args.lpAmount, `u64`), pure(tx, args.accRewardPerShareP, `u128`)],\n  });\n}\n\nexport function destroyEmpty(tx: Transaction, typeArg: string, userDeposit: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::user_deposit::destroy_empty`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, userDeposit)],\n  });\n}\n\nexport interface RemoveArgs {\n  userDeposit: TransactionObjectInput;\n  lpAmount: bigint | TransactionArgument;\n  accRewardPerShareP: bigint | TransactionArgument;\n}\n\nexport function remove(tx: Transaction, typeArg: string, args: RemoveArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::user_deposit::remove`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.userDeposit), pure(tx, args.lpAmount, `u64`), pure(tx, args.accRewardPerShareP, `u128`)],\n  });\n}\n\nexport function new_(tx: Transaction, typeArg: string) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::user_deposit::new`,\n    typeArguments: [typeArg],\n    arguments: [],\n  });\n}\n\nexport function lpAmount(tx: Transaction, typeArg: string, userDeposit: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::user_deposit::lp_amount`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, userDeposit)],\n  });\n}\n\nexport function rewardDebt(tx: Transaction, typeArg: string, userDeposit: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::user_deposit::reward_debt`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, userDeposit)],\n  });\n}\n\nexport interface UpdateRewardDebtArgs {\n  userDeposit: TransactionObjectInput;\n  accRewardPerShareP: bigint | TransactionArgument;\n}\n\nexport function updateRewardDebt(tx: Transaction, typeArg: string, args: UpdateRewardDebtArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::user_deposit::update_reward_debt`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.userDeposit), pure(tx, args.accRewardPerShareP, `u128`)],\n  });\n}\n"]}