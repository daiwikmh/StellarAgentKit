import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface MigrateArgs {
    admin: TransactionObjectInput;
    messenger: TransactionObjectInput;
}
export declare function migrate(tx: Transaction, args: MigrateArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function gasBalanceValue(tx: Transaction, messenger: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetGasUsageArgs {
    messenger: TransactionObjectInput;
    chainId: number | TransactionArgument;
}
export declare function getGasUsage(tx: Transaction, args: GetGasUsageArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function getOtherChainIds(tx: Transaction, messenger: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetTransactionCostArgs {
    messenger: TransactionObjectInput;
    gasOracle: TransactionObjectInput;
    chainId: number | TransactionArgument;
}
export declare function getTransactionCost(tx: Transaction, args: GetTransactionCostArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface ReceiveMessageArgs {
    messenger: TransactionObjectInput;
    message: TransactionObjectInput;
    signaturePrimary: Array<number | TransactionArgument> | TransactionArgument;
    signatureSecondary: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function receiveMessage(tx: Transaction, args: ReceiveMessageArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SendMessageArgs {
    messenger: TransactionObjectInput;
    gasOracle: TransactionObjectInput;
    coin: TransactionObjectInput;
    message: TransactionObjectInput;
    sender: TransactionObjectInput;
}
export declare function sendMessage(tx: Transaction, args: SendMessageArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetGasUsageArgs {
    adminCap: TransactionObjectInput;
    messenger: TransactionObjectInput;
    chainId: number | TransactionArgument;
    gasAmount: bigint | TransactionArgument;
}
export declare function setGasUsage(tx: Transaction, args: SetGasUsageArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetOtherChainsArgs {
    adminCap: TransactionObjectInput;
    messenger: TransactionObjectInput;
    otherChainIds: Array<boolean | TransactionArgument> | TransactionArgument;
}
export declare function setOtherChains(tx: Transaction, args: SetOtherChainsArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface WithdrawFeeArgs {
    adminCap: TransactionObjectInput;
    messenger: TransactionObjectInput;
    amount: bigint | TransactionArgument;
}
export declare function withdrawFee(tx: Transaction, args: WithdrawFeeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface HasReceivedMessageArgs {
    messenger: TransactionObjectInput;
    message: TransactionObjectInput;
}
export declare function hasReceivedMessage(tx: Transaction, args: HasReceivedMessageArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface HasSentMessagesArgs {
    messenger: TransactionObjectInput;
    message: TransactionObjectInput;
}
export declare function hasSentMessages(tx: Transaction, args: HasSentMessagesArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface AddSecondaryValidatorArgs {
    adminCap: TransactionObjectInput;
    messenger: TransactionObjectInput;
    secondaryValidator: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function addSecondaryValidator(tx: Transaction, args: AddSecondaryValidatorArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface RemoveSecondaryValidatorArgs {
    adminCap: TransactionObjectInput;
    messenger: TransactionObjectInput;
    secondaryValidator: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function removeSecondaryValidator(tx: Transaction, args: RemoveSecondaryValidatorArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SetPrimaryValidatorArgs {
    adminCap: TransactionObjectInput;
    messenger: TransactionObjectInput;
    primaryValidator: Array<number | TransactionArgument> | TransactionArgument;
}
export declare function setPrimaryValidator(tx: Transaction, args: SetPrimaryValidatorArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
