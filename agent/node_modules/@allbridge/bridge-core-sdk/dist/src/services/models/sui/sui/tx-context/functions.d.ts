import { Transaction, TransactionArgument } from "@mysten/sui/transactions";
export interface DeriveIdArgs {
    txHash: Array<number | TransactionArgument> | TransactionArgument;
    idsCreated: bigint | TransactionArgument;
}
export declare function deriveId(tx: Transaction, args: DeriveIdArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function idsCreated(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function digest(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function epoch(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function epochTimestampMs(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function freshObjectAddress(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function sender(tx: Transaction): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
