{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/utils/message/functions.ts"],"names":[],"mappings":";;AAMA,oBAKC;AAED,8BAKC;AAED,oBAKC;AAED,sBAKC;AAOD,8BAKC;AAED,8BAKC;AAED,0BAKC;AAYD,4BAaC;AAaD,gDAcC;AA9GD,cAAc;AACd,0BAAkC;AAClC,gDAAkD;AAClD,sDAA8C;AAG9C,SAAgB,IAAI,CAAC,EAAe,EAAE,OAA+B;IACnE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,iBAAiB;QACxC,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAC9B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,SAAS,CAAC,EAAe,EAAE,OAAkE;IAC3G,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,uBAAuB;QAC9C,SAAS,EAAE,CAAC,IAAA,WAAI,EAAC,EAAE,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;KAC7C,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,IAAI,CAAC,EAAe,EAAE,OAA+B;IACnE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,gBAAgB;QACvC,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAC9B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,KAAK,CAAC,EAAe,EAAE,OAA+B;IACpE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,mBAAmB;QAC1C,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAC9B,CAAC,CAAC;AACL,CAAC;AAOD,SAAgB,SAAS,CAAC,EAAe,EAAE,IAAmB;IAC5D,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,uBAAuB;QAC9C,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,YAAE,CAAC,SAAS,EAAE,CAAC,CAAC;KAC7E,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,SAAS,CAAC,EAAe,EAAE,OAA+B;IACxE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,uBAAuB;QAC9C,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAC9B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,OAAO,CAAC,EAAe,EAAE,OAA+B;IACtE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,qBAAqB;QAC5C,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAC9B,CAAC,CAAC;AACL,CAAC;AAYD,SAAgB,QAAQ,CAAC,EAAe,EAAE,IAAkB;IAC1D,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,sBAAsB;QAC7C,SAAS,EAAE;YACT,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;YAC5B,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC;YACvB,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC;YAClC,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC;YACvC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC;YAC1B,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC;YAC5B,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC;SACxB;KACF,CAAC,CAAC;AACL,CAAC;AAaD,SAAgB,kBAAkB,CAAC,EAAe,EAAE,IAA4B;IAC9E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,kCAAkC;QACzD,SAAS,EAAE;YACT,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;YAC5B,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC;YACvB,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC;YAClC,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC;YACvC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC;YAC1B,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC;YAC5B,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC;YACvB,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,YAAE,CAAC,SAAS,EAAE,CAAC;SACzC;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { obj, pure } from \"../../_framework/util\";\nimport { ID } from \"../../sui/object/structs\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function data(tx: Transaction, message: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::message::data`,\n    arguments: [obj(tx, message)],\n  });\n}\n\nexport function fromBytes(tx: Transaction, message: Array<number | TransactionArgument> | TransactionArgument) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::message::from_bytes`,\n    arguments: [pure(tx, message, `vector<u8>`)],\n  });\n}\n\nexport function new_(tx: Transaction, message: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::message::new`,\n    arguments: [obj(tx, message)],\n  });\n}\n\nexport function toHex(tx: Transaction, message: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::message::to_hex`,\n    arguments: [obj(tx, message)],\n  });\n}\n\nexport interface AddSenderArgs {\n  message: TransactionObjectInput;\n  sender: string | TransactionArgument;\n}\n\nexport function addSender(tx: Transaction, args: AddSenderArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::message::add_sender`,\n    arguments: [obj(tx, args.message), pure(tx, args.sender, `${ID.$typeName}`)],\n  });\n}\n\nexport function chainFrom(tx: Transaction, message: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::message::chain_from`,\n    arguments: [obj(tx, message)],\n  });\n}\n\nexport function chainTo(tx: Transaction, message: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::message::chain_to`,\n    arguments: [obj(tx, message)],\n  });\n}\n\nexport interface FromArgsArgs {\n  amount: bigint | TransactionArgument;\n  recipient: TransactionObjectInput;\n  sourceChainId: number | TransactionArgument;\n  destinationChainId: number | TransactionArgument;\n  receiveToken: TransactionObjectInput;\n  nonce: bigint | TransactionArgument;\n  messenger: TransactionObjectInput;\n}\n\nexport function fromArgs(tx: Transaction, args: FromArgsArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::message::from_args`,\n    arguments: [\n      pure(tx, args.amount, `u64`),\n      obj(tx, args.recipient),\n      pure(tx, args.sourceChainId, `u8`),\n      pure(tx, args.destinationChainId, `u8`),\n      obj(tx, args.receiveToken),\n      pure(tx, args.nonce, `u256`),\n      obj(tx, args.messenger),\n    ],\n  });\n}\n\nexport interface FromArgsWithSenderArgs {\n  amount: bigint | TransactionArgument;\n  recipient: TransactionObjectInput;\n  sourceChainId: number | TransactionArgument;\n  destinationChainId: number | TransactionArgument;\n  receiveToken: TransactionObjectInput;\n  nonce: bigint | TransactionArgument;\n  messenger: TransactionObjectInput;\n  sender: string | TransactionArgument;\n}\n\nexport function fromArgsWithSender(tx: Transaction, args: FromArgsWithSenderArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::message::from_args_with_sender`,\n    arguments: [\n      pure(tx, args.amount, `u64`),\n      obj(tx, args.recipient),\n      pure(tx, args.sourceChainId, `u8`),\n      pure(tx, args.destinationChainId, `u8`),\n      obj(tx, args.receiveToken),\n      pure(tx, args.nonce, `u256`),\n      obj(tx, args.messenger),\n      pure(tx, args.sender, `${ID.$typeName}`),\n    ],\n  });\n}\n"]}