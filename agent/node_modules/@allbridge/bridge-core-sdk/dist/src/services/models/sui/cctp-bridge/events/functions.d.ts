import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface ReceiveFeeEventArgs {
    userPaySui: bigint | TransactionArgument;
    userPayStable: bigint | TransactionArgument;
    totalPaySui: bigint | TransactionArgument;
    totalFeeSui: bigint | TransactionArgument;
}
export declare function receiveFeeEvent(tx: Transaction, args: ReceiveFeeEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface TokensReceivedEventArgs {
    recipient: string | TransactionArgument;
    message: Array<number | TransactionArgument> | TransactionArgument;
    extraGasValue: bigint | TransactionArgument;
}
export declare function tokensReceivedEvent(tx: Transaction, typeArg: string, args: TokensReceivedEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface TokensSentEventArgs {
    amount: bigint | TransactionArgument;
    adminFee: bigint | TransactionArgument;
    sender: string | TransactionArgument;
    recipient: TransactionObjectInput;
    recipientWalletAddress: TransactionObjectInput;
    destinationChainId: number | TransactionArgument;
    nonce: bigint | TransactionArgument;
}
export declare function tokensSentEvent(tx: Transaction, typeArg: string, args: TokensSentEventArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface RecipientReplacedArgs {
    sender: string | TransactionArgument;
    nonce: bigint | TransactionArgument;
    newRecipitne: TransactionObjectInput;
}
export declare function recipientReplaced(tx: Transaction, typeArg: string, args: RecipientReplacedArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
