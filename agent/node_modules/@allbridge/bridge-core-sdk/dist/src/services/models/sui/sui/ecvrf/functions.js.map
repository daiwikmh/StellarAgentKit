{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/ecvrf/functions.ts"],"names":[],"mappings":";;AAYA,kCAUC;AAtBD,cAAc;AACd,0BAAkC;AAClC,gDAA6C;AAU7C,SAAgB,WAAW,CAAC,EAAe,EAAE,IAAqB;IAChE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,uBAAuB;QAC9C,SAAS,EAAE;YACT,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;YACjC,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC;YACxC,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;YACtC,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC;SACnC;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument } from \"@mysten/sui/transactions\";\n\nexport interface EcvrfVerifyArgs {\n  hash: Array<number | TransactionArgument> | TransactionArgument;\n  alphaString: Array<number | TransactionArgument> | TransactionArgument;\n  publicKey: Array<number | TransactionArgument> | TransactionArgument;\n  proof: Array<number | TransactionArgument> | TransactionArgument;\n}\n\nexport function ecvrfVerify(tx: Transaction, args: EcvrfVerifyArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::ecvrf::ecvrf_verify`,\n    arguments: [\n      pure(tx, args.hash, `vector<u8>`),\n      pure(tx, args.alphaString, `vector<u8>`),\n      pure(tx, args.publicKey, `vector<u8>`),\n      pure(tx, args.proof, `vector<u8>`),\n    ],\n  });\n}\n"]}