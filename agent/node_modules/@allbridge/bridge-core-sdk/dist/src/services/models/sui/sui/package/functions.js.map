{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/package/functions.ts"],"names":[],"mappings":";;AAKA,0BAKC;AAED,wCAKC;AAQD,4CAKC;AAED,sCAKC;AAED,sBAMC;AAED,oCAMC;AAOD,sCAKC;AAED,4CAKC;AAED,sCAKC;AAED,gCAMC;AAED,kCAMC;AAED,sCAKC;AAED,oDAKC;AAED,0CAKC;AAED,0CAKC;AAED,4CAKC;AAED,gCAKC;AAED,wCAKC;AAOD,4BAKC;AAED,oCAKC;AAED,sCAKC;AAED,oCAKC;AAED,wCAKC;AAED,sCAKC;AA/LD,cAAc;AACd,0BAAkC;AAClC,gDAAuE;AAGvE,SAAgB,OAAO,CAAC,EAAe,EAAE,GAA2B;IAClE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,oBAAoB;QAC3C,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,GAAG,CAAC,CAAC;KAC1B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,cAAc,CAAC,EAAe;IAC5C,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,4BAA4B;QACnD,SAAS,EAAE,EAAE;KACd,CAAC,CAAC;AACL,CAAC;AAQD,SAAgB,gBAAgB,CAAC,EAAe,EAAE,IAA0B;IAC1E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,8BAA8B;QACrD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KACjG,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,aAAa,CAAC,EAAe,EAAE,IAA4B;IACzE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,2BAA2B;QAClD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,KAAK,CAAC,EAAe,EAAE,OAAe,EAAE,GAAe;IACrE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,kBAAkB;QACzC,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,GAAG,CAAC,CAAC;KAC5C,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,YAAY,CAAC,EAAe,EAAE,OAAe,EAAE,GAAe;IAC5E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,2BAA2B;QAClD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,GAAG,CAAC,CAAC;KAC5C,CAAC,CAAC;AACL,CAAC;AAOD,SAAgB,aAAa,CAAC,EAAe,EAAE,IAAuB;IACpE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,2BAA2B;QAClD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACtD,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,gBAAgB,CAAC,EAAe;IAC9C,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,8BAA8B;QACrD,SAAS,EAAE,EAAE;KACd,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,aAAa,CAAC,EAAe;IAC3C,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,4BAA4B;QACnD,SAAS,EAAE,EAAE;KACd,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,UAAU,CAAC,EAAe,EAAE,OAAe,EAAE,IAA4B;IACvF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,wBAAwB;QAC/C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,WAAW,CAAC,EAAe,EAAE,OAAe,EAAE,IAA4B;IACxF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,yBAAyB;QAChD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,aAAa,CAAC,EAAe,EAAE,GAA2B;IACxE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,2BAA2B;QAClD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,GAAG,CAAC,CAAC;KAC1B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,oBAAoB,CAAC,EAAe,EAAE,GAA2B;IAC/E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,mCAAmC;QAC1D,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,GAAG,CAAC,CAAC;KAC1B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,eAAe,CAAC,EAAe,EAAE,GAA2B;IAC1E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,8BAA8B;QACrD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,GAAG,CAAC,CAAC;KAC1B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,eAAe,CAAC,EAAe,EAAE,IAA4B;IAC3E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,6BAA6B;QACpD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,gBAAgB,CAAC,EAAe,EAAE,IAA4B;IAC5E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,8BAA8B;QACrD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,UAAU,CAAC,EAAe,EAAE,OAA+B;IACzE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,wBAAwB;QAC/C,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAC9B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,cAAc,CAAC,EAAe,EAAE,OAA+B;IAC7E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,4BAA4B;QACnD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAC9B,CAAC,CAAC;AACL,CAAC;AAOD,SAAgB,QAAQ,CAAC,EAAe,EAAE,IAAkB;IAC1D,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,qBAAqB;QAC5C,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KAC5D,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,YAAY,CAAC,EAAe,EAAE,MAA8B;IAC1E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,0BAA0B;QACjD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,MAAM,CAAC,CAAC;KAC7B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,aAAa,CAAC,EAAe,EAAE,MAA8B;IAC3E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,2BAA2B;QAClD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,MAAM,CAAC,CAAC;KAC7B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,YAAY,CAAC,EAAe,EAAE,MAA8B;IAC1E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,0BAA0B;QACjD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,MAAM,CAAC,CAAC;KAC7B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,cAAc,CAAC,EAAe,EAAE,GAA2B;IACzE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,4BAA4B;QACnD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,GAAG,CAAC,CAAC;KAC1B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,aAAa,CAAC,EAAe,EAAE,GAA2B;IACxE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,2BAA2B;QAClD,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,GAAG,CAAC,CAAC;KAC1B,CAAC,CAAC;AACL,CAAC","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { GenericArg, generic, obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function version(tx: Transaction, cap: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::version`,\n    arguments: [obj(tx, cap)],\n  });\n}\n\nexport function additivePolicy(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::additive_policy`,\n    arguments: [],\n  });\n}\n\nexport interface AuthorizeUpgradeArgs {\n  cap: TransactionObjectInput;\n  policy: number | TransactionArgument;\n  digest: Array<number | TransactionArgument> | TransactionArgument;\n}\n\nexport function authorizeUpgrade(tx: Transaction, args: AuthorizeUpgradeArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::authorize_upgrade`,\n    arguments: [obj(tx, args.cap), pure(tx, args.policy, `u8`), pure(tx, args.digest, `vector<u8>`)],\n  });\n}\n\nexport function burnPublisher(tx: Transaction, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::burn_publisher`,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function claim(tx: Transaction, typeArg: string, otw: GenericArg) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::claim`,\n    typeArguments: [typeArg],\n    arguments: [generic(tx, `${typeArg}`, otw)],\n  });\n}\n\nexport function claimAndKeep(tx: Transaction, typeArg: string, otw: GenericArg) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::claim_and_keep`,\n    typeArguments: [typeArg],\n    arguments: [generic(tx, `${typeArg}`, otw)],\n  });\n}\n\nexport interface CommitUpgradeArgs {\n  cap: TransactionObjectInput;\n  receipt: TransactionObjectInput;\n}\n\nexport function commitUpgrade(tx: Transaction, args: CommitUpgradeArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::commit_upgrade`,\n    arguments: [obj(tx, args.cap), obj(tx, args.receipt)],\n  });\n}\n\nexport function compatiblePolicy(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::compatible_policy`,\n    arguments: [],\n  });\n}\n\nexport function depOnlyPolicy(tx: Transaction) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::dep_only_policy`,\n    arguments: [],\n  });\n}\n\nexport function fromModule(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::from_module`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function fromPackage(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::from_package`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function makeImmutable(tx: Transaction, cap: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::make_immutable`,\n    arguments: [obj(tx, cap)],\n  });\n}\n\nexport function onlyAdditiveUpgrades(tx: Transaction, cap: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::only_additive_upgrades`,\n    arguments: [obj(tx, cap)],\n  });\n}\n\nexport function onlyDepUpgrades(tx: Transaction, cap: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::only_dep_upgrades`,\n    arguments: [obj(tx, cap)],\n  });\n}\n\nexport function publishedModule(tx: Transaction, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::published_module`,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function publishedPackage(tx: Transaction, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::published_package`,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function receiptCap(tx: Transaction, receipt: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::receipt_cap`,\n    arguments: [obj(tx, receipt)],\n  });\n}\n\nexport function receiptPackage(tx: Transaction, receipt: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::receipt_package`,\n    arguments: [obj(tx, receipt)],\n  });\n}\n\nexport interface RestrictArgs {\n  cap: TransactionObjectInput;\n  policy: number | TransactionArgument;\n}\n\nexport function restrict(tx: Transaction, args: RestrictArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::restrict`,\n    arguments: [obj(tx, args.cap), pure(tx, args.policy, `u8`)],\n  });\n}\n\nexport function ticketDigest(tx: Transaction, ticket: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::ticket_digest`,\n    arguments: [obj(tx, ticket)],\n  });\n}\n\nexport function ticketPackage(tx: Transaction, ticket: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::ticket_package`,\n    arguments: [obj(tx, ticket)],\n  });\n}\n\nexport function ticketPolicy(tx: Transaction, ticket: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::ticket_policy`,\n    arguments: [obj(tx, ticket)],\n  });\n}\n\nexport function upgradePackage(tx: Transaction, cap: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::upgrade_package`,\n    arguments: [obj(tx, cap)],\n  });\n}\n\nexport function upgradePolicy(tx: Transaction, cap: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::package::upgrade_policy`,\n    arguments: [obj(tx, cap)],\n  });\n}\n"]}