import { Transaction, TransactionArgument } from "@mysten/sui/transactions";
export declare function hashToInput(tx: Transaction, message: Array<number | TransactionArgument> | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function hashToInputInternal(tx: Transaction, message: Array<number | TransactionArgument> | TransactionArgument): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface VdfVerifyArgs {
    input: Array<number | TransactionArgument> | TransactionArgument;
    output: Array<number | TransactionArgument> | TransactionArgument;
    proof: Array<number | TransactionArgument> | TransactionArgument;
    iterations: bigint | TransactionArgument;
}
export declare function vdfVerify(tx: Transaction, args: VdfVerifyArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface VdfVerifyInternalArgs {
    input: Array<number | TransactionArgument> | TransactionArgument;
    output: Array<number | TransactionArgument> | TransactionArgument;
    proof: Array<number | TransactionArgument> | TransactionArgument;
    iterations: bigint | TransactionArgument;
}
export declare function vdfVerifyInternal(tx: Transaction, args: VdfVerifyInternalArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
