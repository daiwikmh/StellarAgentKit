{"version":3,"file":"structs.js","sourceRoot":"","sources":["../../../../../../../../../src/services/models/sui/_dependencies/source/0xf47329f4344f3bf0f8e436e2f7b485466cff300f12a166563995d3888c296a94/bytes32/structs.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport * as reified from \"../../../../_framework/reified\";\nimport {\n  PhantomReified,\n  Reified,\n  StructClass,\n  ToField,\n  ToTypeStr,\n  decodeFromFields,\n  decodeFromFieldsWithTypes,\n  decodeFromJSONField,\n  fieldToJSON,\n  phantom,\n} from \"../../../../_framework/reified\";\nimport { FieldsWithTypes, composeSuiType, compressSuiType } from \"../../../../_framework/util\";\nimport { Vector } from \"../../../../_framework/vector\";\nimport { PKG_V1 } from \"../index\";\nimport { bcs } from \"@mysten/sui/bcs\";\nimport { SuiClient, SuiObjectData, SuiParsedData } from \"@mysten/sui/client\";\nimport { fromB64 } from \"@mysten/sui/utils\";\n\n/* ============================== Bytes32 =============================== */\n\nexport function isBytes32(type: string): boolean {\n  type = compressSuiType(type);\n  return type === `${PKG_V1}::bytes32::Bytes32`;\n}\n\nexport interface Bytes32Fields {\n  data: ToField<Vector<\"u8\">>;\n}\n\nexport type Bytes32Reified = Reified<Bytes32, Bytes32Fields>;\n\nexport class Bytes32 implements StructClass {\n  __StructClass = true as const;\n\n  static get $typeName() {\n    return `${PKG_V1}::bytes32::Bytes32`;\n  }\n  static readonly $numTypeParams = 0;\n  static readonly $isPhantom = [] as const;\n\n  readonly $typeName = Bytes32.$typeName;\n  readonly $fullTypeName: string;\n  readonly $typeArgs: [];\n  readonly $isPhantom = Bytes32.$isPhantom;\n\n  readonly data: ToField<Vector<\"u8\">>;\n\n  private constructor(typeArgs: [], fields: Bytes32Fields) {\n    this.$fullTypeName = composeSuiType(Bytes32.$typeName, ...typeArgs) as string;\n    this.$typeArgs = typeArgs;\n\n    this.data = fields.data;\n  }\n\n  static reified(): Bytes32Reified {\n    return {\n      typeName: Bytes32.$typeName,\n      fullTypeName: composeSuiType(Bytes32.$typeName, ...[]) as string,\n      typeArgs: [] as [],\n      isPhantom: Bytes32.$isPhantom,\n      reifiedTypeArgs: [],\n      fromFields: (fields: Record<string, any>) => Bytes32.fromFields(fields),\n      fromFieldsWithTypes: (item: FieldsWithTypes) => Bytes32.fromFieldsWithTypes(item),\n      fromBcs: (data: Uint8Array) => Bytes32.fromBcs(data),\n      bcs: Bytes32.bcs,\n      fromJSONField: (field: any) => Bytes32.fromJSONField(field),\n      fromJSON: (json: Record<string, any>) => Bytes32.fromJSON(json),\n      fromSuiParsedData: (content: SuiParsedData) => Bytes32.fromSuiParsedData(content),\n      fromSuiObjectData: (content: SuiObjectData) => Bytes32.fromSuiObjectData(content),\n      fetch: async (client: SuiClient, id: string) => Bytes32.fetch(client, id),\n      new: (fields: Bytes32Fields) => {\n        return new Bytes32([], fields);\n      },\n      kind: \"StructClassReified\",\n    };\n  }\n\n  static get r() {\n    return Bytes32.reified();\n  }\n\n  static phantom(): PhantomReified<ToTypeStr<Bytes32>> {\n    return phantom(Bytes32.reified());\n  }\n  static get p() {\n    return Bytes32.phantom();\n  }\n\n  static get bcs() {\n    return bcs.struct(\"Bytes32\", {\n      data: bcs.vector(bcs.u8()),\n    });\n  }\n\n  static fromFields(fields: Record<string, any>): Bytes32 {\n    return Bytes32.reified().new({\n      data: decodeFromFields(reified.vector(\"u8\"), fields.data),\n    });\n  }\n\n  static fromFieldsWithTypes(item: FieldsWithTypes): Bytes32 {\n    if (!isBytes32(item.type)) {\n      throw new Error(\"not a Bytes32 type\");\n    }\n\n    return Bytes32.reified().new({\n      data: decodeFromFieldsWithTypes(reified.vector(\"u8\"), item.fields.data),\n    });\n  }\n\n  static fromBcs(data: Uint8Array): Bytes32 {\n    return Bytes32.fromFields(Bytes32.bcs.parse(data));\n  }\n\n  toJSONField() {\n    return {\n      data: fieldToJSON<Vector<\"u8\">>(`vector<u8>`, this.data),\n    };\n  }\n\n  toJSON() {\n    return {\n      $typeName: this.$typeName,\n      $typeArgs: this.$typeArgs,\n      ...this.toJSONField(),\n    };\n  }\n\n  static fromJSONField(field: any): Bytes32 {\n    return Bytes32.reified().new({\n      data: decodeFromJSONField(reified.vector(\"u8\"), field.data),\n    });\n  }\n\n  static fromJSON(json: Record<string, any>): Bytes32 {\n    if (json.$typeName !== Bytes32.$typeName) {\n      throw new Error(\"not a WithTwoGenerics json object\");\n    }\n\n    return Bytes32.fromJSONField(json);\n  }\n\n  static fromSuiParsedData(content: SuiParsedData): Bytes32 {\n    if (content.dataType !== \"moveObject\") {\n      throw new Error(\"not an object\");\n    }\n    if (!isBytes32(content.type)) {\n      throw new Error(`object at ${(content.fields as any).id} is not a Bytes32 object`);\n    }\n    return Bytes32.fromFieldsWithTypes(content);\n  }\n\n  static fromSuiObjectData(data: SuiObjectData): Bytes32 {\n    if (data.bcs) {\n      if (data.bcs.dataType !== \"moveObject\" || !isBytes32(data.bcs.type)) {\n        throw new Error(`object at is not a Bytes32 object`);\n      }\n\n      return Bytes32.fromBcs(fromB64(data.bcs.bcsBytes));\n    }\n    if (data.content) {\n      return Bytes32.fromSuiParsedData(data.content);\n    }\n    throw new Error(\n      \"Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.\"\n    );\n  }\n\n  static async fetch(client: SuiClient, id: string): Promise<Bytes32> {\n    const res = await client.getObject({ id, options: { showBcs: true } });\n    if (res.error) {\n      throw new Error(`error fetching Bytes32 object at id ${id}: ${res.error.code}`);\n    }\n    if (res.data?.bcs?.dataType !== \"moveObject\" || !isBytes32(res.data.bcs.type)) {\n      throw new Error(`object at id ${id} is not a Bytes32 object`);\n    }\n\n    return Bytes32.fromSuiObjectData(res.data);\n  }\n}\n"]}