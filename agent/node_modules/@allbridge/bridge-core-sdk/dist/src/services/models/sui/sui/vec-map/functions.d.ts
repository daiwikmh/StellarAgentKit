import { GenericArg } from "../../_framework/util";
import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface ContainsArgs {
    self: TransactionObjectInput;
    key: GenericArg;
}
export declare function contains(tx: Transaction, typeArgs: [string, string], args: ContainsArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function destroyEmpty(tx: Transaction, typeArgs: [string, string], self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function empty(tx: Transaction, typeArgs: [string, string]): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface InsertArgs {
    self: TransactionObjectInput;
    key: GenericArg;
    value: GenericArg;
}
export declare function insert(tx: Transaction, typeArgs: [string, string], args: InsertArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function isEmpty(tx: Transaction, typeArgs: [string, string], self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface RemoveArgs {
    self: TransactionObjectInput;
    key: GenericArg;
}
export declare function remove(tx: Transaction, typeArgs: [string, string], args: RemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function keys(tx: Transaction, typeArgs: [string, string], self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetIdxArgs {
    self: TransactionObjectInput;
    key: GenericArg;
}
export declare function getIdx(tx: Transaction, typeArgs: [string, string], args: GetIdxArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetIdxOptArgs {
    self: TransactionObjectInput;
    key: GenericArg;
}
export declare function getIdxOpt(tx: Transaction, typeArgs: [string, string], args: GetIdxOptArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function size(tx: Transaction, typeArgs: [string, string], self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetArgs {
    self: TransactionObjectInput;
    key: GenericArg;
}
export declare function get(tx: Transaction, typeArgs: [string, string], args: GetArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface FromKeysValuesArgs {
    keys: Array<GenericArg> | TransactionArgument;
    values: Array<GenericArg> | TransactionArgument;
}
export declare function fromKeysValues(tx: Transaction, typeArgs: [string, string], args: FromKeysValuesArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetEntryByIdxArgs {
    self: TransactionObjectInput;
    idx: bigint | TransactionArgument;
}
export declare function getEntryByIdx(tx: Transaction, typeArgs: [string, string], args: GetEntryByIdxArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetEntryByIdxMutArgs {
    self: TransactionObjectInput;
    idx: bigint | TransactionArgument;
}
export declare function getEntryByIdxMut(tx: Transaction, typeArgs: [string, string], args: GetEntryByIdxMutArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface GetMutArgs {
    self: TransactionObjectInput;
    key: GenericArg;
}
export declare function getMut(tx: Transaction, typeArgs: [string, string], args: GetMutArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function intoKeysValues(tx: Transaction, typeArgs: [string, string], self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function pop(tx: Transaction, typeArgs: [string, string], self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface RemoveEntryByIdxArgs {
    self: TransactionObjectInput;
    idx: bigint | TransactionArgument;
}
export declare function removeEntryByIdx(tx: Transaction, typeArgs: [string, string], args: RemoveEntryByIdxArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface TryGetArgs {
    self: TransactionObjectInput;
    key: GenericArg;
}
export declare function tryGet(tx: Transaction, typeArgs: [string, string], args: TryGetArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
