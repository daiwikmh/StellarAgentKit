"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.version = version;
exports.create = create;
exports.destroy = destroy;
exports.loadValue = loadValue;
exports.loadValueMut = loadValueMut;
exports.removeValueForUpgrade = removeValueForUpgrade;
exports.upgrade = upgrade;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function version(tx, self) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::versioned::version`,
        arguments: [(0, util_1.obj)(tx, self)],
    });
}
function create(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::versioned::create`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.pure)(tx, args.initVersion, `u64`), (0, util_1.generic)(tx, `${typeArg}`, args.initValue)],
    });
}
function destroy(tx, typeArg, self) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::versioned::destroy`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, self)],
    });
}
function loadValue(tx, typeArg, self) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::versioned::load_value`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, self)],
    });
}
function loadValueMut(tx, typeArg, self) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::versioned::load_value_mut`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, self)],
    });
}
function removeValueForUpgrade(tx, typeArg, self) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::versioned::remove_value_for_upgrade`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, self)],
    });
}
function upgrade(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::versioned::upgrade`,
        typeArguments: [typeArg],
        arguments: [
            (0, util_1.obj)(tx, args.self),
            (0, util_1.pure)(tx, args.newVersion, `u64`),
            (0, util_1.generic)(tx, `${typeArg}`, args.newValue),
            (0, util_1.obj)(tx, args.cap),
        ],
    });
}
//# sourceMappingURL=functions.js.map