"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.new_ = new_;
exports.crossRate = crossRate;
exports.gasPrice = gasPrice;
exports.getChainData = getChainData;
exports.getId = getId;
exports.getOwnChainData = getOwnChainData;
exports.getTransactionGasCostInNativeToken = getTransactionGasCostInNativeToken;
exports.getTransactionGasCostInStable = getTransactionGasCostInStable;
exports.getVersion = getVersion;
exports.init = init;
exports.migrate = migrate;
exports.price = price;
exports.setChainData = setChainData;
exports.setGasPrice = setGasPrice;
exports.setPrice = setPrice;
exports.stableToSuiAmount = stableToSuiAmount;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function new_(tx) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::new`,
        arguments: [],
    });
}
function crossRate(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::cross_rate`,
        arguments: [(0, util_1.obj)(tx, args.oracle), (0, util_1.pure)(tx, args.otherChainId, `u8`)],
    });
}
function gasPrice(tx, chainData) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::gas_price`,
        arguments: [(0, util_1.obj)(tx, chainData)],
    });
}
function getChainData(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::get_chain_data`,
        arguments: [(0, util_1.obj)(tx, args.oracle), (0, util_1.pure)(tx, args.chainId, `u8`)],
    });
}
function getId(tx, oracle) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::get_id`,
        arguments: [(0, util_1.obj)(tx, oracle)],
    });
}
function getOwnChainData(tx, oracle) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::get_own_chain_data`,
        arguments: [(0, util_1.obj)(tx, oracle)],
    });
}
function getTransactionGasCostInNativeToken(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::get_transaction_gas_cost_in_native_token`,
        arguments: [(0, util_1.obj)(tx, args.oracle), (0, util_1.pure)(tx, args.otherChainId, `u8`), (0, util_1.pure)(tx, args.gasAmount, `u64`)],
    });
}
function getTransactionGasCostInStable(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::get_transaction_gas_cost_in_stable`,
        arguments: [
            (0, util_1.obj)(tx, args.oracle),
            (0, util_1.pure)(tx, args.otherChainId, `u8`),
            (0, util_1.pure)(tx, args.gasAmount, `u64`),
            (0, util_1.pure)(tx, args.stableTokenDecimals, `u8`),
        ],
    });
}
function getVersion(tx) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::get_version`,
        arguments: [],
    });
}
function init(tx) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::init`,
        arguments: [],
    });
}
function migrate(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::migrate`,
        arguments: [(0, util_1.obj)(tx, args.adminCap), (0, util_1.obj)(tx, args.gasOracle)],
    });
}
function price(tx, chainData) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::price`,
        arguments: [(0, util_1.obj)(tx, chainData)],
    });
}
function setChainData(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::set_chain_data`,
        arguments: [
            (0, util_1.obj)(tx, args.oracle),
            (0, util_1.pure)(tx, args.chainId, `u8`),
            (0, util_1.pure)(tx, args.gasPrice, `u128`),
            (0, util_1.pure)(tx, args.price, `u128`),
        ],
    });
}
function setGasPrice(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::set_gas_price`,
        arguments: [(0, util_1.obj)(tx, args.oracle), (0, util_1.pure)(tx, args.chainId, `u8`), (0, util_1.pure)(tx, args.gasPrice, `u128`)],
    });
}
function setPrice(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::set_price`,
        arguments: [(0, util_1.obj)(tx, args.oracle), (0, util_1.pure)(tx, args.chainId, `u8`), (0, util_1.pure)(tx, args.price, `u128`)],
    });
}
function stableToSuiAmount(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::gas_oracle::stable_to_sui_amount`,
        arguments: [(0, util_1.obj)(tx, args.gasOracle), (0, util_1.pure)(tx, args.amount, `u64`), (0, util_1.pure)(tx, args.stableTokenDecimals, `u8`)],
    });
}
//# sourceMappingURL=functions.js.map