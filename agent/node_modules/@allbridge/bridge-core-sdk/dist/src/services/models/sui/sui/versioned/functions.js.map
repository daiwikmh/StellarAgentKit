{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/versioned/functions.ts"],"names":[],"mappings":";;AAKA,0BAKC;AAOD,wBAMC;AAED,0BAMC;AAED,8BAMC;AAED,oCAMC;AAED,sDAMC;AASD,0BAWC;AA3ED,cAAc;AACd,0BAAkC;AAClC,gDAAuE;AAGvE,SAAgB,OAAO,CAAC,EAAe,EAAE,IAA4B;IACnE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,sBAAsB;QAC7C,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAOD,SAAgB,MAAM,CAAC,EAAe,EAAE,OAAe,EAAE,IAAgB;IACvE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,qBAAqB;QAC5C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KAC1F,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,OAAO,CAAC,EAAe,EAAE,OAAe,EAAE,IAA4B;IACpF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,sBAAsB;QAC7C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,SAAS,CAAC,EAAe,EAAE,OAAe,EAAE,IAA4B;IACtF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,yBAAyB;QAChD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,YAAY,CAAC,EAAe,EAAE,OAAe,EAAE,IAA4B;IACzF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,6BAA6B;QACpD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,qBAAqB,CAAC,EAAe,EAAE,OAAe,EAAE,IAA4B;IAClG,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,uCAAuC;QAC9D,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AASD,SAAgB,OAAO,CAAC,EAAe,EAAE,OAAe,EAAE,IAAiB;IACzE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,sBAAsB;QAC7C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE;YACT,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;YAClB,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;YAChC,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC;YACxC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC;SAClB;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { GenericArg, generic, obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport function version(tx: Transaction, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::versioned::version`,\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface CreateArgs {\n  initVersion: bigint | TransactionArgument;\n  initValue: GenericArg;\n}\n\nexport function create(tx: Transaction, typeArg: string, args: CreateArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::versioned::create`,\n    typeArguments: [typeArg],\n    arguments: [pure(tx, args.initVersion, `u64`), generic(tx, `${typeArg}`, args.initValue)],\n  });\n}\n\nexport function destroy(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::versioned::destroy`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function loadValue(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::versioned::load_value`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function loadValueMut(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::versioned::load_value_mut`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport function removeValueForUpgrade(tx: Transaction, typeArg: string, self: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::versioned::remove_value_for_upgrade`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, self)],\n  });\n}\n\nexport interface UpgradeArgs {\n  self: TransactionObjectInput;\n  newVersion: bigint | TransactionArgument;\n  newValue: GenericArg;\n  cap: TransactionObjectInput;\n}\n\nexport function upgrade(tx: Transaction, typeArg: string, args: UpgradeArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::versioned::upgrade`,\n    typeArguments: [typeArg],\n    arguments: [\n      obj(tx, args.self),\n      pure(tx, args.newVersion, `u64`),\n      generic(tx, `${typeArg}`, args.newValue),\n      obj(tx, args.cap),\n    ],\n  });\n}\n"]}