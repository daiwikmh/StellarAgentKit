{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/table-vec/functions.ts"],"names":[],"mappings":";;AAUA,wBAMC;AAOD,8BAMC;AAED,oCAMC;AAED,sBAMC;AAED,0BAMC;AAED,wBAMC;AAED,0BAMC;AAOD,4BAMC;AAED,8BAMC;AAQD,oBAMC;AAOD,gCAMC;AAED,oBAMC;AA7HD,cAAc;AACd,0BAAkC;AAClC,gDAAuE;AAQvE,SAAgB,MAAM,CAAC,EAAe,EAAE,OAAe,EAAE,IAAgB;IACvE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,qBAAqB;QAC5C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KACtD,CAAC,CAAC;AACL,CAAC;AAOD,SAAgB,SAAS,CAAC,EAAe,EAAE,OAAe,EAAE,IAAmB;IAC7E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,yBAAyB;QAChD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KACtD,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,YAAY,CAAC,EAAe,EAAE,OAAe,EAAE,CAAyB;IACtF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,4BAA4B;QACnD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KACxB,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,KAAK,CAAC,EAAe,EAAE,OAAe;IACpD,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,oBAAoB;QAC3C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,EAAE;KACd,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,OAAO,CAAC,EAAe,EAAE,OAAe,EAAE,CAAyB;IACjF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,uBAAuB;QAC9C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KACxB,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,MAAM,CAAC,EAAe,EAAE,OAAe,EAAE,CAAyB;IAChF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,qBAAqB;QAC5C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KACxB,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,OAAO,CAAC,EAAe,EAAE,OAAe,EAAE,CAAyB;IACjF,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,uBAAuB;QAC9C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KACxB,CAAC,CAAC;AACL,CAAC;AAOD,SAAgB,QAAQ,CAAC,EAAe,EAAE,OAAe,EAAE,IAAkB;IAC3E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,wBAAwB;QAC/C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;KAChE,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,SAAS,CAAC,EAAe,EAAE,OAAe,EAAE,CAAa;IACvE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,wBAAwB;QAC/C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;KAC1C,CAAC,CAAC;AACL,CAAC;AAQD,SAAgB,IAAI,CAAC,EAAe,EAAE,OAAe,EAAE,IAAc;IACnE,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,mBAAmB;QAC1C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KAC/E,CAAC,CAAC;AACL,CAAC;AAOD,SAAgB,UAAU,CAAC,EAAe,EAAE,OAAe,EAAE,IAAoB;IAC/E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,0BAA0B;QACjD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAA,WAAI,EAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KACtD,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,IAAI,CAAC,EAAe,EAAE,OAAe,EAAE,CAAyB;IAC9E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,mBAAmB;QAC1C,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,UAAG,EAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KACxB,CAAC,CAAC;AACL,CAAC","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { GenericArg, generic, obj, pure } from \"../../_framework/util\";\nimport { Transaction, TransactionArgument, TransactionObjectInput } from \"@mysten/sui/transactions\";\n\nexport interface BorrowArgs {\n  t: TransactionObjectInput;\n  i: bigint | TransactionArgument;\n}\n\nexport function borrow(tx: Transaction, typeArg: string, args: BorrowArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::borrow`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.t), pure(tx, args.i, `u64`)],\n  });\n}\n\nexport interface BorrowMutArgs {\n  t: TransactionObjectInput;\n  i: bigint | TransactionArgument;\n}\n\nexport function borrowMut(tx: Transaction, typeArg: string, args: BorrowMutArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::borrow_mut`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.t), pure(tx, args.i, `u64`)],\n  });\n}\n\nexport function destroyEmpty(tx: Transaction, typeArg: string, t: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::destroy_empty`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, t)],\n  });\n}\n\nexport function empty(tx: Transaction, typeArg: string) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::empty`,\n    typeArguments: [typeArg],\n    arguments: [],\n  });\n}\n\nexport function isEmpty(tx: Transaction, typeArg: string, t: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::is_empty`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, t)],\n  });\n}\n\nexport function length(tx: Transaction, typeArg: string, t: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::length`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, t)],\n  });\n}\n\nexport function popBack(tx: Transaction, typeArg: string, t: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::pop_back`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, t)],\n  });\n}\n\nexport interface PushBackArgs {\n  t: TransactionObjectInput;\n  e: GenericArg;\n}\n\nexport function pushBack(tx: Transaction, typeArg: string, args: PushBackArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::push_back`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.t), generic(tx, `${typeArg}`, args.e)],\n  });\n}\n\nexport function singleton(tx: Transaction, typeArg: string, e: GenericArg) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::singleton`,\n    typeArguments: [typeArg],\n    arguments: [generic(tx, `${typeArg}`, e)],\n  });\n}\n\nexport interface SwapArgs {\n  t: TransactionObjectInput;\n  i: bigint | TransactionArgument;\n  j: bigint | TransactionArgument;\n}\n\nexport function swap(tx: Transaction, typeArg: string, args: SwapArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::swap`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.t), pure(tx, args.i, `u64`), pure(tx, args.j, `u64`)],\n  });\n}\n\nexport interface SwapRemoveArgs {\n  t: TransactionObjectInput;\n  i: bigint | TransactionArgument;\n}\n\nexport function swapRemove(tx: Transaction, typeArg: string, args: SwapRemoveArgs) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::swap_remove`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, args.t), pure(tx, args.i, `u64`)],\n  });\n}\n\nexport function drop(tx: Transaction, typeArg: string, t: TransactionObjectInput) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::table_vec::drop`,\n    typeArguments: [typeArg],\n    arguments: [obj(tx, t)],\n  });\n}\n"]}