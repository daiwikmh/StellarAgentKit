{"version":3,"file":"structs.js","sourceRoot":"","sources":["../../../../../../../../../src/services/models/sui/_dependencies/source/0xf47329f4344f3bf0f8e436e2f7b485466cff300f12a166563995d3888c296a94/consumed-vaas/structs.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport * as reified from \"../../../../_framework/reified\";\nimport {\n  PhantomReified,\n  Reified,\n  StructClass,\n  ToField,\n  ToTypeStr,\n  decodeFromFields,\n  decodeFromFieldsWithTypes,\n  decodeFromJSONField,\n  phantom,\n  ToTypeStr as ToPhantom,\n} from \"../../../../_framework/reified\";\nimport { FieldsWithTypes, composeSuiType, compressSuiType } from \"../../../../_framework/util\";\nimport { Bytes32 } from \"../bytes32/structs\";\nimport { PKG_V1 } from \"../index\";\nimport { Set } from \"../set/structs\";\nimport { bcs } from \"@mysten/sui/bcs\";\nimport { SuiClient, SuiObjectData, SuiParsedData } from \"@mysten/sui/client\";\nimport { fromB64 } from \"@mysten/sui/utils\";\n\n/* ============================== ConsumedVAAs =============================== */\n\nexport function isConsumedVAAs(type: string): boolean {\n  type = compressSuiType(type);\n  return type === `${PKG_V1}::consumed_vaas::ConsumedVAAs`;\n}\n\nexport interface ConsumedVAAsFields {\n  hashes: ToField<Set<ToPhantom<Bytes32>>>;\n}\n\nexport type ConsumedVAAsReified = Reified<ConsumedVAAs, ConsumedVAAsFields>;\n\nexport class ConsumedVAAs implements StructClass {\n  __StructClass = true as const;\n\n  static get $typeName() {\n    return `${PKG_V1}::consumed_vaas::ConsumedVAAs`;\n  }\n  static readonly $numTypeParams = 0;\n  static readonly $isPhantom = [] as const;\n\n  readonly $typeName = ConsumedVAAs.$typeName;\n  readonly $fullTypeName: string;\n  readonly $typeArgs: [];\n  readonly $isPhantom = ConsumedVAAs.$isPhantom;\n\n  readonly hashes: ToField<Set<ToPhantom<Bytes32>>>;\n\n  private constructor(typeArgs: [], fields: ConsumedVAAsFields) {\n    this.$fullTypeName = composeSuiType(ConsumedVAAs.$typeName, ...typeArgs) as string;\n    this.$typeArgs = typeArgs;\n\n    this.hashes = fields.hashes;\n  }\n\n  static reified(): ConsumedVAAsReified {\n    return {\n      typeName: ConsumedVAAs.$typeName,\n      fullTypeName: composeSuiType(ConsumedVAAs.$typeName, ...[]) as string,\n      typeArgs: [] as [],\n      isPhantom: ConsumedVAAs.$isPhantom,\n      reifiedTypeArgs: [],\n      fromFields: (fields: Record<string, any>) => ConsumedVAAs.fromFields(fields),\n      fromFieldsWithTypes: (item: FieldsWithTypes) => ConsumedVAAs.fromFieldsWithTypes(item),\n      fromBcs: (data: Uint8Array) => ConsumedVAAs.fromBcs(data),\n      bcs: ConsumedVAAs.bcs,\n      fromJSONField: (field: any) => ConsumedVAAs.fromJSONField(field),\n      fromJSON: (json: Record<string, any>) => ConsumedVAAs.fromJSON(json),\n      fromSuiParsedData: (content: SuiParsedData) => ConsumedVAAs.fromSuiParsedData(content),\n      fromSuiObjectData: (content: SuiObjectData) => ConsumedVAAs.fromSuiObjectData(content),\n      fetch: async (client: SuiClient, id: string) => ConsumedVAAs.fetch(client, id),\n      new: (fields: ConsumedVAAsFields) => {\n        return new ConsumedVAAs([], fields);\n      },\n      kind: \"StructClassReified\",\n    };\n  }\n\n  static get r() {\n    return ConsumedVAAs.reified();\n  }\n\n  static phantom(): PhantomReified<ToTypeStr<ConsumedVAAs>> {\n    return phantom(ConsumedVAAs.reified());\n  }\n  static get p() {\n    return ConsumedVAAs.phantom();\n  }\n\n  static get bcs() {\n    return bcs.struct(\"ConsumedVAAs\", {\n      hashes: Set.bcs,\n    });\n  }\n\n  static fromFields(fields: Record<string, any>): ConsumedVAAs {\n    return ConsumedVAAs.reified().new({\n      hashes: decodeFromFields(Set.reified(reified.phantom(Bytes32.reified())), fields.hashes),\n    });\n  }\n\n  static fromFieldsWithTypes(item: FieldsWithTypes): ConsumedVAAs {\n    if (!isConsumedVAAs(item.type)) {\n      throw new Error(\"not a ConsumedVAAs type\");\n    }\n\n    return ConsumedVAAs.reified().new({\n      hashes: decodeFromFieldsWithTypes(Set.reified(reified.phantom(Bytes32.reified())), item.fields.hashes),\n    });\n  }\n\n  static fromBcs(data: Uint8Array): ConsumedVAAs {\n    return ConsumedVAAs.fromFields(ConsumedVAAs.bcs.parse(data));\n  }\n\n  toJSONField() {\n    return {\n      hashes: this.hashes.toJSONField(),\n    };\n  }\n\n  toJSON() {\n    return {\n      $typeName: this.$typeName,\n      $typeArgs: this.$typeArgs,\n      ...this.toJSONField(),\n    };\n  }\n\n  static fromJSONField(field: any): ConsumedVAAs {\n    return ConsumedVAAs.reified().new({\n      hashes: decodeFromJSONField(Set.reified(reified.phantom(Bytes32.reified())), field.hashes),\n    });\n  }\n\n  static fromJSON(json: Record<string, any>): ConsumedVAAs {\n    if (json.$typeName !== ConsumedVAAs.$typeName) {\n      throw new Error(\"not a WithTwoGenerics json object\");\n    }\n\n    return ConsumedVAAs.fromJSONField(json);\n  }\n\n  static fromSuiParsedData(content: SuiParsedData): ConsumedVAAs {\n    if (content.dataType !== \"moveObject\") {\n      throw new Error(\"not an object\");\n    }\n    if (!isConsumedVAAs(content.type)) {\n      throw new Error(`object at ${(content.fields as any).id} is not a ConsumedVAAs object`);\n    }\n    return ConsumedVAAs.fromFieldsWithTypes(content);\n  }\n\n  static fromSuiObjectData(data: SuiObjectData): ConsumedVAAs {\n    if (data.bcs) {\n      if (data.bcs.dataType !== \"moveObject\" || !isConsumedVAAs(data.bcs.type)) {\n        throw new Error(`object at is not a ConsumedVAAs object`);\n      }\n\n      return ConsumedVAAs.fromBcs(fromB64(data.bcs.bcsBytes));\n    }\n    if (data.content) {\n      return ConsumedVAAs.fromSuiParsedData(data.content);\n    }\n    throw new Error(\n      \"Both `bcs` and `content` fields are missing from the data. Include `showBcs` or `showContent` in the request.\"\n    );\n  }\n\n  static async fetch(client: SuiClient, id: string): Promise<ConsumedVAAs> {\n    const res = await client.getObject({ id, options: { showBcs: true } });\n    if (res.error) {\n      throw new Error(`error fetching ConsumedVAAs object at id ${id}: ${res.error.code}`);\n    }\n    if (res.data?.bcs?.dataType !== \"moveObject\" || !isConsumedVAAs(res.data.bcs.type)) {\n      throw new Error(`object at id ${id} is not a ConsumedVAAs object`);\n    }\n\n    return ConsumedVAAs.fromSuiObjectData(res.data);\n  }\n}\n"]}