"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.new_ = new_;
exports.key = key;
exports.balance = balance;
exports.withdraw = withdraw;
exports.addFee = addFee;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function new_(tx, typeArg) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::fee_collector::new`,
        typeArguments: [typeArg],
        arguments: [],
    });
}
function key(tx, typeArg) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::fee_collector::key`,
        typeArguments: [typeArg],
        arguments: [],
    });
}
function balance(tx, typeArgs, feeCollector) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::fee_collector::balance`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, feeCollector)],
    });
}
function withdraw(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::fee_collector::withdraw`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.generic)(tx, `${typeArgs[1]}`, args.cap), (0, util_1.obj)(tx, args.feeCollector), (0, util_1.pure)(tx, args.amount, `u64`)],
    });
}
function addFee(tx, typeArgs, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::fee_collector::add_fee`,
        typeArguments: typeArgs,
        arguments: [(0, util_1.obj)(tx, args.feeCollector), (0, util_1.obj)(tx, args.coin)],
    });
}
//# sourceMappingURL=functions.js.map