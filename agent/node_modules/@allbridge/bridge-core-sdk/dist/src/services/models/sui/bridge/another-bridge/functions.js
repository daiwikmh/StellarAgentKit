"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.destroyEmpty = destroyEmpty;
exports.new_ = new_;
exports.setGasUsage = setGasUsage;
exports.gasUsage = gasUsage;
exports.addToken = addToken;
exports.bridgeAddress = bridgeAddress;
exports.hasToken = hasToken;
exports.removeToken = removeToken;
exports.setAddress = setAddress;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function destroyEmpty(tx, userDeposit) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::another_bridge::destroy_empty`,
        arguments: [(0, util_1.obj)(tx, userDeposit)],
    });
}
function new_(tx, address) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::another_bridge::new`,
        arguments: [(0, util_1.obj)(tx, address)],
    });
}
function setGasUsage(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::another_bridge::set_gas_usage`,
        arguments: [(0, util_1.obj)(tx, args.anotherBridge), (0, util_1.pure)(tx, args.gasUsage, `u64`)],
    });
}
function gasUsage(tx, anotherBridge) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::another_bridge::gas_usage`,
        arguments: [(0, util_1.obj)(tx, anotherBridge)],
    });
}
function addToken(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::another_bridge::add_token`,
        arguments: [(0, util_1.obj)(tx, args.anotherBridge), (0, util_1.obj)(tx, args.address)],
    });
}
function bridgeAddress(tx, anotherBridge) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::another_bridge::bridge_address`,
        arguments: [(0, util_1.obj)(tx, anotherBridge)],
    });
}
function hasToken(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::another_bridge::has_token`,
        arguments: [(0, util_1.obj)(tx, args.anotherBridge), (0, util_1.obj)(tx, args.address)],
    });
}
function removeToken(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::another_bridge::remove_token`,
        arguments: [(0, util_1.obj)(tx, args.anotherBridge), (0, util_1.obj)(tx, args.address)],
    });
}
function setAddress(tx, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::another_bridge::set_address`,
        arguments: [(0, util_1.obj)(tx, args.anotherBridge), (0, util_1.obj)(tx, args.address)],
    });
}
//# sourceMappingURL=functions.js.map