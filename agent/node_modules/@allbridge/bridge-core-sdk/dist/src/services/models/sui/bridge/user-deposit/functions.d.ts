import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export interface AddArgs {
    userDeposit: TransactionObjectInput;
    lpAmount: bigint | TransactionArgument;
    accRewardPerShareP: bigint | TransactionArgument;
}
export declare function add(tx: Transaction, typeArg: string, args: AddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function destroyEmpty(tx: Transaction, typeArg: string, userDeposit: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface RemoveArgs {
    userDeposit: TransactionObjectInput;
    lpAmount: bigint | TransactionArgument;
    accRewardPerShareP: bigint | TransactionArgument;
}
export declare function remove(tx: Transaction, typeArg: string, args: RemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function new_(tx: Transaction, typeArg: string): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function lpAmount(tx: Transaction, typeArg: string, userDeposit: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function rewardDebt(tx: Transaction, typeArg: string, userDeposit: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface UpdateRewardDebtArgs {
    userDeposit: TransactionObjectInput;
    accRewardPerShareP: bigint | TransactionArgument;
}
export declare function updateRewardDebt(tx: Transaction, typeArg: string, args: UpdateRewardDebtArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
