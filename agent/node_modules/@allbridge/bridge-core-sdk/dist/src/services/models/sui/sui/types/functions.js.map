{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../../../src/services/models/sui/sui/types/functions.ts"],"names":[],"mappings":";;AAKA,4CAMC;AAXD,cAAc;AACd,0BAAkC;AAClC,gDAA4D;AAG5D,SAAgB,gBAAgB,CAAC,EAAe,EAAE,OAAe,EAAE,CAAa;IAC9E,OAAO,EAAE,CAAC,QAAQ,CAAC;QACjB,MAAM,EAAE,GAAG,gBAAY,8BAA8B;QACrD,aAAa,EAAE,CAAC,OAAO,CAAC;QACxB,SAAS,EAAE,CAAC,IAAA,cAAO,EAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;KAC1C,CAAC,CAAC;AACL,CAAC","sourcesContent":["// @ts-nocheck\nimport { PUBLISHED_AT } from \"..\";\nimport { GenericArg, generic } from \"../../_framework/util\";\nimport { Transaction } from \"@mysten/sui/transactions\";\n\nexport function isOneTimeWitness(tx: Transaction, typeArg: string, t: GenericArg) {\n  return tx.moveCall({\n    target: `${PUBLISHED_AT}::types::is_one_time_witness`,\n    typeArguments: [typeArg],\n    arguments: [generic(tx, `${typeArg}`, t)],\n  });\n}\n"]}