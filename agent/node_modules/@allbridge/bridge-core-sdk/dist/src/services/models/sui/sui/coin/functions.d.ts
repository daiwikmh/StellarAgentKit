import { GenericArg } from "../../_framework/util";
import { Transaction, TransactionArgument, TransactionObjectInput } from "@mysten/sui/transactions";
export declare function value(tx: Transaction, typeArg: string, self: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface TakeArgs {
    balance: TransactionObjectInput;
    value: bigint | TransactionArgument;
}
export declare function take(tx: Transaction, typeArg: string, args: TakeArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function balance(tx: Transaction, typeArg: string, coin: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function destroyZero(tx: Transaction, typeArg: string, c: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface JoinArgs {
    self: TransactionObjectInput;
    c: TransactionObjectInput;
}
export declare function join(tx: Transaction, typeArg: string, args: JoinArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface SplitArgs {
    self: TransactionObjectInput;
    splitAmount: bigint | TransactionArgument;
}
export declare function split(tx: Transaction, typeArg: string, args: SplitArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function supply(tx: Transaction, typeArg: string, treasury: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function zero(tx: Transaction, typeArg: string): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function balanceMut(tx: Transaction, typeArg: string, coin: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface BurnArgs {
    cap: TransactionObjectInput;
    c: TransactionObjectInput;
}
export declare function burn(tx: Transaction, typeArg: string, args: BurnArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface CreateCurrencyArgs {
    witness: GenericArg;
    decimals: number | TransactionArgument;
    symbol: Array<number | TransactionArgument> | TransactionArgument;
    name: Array<number | TransactionArgument> | TransactionArgument;
    description: Array<number | TransactionArgument> | TransactionArgument;
    iconUrl: TransactionObjectInput | TransactionArgument | null;
}
export declare function createCurrency(tx: Transaction, typeArg: string, args: CreateCurrencyArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface CreateRegulatedCurrencyArgs {
    witness: GenericArg;
    decimals: number | TransactionArgument;
    symbol: Array<number | TransactionArgument> | TransactionArgument;
    name: Array<number | TransactionArgument> | TransactionArgument;
    description: Array<number | TransactionArgument> | TransactionArgument;
    iconUrl: TransactionObjectInput | TransactionArgument | null;
}
export declare function createRegulatedCurrency(tx: Transaction, typeArg: string, args: CreateRegulatedCurrencyArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface CreateRegulatedCurrencyV2Args {
    witness: GenericArg;
    decimals: number | TransactionArgument;
    symbol: Array<number | TransactionArgument> | TransactionArgument;
    name: Array<number | TransactionArgument> | TransactionArgument;
    description: Array<number | TransactionArgument> | TransactionArgument;
    iconUrl: TransactionObjectInput | TransactionArgument | null;
    allowGlobalPause: boolean | TransactionArgument;
}
export declare function createRegulatedCurrencyV2(tx: Transaction, typeArg: string, args: CreateRegulatedCurrencyV2Args): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DenyListAddArgs {
    denyList: TransactionObjectInput;
    denyCap: TransactionObjectInput;
    addr: string | TransactionArgument;
}
export declare function denyListAdd(tx: Transaction, typeArg: string, args: DenyListAddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DenyListContainsArgs {
    denyList: TransactionObjectInput;
    addr: string | TransactionArgument;
}
export declare function denyListContains(tx: Transaction, typeArg: string, args: DenyListContainsArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DenyListRemoveArgs {
    denyList: TransactionObjectInput;
    denyCap: TransactionObjectInput;
    addr: string | TransactionArgument;
}
export declare function denyListRemove(tx: Transaction, typeArg: string, args: DenyListRemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DenyListV2AddArgs {
    denyList: TransactionObjectInput;
    denyCap: TransactionObjectInput;
    addr: string | TransactionArgument;
}
export declare function denyListV2Add(tx: Transaction, typeArg: string, args: DenyListV2AddArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DenyListV2ContainsCurrentEpochArgs {
    denyList: TransactionObjectInput;
    addr: string | TransactionArgument;
}
export declare function denyListV2ContainsCurrentEpoch(tx: Transaction, typeArg: string, args: DenyListV2ContainsCurrentEpochArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DenyListV2ContainsNextEpochArgs {
    denyList: TransactionObjectInput;
    addr: string | TransactionArgument;
}
export declare function denyListV2ContainsNextEpoch(tx: Transaction, typeArg: string, args: DenyListV2ContainsNextEpochArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DenyListV2DisableGlobalPauseArgs {
    denyList: TransactionObjectInput;
    denyCap: TransactionObjectInput;
}
export declare function denyListV2DisableGlobalPause(tx: Transaction, typeArg: string, args: DenyListV2DisableGlobalPauseArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DenyListV2EnableGlobalPauseArgs {
    denyList: TransactionObjectInput;
    denyCap: TransactionObjectInput;
}
export declare function denyListV2EnableGlobalPause(tx: Transaction, typeArg: string, args: DenyListV2EnableGlobalPauseArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function denyListV2IsGlobalPauseEnabledCurrentEpoch(tx: Transaction, typeArg: string, denyList: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function denyListV2IsGlobalPauseEnabledNextEpoch(tx: Transaction, typeArg: string, denyList: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DenyListV2RemoveArgs {
    denyList: TransactionObjectInput;
    denyCap: TransactionObjectInput;
    addr: string | TransactionArgument;
}
export declare function denyListV2Remove(tx: Transaction, typeArg: string, args: DenyListV2RemoveArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface DivideIntoNArgs {
    self: TransactionObjectInput;
    n: bigint | TransactionArgument;
}
export declare function divideIntoN(tx: Transaction, typeArg: string, args: DivideIntoNArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function fromBalance(tx: Transaction, typeArg: string, balance: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function getDecimals(tx: Transaction, typeArg: string, metadata: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function getDescription(tx: Transaction, typeArg: string, metadata: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function getIconUrl(tx: Transaction, typeArg: string, metadata: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function getName(tx: Transaction, typeArg: string, metadata: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function getSymbol(tx: Transaction, typeArg: string, metadata: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function intoBalance(tx: Transaction, typeArg: string, coin: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface MigrateRegulatedCurrencyToV2Args {
    denyList: TransactionObjectInput;
    cap: TransactionObjectInput;
    allowGlobalPause: boolean | TransactionArgument;
}
export declare function migrateRegulatedCurrencyToV2(tx: Transaction, typeArg: string, args: MigrateRegulatedCurrencyToV2Args): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface MintArgs {
    cap: TransactionObjectInput;
    value: bigint | TransactionArgument;
}
export declare function mint(tx: Transaction, typeArg: string, args: MintArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface MintAndTransferArgs {
    c: TransactionObjectInput;
    amount: bigint | TransactionArgument;
    recipient: string | TransactionArgument;
}
export declare function mintAndTransfer(tx: Transaction, typeArg: string, args: MintAndTransferArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface MintBalanceArgs {
    cap: TransactionObjectInput;
    value: bigint | TransactionArgument;
}
export declare function mintBalance(tx: Transaction, typeArg: string, args: MintBalanceArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface PutArgs {
    balance: TransactionObjectInput;
    coin: TransactionObjectInput;
}
export declare function put(tx: Transaction, typeArg: string, args: PutArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function supplyImmut(tx: Transaction, typeArg: string, treasury: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function supplyMut(tx: Transaction, typeArg: string, treasury: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function totalSupply(tx: Transaction, typeArg: string, cap: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export declare function treasuryIntoSupply(tx: Transaction, typeArg: string, treasury: TransactionObjectInput): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface UpdateDescriptionArgs {
    treasury: TransactionObjectInput;
    metadata: TransactionObjectInput;
    description: string | TransactionArgument;
}
export declare function updateDescription(tx: Transaction, typeArg: string, args: UpdateDescriptionArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface UpdateIconUrlArgs {
    treasury: TransactionObjectInput;
    metadata: TransactionObjectInput;
    url: string | TransactionArgument;
}
export declare function updateIconUrl(tx: Transaction, typeArg: string, args: UpdateIconUrlArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface UpdateNameArgs {
    treasury: TransactionObjectInput;
    metadata: TransactionObjectInput;
    name: string | TransactionArgument;
}
export declare function updateName(tx: Transaction, typeArg: string, args: UpdateNameArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
export interface UpdateSymbolArgs {
    treasury: TransactionObjectInput;
    metadata: TransactionObjectInput;
    symbol: string | TransactionArgument;
}
export declare function updateSymbol(tx: Transaction, typeArg: string, args: UpdateSymbolArgs): import("@mysten/sui/dist/cjs/transactions").TransactionResult;
