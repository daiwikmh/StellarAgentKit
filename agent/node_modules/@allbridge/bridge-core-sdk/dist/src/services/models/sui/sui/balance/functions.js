"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.value = value;
exports.createStakingRewards = createStakingRewards;
exports.createSupply = createSupply;
exports.decreaseSupply = decreaseSupply;
exports.destroyStorageRebates = destroyStorageRebates;
exports.destroySupply = destroySupply;
exports.destroyZero = destroyZero;
exports.increaseSupply = increaseSupply;
exports.join = join;
exports.split = split;
exports.supplyValue = supplyValue;
exports.withdrawAll = withdrawAll;
exports.zero = zero;
// @ts-nocheck
const __1 = require("..");
const util_1 = require("../../_framework/util");
function value(tx, typeArg, self) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::value`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, self)],
    });
}
function createStakingRewards(tx, typeArg, value) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::create_staking_rewards`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.pure)(tx, value, `u64`)],
    });
}
function createSupply(tx, typeArg, t) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::create_supply`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.generic)(tx, `${typeArg}`, t)],
    });
}
function decreaseSupply(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::decrease_supply`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.self), (0, util_1.obj)(tx, args.balance)],
    });
}
function destroyStorageRebates(tx, typeArg, self) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::destroy_storage_rebates`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, self)],
    });
}
function destroySupply(tx, typeArg, self) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::destroy_supply`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, self)],
    });
}
function destroyZero(tx, typeArg, balance) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::destroy_zero`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, balance)],
    });
}
function increaseSupply(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::increase_supply`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.self), (0, util_1.pure)(tx, args.value, `u64`)],
    });
}
function join(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::join`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.self), (0, util_1.obj)(tx, args.balance)],
    });
}
function split(tx, typeArg, args) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::split`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, args.self), (0, util_1.pure)(tx, args.value, `u64`)],
    });
}
function supplyValue(tx, typeArg, supply) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::supply_value`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, supply)],
    });
}
function withdrawAll(tx, typeArg, self) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::withdraw_all`,
        typeArguments: [typeArg],
        arguments: [(0, util_1.obj)(tx, self)],
    });
}
function zero(tx, typeArg) {
    return tx.moveCall({
        target: `${__1.PUBLISHED_AT}::balance::zero`,
        typeArguments: [typeArg],
        arguments: [],
    });
}
//# sourceMappingURL=functions.js.map