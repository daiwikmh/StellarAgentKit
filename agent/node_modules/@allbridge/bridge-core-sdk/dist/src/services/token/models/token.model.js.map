{"version":3,"file":"token.model.js","sourceRoot":"","sources":["../../../../../src/services/token/models/token.model.ts"],"names":[],"mappings":"","sourcesContent":["import { Big } from \"big.js\";\nimport { FeePaymentMethod } from \"../../../models\";\nimport { TokenWithChainDetails } from \"../../../tokens-info\";\n\nexport interface ApproveParams {\n  /**\n   * The token info\n   */\n  token: TokenWithChainDetails;\n\n  /**\n   *  The address of the token owner who is granting permission to use tokens\n   *  to the spender\n   */\n  owner: string;\n\n  /**\n   *  The address of the contract that is being granted permission to use tokens\n   */\n  spender: string;\n\n  /**\n   * The integer amount of tokens to approve.\n   * Optional.\n   * The maximum amount by default.\n   */\n  amount?: string | number | Big;\n}\n\nexport interface GetTokenBalanceParams {\n  /**\n   *  The address for which we will find out the token balance\n   */\n  account: string;\n  token: TokenWithChainDetails;\n}\n\nexport interface CheckAllowanceParams extends GetAllowanceParams {\n  /**\n   * The float amount of tokens to check the allowance.\n   */\n  amount: string | number | Big;\n}\n\nexport interface GetAllowanceParams {\n  token: TokenWithChainDetails;\n  spender: string;\n  owner: string;\n  gasFeePaymentMethod?: FeePaymentMethod;\n}\n\nexport interface ApproveParamsDto {\n  tokenAddress: string;\n  chainSymbol: string;\n  owner: string;\n  spender: string;\n  /**\n   * Integer amount of tokens to approve.\n   */\n  amount?: string;\n}\n\nexport type GetAllowanceParamsDto = GetAllowanceParams;\n\n/**\n * @internal\n */\nexport interface CheckAllowanceParamsDto extends GetAllowanceParamsDto {\n  /**\n   * The integer amount of tokens to check the allowance.\n   */\n  amount: string | number | Big;\n}\n"]}