import { ChainType } from "../../../chains/chain.enums";
import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { GetNativeTokenBalanceParams } from "../../bridge/models";
import { RawTransaction, TransactionResponse } from "../../models";
import { ApproveParamsDto, CheckAllowanceParamsDto, GetAllowanceParamsDto, GetTokenBalanceParams } from "./token.model";
export declare abstract class ChainTokenService {
    abstract chainType: ChainType;
    abstract api: AllbridgeCoreClient;
    abstract getTokenBalance(params: GetTokenBalanceParams): Promise<string>;
    abstract getNativeTokenBalance(params: GetNativeTokenBalanceParams): Promise<string>;
    abstract getAllowance(params: GetAllowanceParamsDto): Promise<string>;
    checkAllowance(params: CheckAllowanceParamsDto): Promise<boolean>;
    abstract approve(params: ApproveParamsDto): Promise<TransactionResponse>;
    abstract buildRawTransactionApprove(params: ApproveParamsDto): Promise<RawTransaction>;
}
