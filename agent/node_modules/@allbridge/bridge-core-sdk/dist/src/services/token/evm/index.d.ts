import { ChainType } from "../../../chains/chain.enums";
import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { GetTokenBalanceParams, EssentialWeb3, TransactionResponse } from "../../../models";
import { GetNativeTokenBalanceParams } from "../../bridge/models";
import { RawTransaction } from "../../models";
import { ApproveParamsDto, GetAllowanceParamsDto, ChainTokenService } from "../models";
export declare const MAX_AMOUNT = "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff";
export declare class EvmTokenService extends ChainTokenService {
    web3: EssentialWeb3;
    api: AllbridgeCoreClient;
    chainType: ChainType.EVM;
    constructor(web3: EssentialWeb3, api: AllbridgeCoreClient);
    getAllowance(params: GetAllowanceParamsDto): Promise<string>;
    getAllowanceByTokenAddress(tokenAddress: string, owner: string, spender: string): Promise<string>;
    getTokenBalance(params: GetTokenBalanceParams): Promise<string>;
    getNativeTokenBalance(params: GetNativeTokenBalanceParams): Promise<string>;
    approve(params: ApproveParamsDto): Promise<TransactionResponse>;
    isUsdt(tokenAddress: string): boolean;
    buildRawTransactionApprove(params: ApproveParamsDto): Promise<RawTransaction>;
    private sendRawTransaction;
    private getERC20Contract;
}
