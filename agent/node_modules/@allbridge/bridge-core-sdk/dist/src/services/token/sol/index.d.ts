import { ChainType } from "../../../chains/chain.enums";
import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { GetNativeTokenBalanceParams } from "../../bridge/models";
import { RawTransaction, TransactionResponse } from "../../models";
import { ApproveParamsDto, GetAllowanceParamsDto, GetTokenBalanceParams } from "../models";
import { ChainTokenService } from "../models/token";
export declare class SolanaTokenService extends ChainTokenService {
    solanaRpcUrl: string;
    api: AllbridgeCoreClient;
    chainType: ChainType.SOLANA;
    constructor(solanaRpcUrl: string, api: AllbridgeCoreClient);
    approve(params: ApproveParamsDto): Promise<TransactionResponse>;
    buildRawTransactionApprove(params: ApproveParamsDto): Promise<RawTransaction>;
    private buildAnchorProvider;
    getAllowance(params: GetAllowanceParamsDto): Promise<string>;
    getTokenBalance(params: GetTokenBalanceParams): Promise<string>;
    getNativeTokenBalance(params: GetNativeTokenBalanceParams): Promise<string>;
}
