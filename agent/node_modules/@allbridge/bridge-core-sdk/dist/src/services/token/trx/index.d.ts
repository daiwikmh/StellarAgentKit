import { TronWeb } from "tronweb";
import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { ChainType, GetTokenBalanceParams, TransactionResponse } from "../../../models";
import { GetNativeTokenBalanceParams } from "../../bridge/models";
import { RawTransaction } from "../../models";
import { ApproveParamsDto, GetAllowanceParamsDto } from "../models";
import { ChainTokenService } from "../models/token";
export declare const MAX_AMOUNT = "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff";
export declare class TronTokenService extends ChainTokenService {
    tronWeb: TronWeb;
    api: AllbridgeCoreClient;
    chainType: ChainType.TRX;
    constructor(tronWeb: TronWeb, api: AllbridgeCoreClient);
    getAllowance(params: GetAllowanceParamsDto): Promise<string>;
    getTokenBalance(params: GetTokenBalanceParams): Promise<string>;
    getNativeTokenBalance(params: GetNativeTokenBalanceParams): Promise<string>;
    approve(params: ApproveParamsDto): Promise<TransactionResponse>;
    buildRawTransactionApprove(params: ApproveParamsDto): Promise<RawTransaction>;
    private getContract;
    private buildRawTransaction;
}
