{"version":3,"file":"token.js","sourceRoot":"","sources":["../../../../../src/services/token/models/token.ts"],"names":[],"mappings":";;;AAAA,mCAA6B;AAO7B,MAAsB,iBAAiB;IAUrC,KAAK,CAAC,cAAc,CAAC,MAA+B;QAClD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAClD,OAAO,IAAA,YAAG,EAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAA,YAAG,EAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IAChD,CAAC;CAKF;AAlBD,8CAkBC","sourcesContent":["import { Big } from \"big.js\";\nimport { ChainType } from \"../../../chains/chain.enums\";\nimport { AllbridgeCoreClient } from \"../../../client/core-api/core-client-base\";\nimport { GetNativeTokenBalanceParams } from \"../../bridge/models\";\nimport { RawTransaction, TransactionResponse } from \"../../models\";\nimport { ApproveParamsDto, CheckAllowanceParamsDto, GetAllowanceParamsDto, GetTokenBalanceParams } from \"./token.model\";\n\nexport abstract class ChainTokenService {\n  abstract chainType: ChainType;\n  abstract api: AllbridgeCoreClient;\n\n  abstract getTokenBalance(params: GetTokenBalanceParams): Promise<string>;\n\n  abstract getNativeTokenBalance(params: GetNativeTokenBalanceParams): Promise<string>;\n\n  abstract getAllowance(params: GetAllowanceParamsDto): Promise<string>;\n\n  async checkAllowance(params: CheckAllowanceParamsDto): Promise<boolean> {\n    const allowance = await this.getAllowance(params);\n    return Big(allowance).gte(Big(params.amount));\n  }\n\n  abstract approve(params: ApproveParamsDto): Promise<TransactionResponse>;\n\n  abstract buildRawTransactionApprove(params: ApproveParamsDto): Promise<RawTransaction>;\n}\n"]}