"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultRawBridgeTransactionBuilder = void 0;
const utils_1 = require("../../utils/utils");
const utils_2 = require("./utils");
const index_1 = require("./index");
class DefaultRawBridgeTransactionBuilder {
    api;
    nodeRpcUrlsConfig;
    params;
    tokenService;
    constructor(api, nodeRpcUrlsConfig, params, tokenService) {
        this.api = api;
        this.nodeRpcUrlsConfig = nodeRpcUrlsConfig;
        this.params = params;
        this.tokenService = tokenService;
    }
    async approve(a, b) {
        let provider;
        let approveData;
        if (b) {
            provider = a;
            approveData = b;
        }
        else {
            approveData = a;
        }
        const spender = (0, index_1.getSpender)(approveData.token, approveData.messenger);
        return this.tokenService.buildRawTransactionApprove({
            ...approveData,
            spender,
        }, provider);
    }
    async send(params, provider) {
        (0, utils_1.validateAmountGtZero)(params.amount);
        (0, utils_1.validateAmountDecimals)("amount", params.amount, params.sourceToken.decimals);
        if ((0, utils_2.isSendParams)(params)) {
            return (0, index_1.getChainBridgeService)(params.sourceToken.chainSymbol, this.api, this.nodeRpcUrlsConfig, this.params, provider).buildRawTransactionSend(params);
        }
        return (0, index_1.getChainBridgeService)(params.sourceToken.chainSymbol, this.api, this.nodeRpcUrlsConfig, this.params, provider).buildRawTransactionSwap(params);
    }
}
exports.DefaultRawBridgeTransactionBuilder = DefaultRawBridgeTransactionBuilder;
//# sourceMappingURL=raw-bridge-transaction-builder.js.map