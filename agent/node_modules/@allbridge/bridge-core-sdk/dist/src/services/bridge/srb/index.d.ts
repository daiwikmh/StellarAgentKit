import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { AllbridgeCoreSdkOptions, ChainType } from "../../../index";
import { NodeRpcUrlsConfig } from "../../index";
import { RawTransaction, TransactionResponse } from "../../models";
import { ChainBridgeService, SendParams, SwapParams, TxSendParamsSrb, TxSwapParamsSol } from "../models";
export declare class SrbBridgeService extends ChainBridgeService {
    readonly nodeRpcUrlsConfig: NodeRpcUrlsConfig;
    readonly params: AllbridgeCoreSdkOptions;
    readonly api: AllbridgeCoreClient;
    chainType: ChainType.SRB;
    constructor(nodeRpcUrlsConfig: NodeRpcUrlsConfig, params: AllbridgeCoreSdkOptions, api: AllbridgeCoreClient);
    buildRawTransactionSend(params: SendParams): Promise<RawTransaction>;
    buildRawTransactionSendFromParams(params: TxSendParamsSrb): Promise<RawTransaction>;
    buildRawTransactionSwap(params: SwapParams): Promise<RawTransaction>;
    buildRawTransactionSwapFromParams(params: TxSwapParamsSol): Promise<RawTransaction>;
    send(params: SendParams): Promise<TransactionResponse>;
    private getContract;
}
