import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { ChainSymbol, ChainType, RawSuiTransaction, SwapParams, TransactionResponse } from "../../../models";
import { SuiAddresses } from "../../../tokens-info";
import { NodeRpcUrlsConfig } from "../../index";
import { ChainBridgeService, SendParams, TxSwapParamsSui } from "../models";
export declare class SuiBridgeService extends ChainBridgeService {
    private nodeRpcUrlsConfig;
    api: AllbridgeCoreClient;
    chainType: ChainType.SUI;
    chainSymbol: ChainSymbol.SUI;
    private readonly client;
    constructor(nodeRpcUrlsConfig: NodeRpcUrlsConfig, api: AllbridgeCoreClient);
    send(): Promise<TransactionResponse>;
    buildRawTransactionSwap(params: SwapParams): Promise<RawSuiTransaction>;
    buildRawTransactionSwapFromParams(params: TxSwapParamsSui, suiAddresses: SuiAddresses): Promise<RawSuiTransaction>;
    buildRawTransactionSend(params: SendParams): Promise<RawSuiTransaction>;
    private buildRawTransactionAllbridgeSend;
    private buildRawTransactionWormholeSend;
    private buildRawTransactionCctpSend;
}
