import { TronWeb } from "tronweb";
import { ChainType } from "../../../chains/chain.enums";
import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { SwapParams, TransactionResponse } from "../../../models";
import { RawTransaction } from "../../models";
import { SendParams, TxSendParamsTrx, TxSwapParamsTrx } from "../models";
import { ChainBridgeService } from "../models/bridge";
export declare class TronBridgeService extends ChainBridgeService {
    tronWeb: TronWeb;
    api: AllbridgeCoreClient;
    chainType: ChainType.TRX;
    constructor(tronWeb: TronWeb, api: AllbridgeCoreClient);
    send(params: SendParams): Promise<TransactionResponse>;
    buildRawTransactionSwap(params: SwapParams): Promise<RawTransaction>;
    buildRawTransactionSwapFromParams(params: TxSwapParamsTrx): Promise<RawTransaction>;
    buildRawTransactionSend(params: SendParams): Promise<RawTransaction>;
    buildRawTransactionSendFromParams(params: TxSendParamsTrx): Promise<RawTransaction>;
    private buildRawTransaction;
}
