import { AllbridgeCoreClient } from "../../../client/core-api/core-client-base";
import { ChainType, EssentialWeb3, SwapParams, TransactionResponse } from "../../../models";
import { NodeRpcUrlsConfig } from "../../index";
import { RawTransaction } from "../../models";
import { SendParams, ChainBridgeService, TxSwapParamsEvm } from "../models";
export declare class EvmBridgeService extends ChainBridgeService {
    web3: EssentialWeb3;
    api: AllbridgeCoreClient;
    private nodeRpcUrlsConfig;
    chainType: ChainType.EVM;
    constructor(web3: EssentialWeb3, api: AllbridgeCoreClient, nodeRpcUrlsConfig: NodeRpcUrlsConfig);
    send(params: SendParams): Promise<TransactionResponse>;
    buildRawTransactionSwap(params: SwapParams): Promise<RawTransaction>;
    buildRawTransactionSwapFromParams(params: TxSwapParamsEvm): Promise<RawTransaction>;
    buildRawTransactionSend(params: SendParams): Promise<RawTransaction>;
    private buildRawTransactionCctpSend;
    private sendRawTransaction;
    private getBridgeContract;
    private getCctpBridgeContract;
}
