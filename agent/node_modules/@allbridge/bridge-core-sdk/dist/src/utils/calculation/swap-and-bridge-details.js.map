{"version":3,"file":"swap-and-bridge-details.js","sourceRoot":"","sources":["../../../../src/utils/calculation/swap-and-bridge-details.ts"],"names":[],"mappings":";;AAcA,oDAyCC;AAvDD,mCAA6B;AAE7B,mCAAiG;AAYjG,SAAgB,oBAAoB,CAClC,sBAA8B,EAC9B,WAAkC,EAClC,UAAoB,EACpB,SAAgC,EAChC,QAAkB;IAElB,MAAM,IAAI,GAAG,IAAA,kBAAU,EAAC,sBAAsB,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;IACzE,MAAM,oBAAoB,GAAG,IAAA,2BAAmB,EAAC,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7E,MAAM,MAAM,GAAG,IAAA,oBAAY,EAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IAEvD,MAAM,YAAY,GAAG,IAAA,YAAG,EAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7E,MAAM,cAAc,GAAG,IAAA,YAAG,EAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAA,YAAG,EAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACvF,OAAO;QACL,YAAY,EAAE;YACZ,GAAG,EAAE,IAAA,+BAAuB,EAAC,YAAY,EAAE,WAAW,CAAC,QAAQ,CAAC;iBAC7D,GAAG,EAAE;iBACL,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAG,CAAC,OAAO,CAAC;iBACxC,OAAO,EAAE;YACZ,IAAI,EAAE,IAAA,+BAAuB,EAC3B,IAAA,YAAG,EAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,EAC3E,WAAW,CAAC,QAAQ,CACrB;iBACE,GAAG,EAAE;iBACL,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAG,CAAC,OAAO,CAAC;iBACxC,OAAO,EAAE;SACb;QACD,UAAU,EAAE;YACV,GAAG,EAAE,IAAA,+BAAuB,EAAC,cAAc,EAAE,SAAS,CAAC,QAAQ,CAAC;iBAC7D,GAAG,EAAE;iBACL,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,YAAG,CAAC,OAAO,CAAC;iBACtC,OAAO,EAAE;YACZ,IAAI,EAAE,IAAA,+BAAuB,EAC3B,IAAA,2BAAmB,EAAC,IAAI,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,EACjF,SAAS,CAAC,QAAQ,CACnB;iBACE,GAAG,EAAE;iBACL,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,YAAG,CAAC,OAAO,CAAC;iBACtC,OAAO,EAAE;SACb;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { Big } from \"big.js\";\nimport { PoolInfo, TokenWithChainDetails } from \"../../tokens-info\";\nimport { convertIntAmountToFloat, fromSystemPrecision, swapFromVUsd, swapToVUsd } from \"./index\";\n\nexport interface SendAmountDetails {\n  sourceLPSwap: AmountImpact;\n  destLPSwap: AmountImpact;\n}\n\nexport interface AmountImpact {\n  fee: string;\n  swap: string;\n}\n\nexport function getSendAmountDetails(\n  amountInTokenPrecision: string,\n  sourceToken: TokenWithChainDetails,\n  sourcePool: PoolInfo,\n  destToken: TokenWithChainDetails,\n  destPool: PoolInfo\n): SendAmountDetails {\n  const vUsd = swapToVUsd(amountInTokenPrecision, sourceToken, sourcePool);\n  const vUsdInTokenPrecision = fromSystemPrecision(vUsd, sourceToken.decimals);\n  const result = swapFromVUsd(vUsd, destToken, destPool);\n\n  const swapToFeeInt = Big(amountInTokenPrecision).times(sourceToken.feeShare);\n  const swapFromFeeInt = Big(result).div(Big(1).minus(destToken.feeShare)).minus(result);\n  return {\n    sourceLPSwap: {\n      fee: convertIntAmountToFloat(swapToFeeInt, sourceToken.decimals)\n        .neg()\n        .round(sourceToken.decimals, Big.roundUp)\n        .toFixed(),\n      swap: convertIntAmountToFloat(\n        Big(amountInTokenPrecision).minus(vUsdInTokenPrecision).minus(swapToFeeInt),\n        sourceToken.decimals\n      )\n        .neg()\n        .round(sourceToken.decimals, Big.roundUp)\n        .toFixed(),\n    },\n    destLPSwap: {\n      fee: convertIntAmountToFloat(swapFromFeeInt, destToken.decimals)\n        .neg()\n        .round(destToken.decimals, Big.roundUp)\n        .toFixed(),\n      swap: convertIntAmountToFloat(\n        fromSystemPrecision(vUsd, destToken.decimals).minus(result).minus(swapFromFeeInt),\n        destToken.decimals\n      )\n        .neg()\n        .round(destToken.decimals, Big.roundUp)\n        .toFixed(),\n    },\n  };\n}\n"]}