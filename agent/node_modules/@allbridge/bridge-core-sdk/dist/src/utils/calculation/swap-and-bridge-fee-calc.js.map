{"version":3,"file":"swap-and-bridge-fee-calc.js","sourceRoot":"","sources":["../../../../src/utils/calculation/swap-and-bridge-fee-calc.ts"],"names":[],"mappings":"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","sourcesContent":["import { Big, BigSource } from \"big.js\";\nimport { PoolInfo, Token } from \"../../tokens-info\";\nimport { fromSystemPrecision, getY, toSystemPrecision } from \"./index\";\n\nexport interface SwapPoolInfo {\n  decimals: number;\n  feeShare: string;\n  poolInfo: PoolInfo;\n}\n\nexport interface SwapAndBridgeCalculationData {\n  swapToVUsdCalcResult: SwapToVUsdCalcResult;\n  swapFromVUsdCalcResult: SwapFromVUsdCalcResult;\n}\n\nexport interface SwapToVUsdCalcResult {\n  bridgeFeeInTokenPrecision: string;\n  amountIncludingCommissionInSystemPrecision: string;\n  amountExcludingCommissionInSystemPrecision: string;\n}\nexport interface SwapFromVUsdCalcResult {\n  bridgeFeeInTokenPrecision: string;\n  amountIncludingCommissionInTokenPrecision: string;\n  amountExcludingCommissionInTokenPrecision: string;\n}\n\nexport function swapAndBridgeFeeCalculation(\n  amountInTokenPrecision: string,\n  sourcePoolInfo: SwapPoolInfo,\n  destinationPoolInfo: SwapPoolInfo\n): SwapAndBridgeCalculationData {\n  const swapToVUsdCalcResult = swapToVUsd(\n    amountInTokenPrecision,\n    { decimals: sourcePoolInfo.decimals, feeShare: sourcePoolInfo.feeShare },\n    sourcePoolInfo.poolInfo\n  );\n  const swapFromVUsdCalcResult = swapFromVUsd(\n    swapToVUsdCalcResult.amountIncludingCommissionInSystemPrecision,\n    { decimals: destinationPoolInfo.decimals, feeShare: destinationPoolInfo.feeShare },\n    destinationPoolInfo.poolInfo\n  );\n  return { swapToVUsdCalcResult, swapFromVUsdCalcResult };\n}\n\nexport function swapAndBridgeFeeCalculationReverse(\n  amountInTokenPrecision: string,\n  sourcePoolInfo: SwapPoolInfo,\n  destinationPoolInfo: SwapPoolInfo\n): SwapAndBridgeCalculationData {\n  const swapToVUsdCalcResult = swapToVUsdReverse(\n    amountInTokenPrecision,\n    { decimals: destinationPoolInfo.decimals, feeShare: destinationPoolInfo.feeShare },\n    destinationPoolInfo.poolInfo\n  );\n  const swapFromVUsdCalcResult = swapFromVUsdReverse(\n    swapToVUsdCalcResult.amountIncludingCommissionInSystemPrecision,\n    { decimals: sourcePoolInfo.decimals, feeShare: sourcePoolInfo.feeShare },\n    sourcePoolInfo.poolInfo\n  );\n  return {\n    swapToVUsdCalcResult,\n    swapFromVUsdCalcResult,\n  };\n}\n\nfunction swapToVUsd(\n  amount: BigSource,\n  { feeShare, decimals }: Pick<Token, \"feeShare\" | \"decimals\">,\n  poolInfo: Omit<PoolInfo, \"p\" | \"imbalance\">\n): SwapToVUsdCalcResult {\n  const amountValue = Big(amount);\n  const fee = amountValue.times(feeShare);\n  const amountWithoutFee = amountValue.minus(fee);\n  return {\n    bridgeFeeInTokenPrecision: fee.round().toFixed(),\n    amountIncludingCommissionInSystemPrecision: calcSwapToVUsd(toSystemPrecision(amountWithoutFee, decimals), poolInfo),\n    amountExcludingCommissionInSystemPrecision: calcSwapToVUsd(toSystemPrecision(amountValue, decimals), poolInfo),\n  };\n}\n\nfunction calcSwapToVUsd(amountInSystemPrecision: Big, poolInfo: Omit<PoolInfo, \"p\" | \"imbalance\">): string {\n  if (amountInSystemPrecision.eq(0)) {\n    return \"0\";\n  }\n  const tokenBalance = Big(poolInfo.tokenBalance).plus(amountInSystemPrecision);\n  const vUsdNewAmount = getY(tokenBalance.toFixed(), poolInfo.aValue, poolInfo.dValue);\n  return Big(poolInfo.vUsdBalance).minus(vUsdNewAmount).round().toFixed();\n}\n\nfunction swapFromVUsd(\n  amount: BigSource,\n  { feeShare, decimals }: Pick<Token, \"feeShare\" | \"decimals\">,\n  poolInfo: Omit<PoolInfo, \"imbalance\">\n): SwapFromVUsdCalcResult {\n  if (Big(amount).eq(0)) {\n    return {\n      bridgeFeeInTokenPrecision: \"0\",\n      amountIncludingCommissionInTokenPrecision: \"0\",\n      amountExcludingCommissionInTokenPrecision: \"0\",\n    };\n  }\n  const amountValue = Big(amount);\n  const vUsdBalance = amountValue.plus(poolInfo.vUsdBalance);\n  const newAmount = getY(vUsdBalance, poolInfo.aValue, poolInfo.dValue);\n  const result = fromSystemPrecision(Big(poolInfo.tokenBalance).minus(newAmount), decimals);\n  const fee = Big(result).times(feeShare);\n  const resultWithoutFee = Big(result).minus(fee).round();\n  return {\n    bridgeFeeInTokenPrecision: fee.round().toFixed(),\n    amountIncludingCommissionInTokenPrecision: resultWithoutFee.toFixed(),\n    amountExcludingCommissionInTokenPrecision: result.toFixed(),\n  };\n}\n\nfunction swapToVUsdReverse(\n  amountInTokenPrecision: BigSource,\n  { feeShare, decimals }: Pick<Token, \"feeShare\" | \"decimals\">,\n  poolInfo: PoolInfo\n): SwapToVUsdCalcResult {\n  const reversedFeeShare = Big(feeShare).div(Big(1).minus(feeShare));\n  const fee = Big(amountInTokenPrecision).times(reversedFeeShare);\n  const amountWithFee = Big(amountInTokenPrecision).plus(fee);\n  return {\n    bridgeFeeInTokenPrecision: fee.round().toFixed(),\n    amountIncludingCommissionInSystemPrecision: calcSwapToVUsdReverse(\n      toSystemPrecision(amountWithFee, decimals),\n      poolInfo\n    ),\n    amountExcludingCommissionInSystemPrecision: calcSwapToVUsdReverse(\n      toSystemPrecision(amountInTokenPrecision, decimals),\n      poolInfo\n    ),\n  };\n}\n\nfunction calcSwapToVUsdReverse(amountInSystemPrecision: Big, poolInfo: PoolInfo): string {\n  const tokenBalance = Big(poolInfo.tokenBalance).minus(amountInSystemPrecision);\n  const vUsdNewAmount = getY(tokenBalance.toFixed(), poolInfo.aValue, poolInfo.dValue);\n  return Big(vUsdNewAmount).minus(poolInfo.vUsdBalance).round().toFixed();\n}\n\nfunction swapFromVUsdReverse(\n  amountInSystemPrecision: BigSource,\n  { feeShare, decimals }: Pick<Token, \"feeShare\" | \"decimals\">,\n  poolInfo: PoolInfo\n): SwapFromVUsdCalcResult {\n  if (Big(amountInSystemPrecision).eq(0)) {\n    return {\n      bridgeFeeInTokenPrecision: \"0\",\n      amountIncludingCommissionInTokenPrecision: \"0\",\n      amountExcludingCommissionInTokenPrecision: \"0\",\n    };\n  }\n  const vUsdNewAmount = Big(poolInfo.vUsdBalance).minus(amountInSystemPrecision);\n  const tokenBalance = getY(vUsdNewAmount.toFixed(), poolInfo.aValue, poolInfo.dValue);\n  const inSystemPrecision = Big(tokenBalance).minus(poolInfo.tokenBalance);\n  const amountWithoutFee = fromSystemPrecision(inSystemPrecision.toFixed(), decimals);\n  const reversedFeeShare = Big(feeShare).div(Big(1).minus(feeShare));\n  const fee = Big(amountWithoutFee).times(reversedFeeShare);\n  const amount = Big(amountWithoutFee).plus(fee);\n  return {\n    bridgeFeeInTokenPrecision: fee.round().toFixed(),\n    amountIncludingCommissionInTokenPrecision: amount.round().toFixed(),\n    amountExcludingCommissionInTokenPrecision: amountWithoutFee.toFixed(),\n  };\n}\n"]}