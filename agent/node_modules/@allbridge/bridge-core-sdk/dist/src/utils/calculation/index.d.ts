import { Big, BigSource } from "big.js";
import { PoolInfo, Token } from "../../tokens-info";
export declare function getFeePercent(input: BigSource, output: BigSource): number;
export declare function toSystemPrecision(amount: BigSource, decimals: number): Big;
export declare function fromSystemPrecision(amount: BigSource, decimals: number): Big;
export declare function convertAmountPrecision(amount: BigSource, decimalsFrom: number, decimalsTo: number): Big;
export declare function toPowBase10(decimals: number): Big;
export declare function convertFloatAmountToInt(amountFloat: BigSource, decimals: number): Big;
export declare function convertIntAmountToFloat(amountInt: BigSource, decimals: number): Big;
export declare function calculatePoolInfoImbalance(poolInfo: Pick<PoolInfo, "tokenBalance" | "vUsdBalance">): string;
export declare function swapToVUsd(amount: BigSource, { feeShare, decimals }: Pick<Token, "feeShare" | "decimals">, poolInfo: Omit<PoolInfo, "p" | "imbalance">): string;
export declare function swapFromVUsd(amount: BigSource, { feeShare, decimals }: Pick<Token, "feeShare" | "decimals">, poolInfo: Pick<PoolInfo, "vUsdBalance" | "aValue" | "dValue" | "tokenBalance">): string;
export declare function getSwapFromVUsdPoolInfo(vUsdAmount: BigSource, poolInfo: Omit<PoolInfo, "imbalance">): Pick<PoolInfo, "vUsdBalance" | "aValue" | "dValue" | "tokenBalance">;
/**
 * @param amount - vUsd amount should be received
 * @param feeShare
 * @param decimals
 * @param poolInfo
 */
export declare function swapToVUsdReverse(amount: BigSource, { feeShare, decimals }: Pick<Token, "feeShare" | "decimals">, poolInfo: Omit<PoolInfo, "imbalance">): Big;
/**
 * @param amount - amount should be received
 * @param feeShare
 * @param decimals
 * @param poolInfo
 */
export declare function swapFromVUsdReverse(amount: BigSource, { feeShare, decimals }: Pick<Token, "feeShare" | "decimals">, poolInfo: Omit<PoolInfo, "imbalance">): Big;
export declare function getY(x: BigSource, a: BigSource, d: BigSource): Big;
export declare function getEarned(userLpAmount: string, userRewardDebt: string, accRewardPerShareP: string, p: number): string;
export declare function aprInPercents(apr: string): string;
export declare function getD(aValue: string, x: string, y: string): string;
