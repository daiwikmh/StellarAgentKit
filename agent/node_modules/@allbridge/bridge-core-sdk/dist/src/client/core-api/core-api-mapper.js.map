{"version":3,"file":"core-api-mapper.js","sourceRoot":"","sources":["../../../../src/client/core-api/core-api-mapper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Chains } from \"../../chains\";\nimport { ChainSymbol } from \"../../chains/chain.enums\";\nimport {\n  ChainDetails,\n  ChainDetailsMap,\n  ChainDetailsMapWithFlags,\n  ChainDetailsWithTokensWithFlags,\n  MessengerTransferTime,\n  PoolInfoMap,\n  PoolKeyObject,\n  TokenWithChainDetailsWithFlags,\n  TransferTime,\n} from \"../../tokens-info\";\nimport { calculatePoolInfoImbalance } from \"../../utils/calculation\";\nimport {\n  ChainDetailsDTO,\n  ChainDetailsResponse,\n  Messenger,\n  MessengerKeyDTO,\n  MessengerTransferTimeDTO,\n  PoolInfoResponse,\n  TokenDTO,\n  TransferTimeDTO,\n} from \"./core-api.model\";\n\nexport function mapChainDetailsResponseToChainDetailsMap(response: ChainDetailsResponse): ChainDetailsMapWithFlags {\n  return Object.entries(response).reduce<ChainDetailsMapWithFlags>((map, entry) => {\n    const chainSymbol = entry[0];\n    const chainDetailsDTO = entry[1];\n    const chainDetails = mapChainDetailsFromDto(chainSymbol, chainDetailsDTO);\n    if (chainDetails) {\n      map[chainSymbol] = chainDetails;\n    }\n    return map;\n  }, {});\n}\n\nexport function mapChainDetailsResponseToPoolInfoMap(response: ChainDetailsResponse): PoolInfoMap {\n  const poolInfoMap: PoolInfoMap = {};\n  for (const [chainSymbolValue, chainDetailsDTO] of Object.entries(response)) {\n    const chainSymbol = chainSymbolValue;\n    for (const token of chainDetailsDTO.tokens) {\n      const poolKey = mapPoolKeyObjectToPoolKey({\n        chainSymbol,\n        poolAddress: token.poolAddress,\n      });\n      const imbalance = calculatePoolInfoImbalance(token.poolInfo);\n      poolInfoMap[poolKey] = { ...token.poolInfo, imbalance };\n    }\n  }\n  return poolInfoMap;\n}\n\nfunction mapTokenWithChainDetailsFromDto(chainDetails: ChainDetails, dto: TokenDTO): TokenWithChainDetailsWithFlags {\n  const { name: chainName, ...chainDetailsWithoutName } = chainDetails;\n  const { poolInfo: _poolInfo, ...dtoWithoutPoolInfo } = dto;\n  return {\n    ...dtoWithoutPoolInfo,\n    ...chainDetailsWithoutName,\n    chainName,\n  };\n}\n\nfunction mapMessengerKeyDtoToMessenger(dto: MessengerKeyDTO): Messenger | null {\n  switch (dto) {\n    case MessengerKeyDTO.ALLBRIDGE:\n      return Messenger.ALLBRIDGE;\n    case MessengerKeyDTO.WORMHOLE:\n      return Messenger.WORMHOLE;\n    case MessengerKeyDTO.CCTP:\n      return Messenger.CCTP;\n    case MessengerKeyDTO.CCTP_V2:\n      return Messenger.CCTP_V2;\n  }\n}\n\nfunction mapTransferTimeFromDto(dto: TransferTimeDTO): TransferTime {\n  return Object.entries(dto).reduce<TransferTime>((result, [key, value]) => {\n    result[key as ChainSymbol] = mapMessengerTransferTimeFromDto(value);\n    return result;\n  }, {});\n}\n\nfunction mapMessengerTransferTimeFromDto(dto: MessengerTransferTimeDTO): MessengerTransferTime {\n  return Object.entries(dto).reduce<MessengerTransferTime>((messengerTransferTime, [key, value]) => {\n    const messenger = mapMessengerKeyDtoToMessenger(key as MessengerKeyDTO);\n    if (messenger) {\n      messengerTransferTime[messenger] = value;\n    }\n    return messengerTransferTime;\n  }, {});\n}\n\nfunction mapChainDetailsFromDto(chainSymbol: string, dto: ChainDetailsDTO): ChainDetailsWithTokensWithFlags | null {\n  const basicChainProperties = Chains.getChainsProperties()[chainSymbol];\n  if (!basicChainProperties) {\n    return null;\n  }\n  const chainDetails: ChainDetails = {\n    ...basicChainProperties,\n    allbridgeChainId: dto.chainId,\n    bridgeAddress: dto.bridgeAddress,\n    transferTime: mapTransferTimeFromDto(dto.transferTime),\n    txCostAmount: dto.txCostAmount,\n    confirmations: dto.confirmations,\n    suiAddresses: dto.suiAddresses,\n  };\n  return {\n    ...chainDetails,\n    tokens: dto.tokens.map((tokenDto) => mapTokenWithChainDetailsFromDto(chainDetails, tokenDto)),\n  };\n}\n\nexport function mapPoolKeyToPoolKeyObject(poolKey: string): PoolKeyObject {\n  const dividerPosition = poolKey.indexOf(\"_\");\n  return {\n    chainSymbol: poolKey.substring(0, dividerPosition),\n    poolAddress: poolKey.substring(dividerPosition + 1),\n  };\n}\n\nexport function mapPoolKeyObjectToPoolKey(poolKeyObject: PoolKeyObject): string {\n  return poolKeyObject.chainSymbol + \"_\" + poolKeyObject.poolAddress;\n}\n\nexport function mapChainDetailsMapToPoolKeyObjects(chainDetailsMap: ChainDetailsMap): PoolKeyObject[] {\n  const result = [];\n  for (const [chainSymbolValue, chainDetails] of Object.entries(chainDetailsMap)) {\n    const chainSymbol = chainSymbolValue;\n    for (const token of chainDetails.tokens) {\n      result.push({\n        chainSymbol,\n        poolAddress: token.poolAddress,\n      });\n    }\n  }\n  return result;\n}\n\nexport function mapPoolInfoResponseToPoolInfoMap(responseBody: PoolInfoResponse): PoolInfoMap {\n  const poolInfoMap: PoolInfoMap = {};\n  for (const [chainSymbolValue, poolInfoByAddress] of Object.entries(responseBody)) {\n    const chainSymbol = chainSymbolValue;\n    for (const [poolAddress, poolInfo] of Object.entries(poolInfoByAddress)) {\n      poolInfo.imbalance = calculatePoolInfoImbalance(poolInfo);\n      poolInfoMap[mapPoolKeyObjectToPoolKey({ chainSymbol, poolAddress })] = poolInfo;\n    }\n  }\n  return poolInfoMap;\n}\n"]}